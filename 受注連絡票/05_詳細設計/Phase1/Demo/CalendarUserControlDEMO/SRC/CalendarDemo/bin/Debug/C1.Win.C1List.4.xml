<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>C1.Win.C1List.4</name>
  </assembly>
  <members>
    <member name="T:C1.Data.IC1GetDataSource">
      <summary></summary>
    </member>
    <member name="M:C1.Data.IC1GetDataSource.GetDataSource">
      <summary>データソースを取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Data.IC1GetDataSource.GetDataView">
      <summary>データビューを取得します。</summary>
      <returns></returns>
    </member>
    <member name="T:C1.Data.IC1DataSource">
      <summary></summary>
    </member>
    <member name="M:C1.Data.IC1DataSource.SetBoundControl(System.Object,System.String)">
      <summary>連結コントロールを設定します。</summary>
      <param name="boundControl">連結コントロール。</param>
      <param name="name">名前。</param>
    </member>
    <member name="M:C1.Data.IC1DataSource.GetVirtualSegmentSize">
      <summary>仮想セグメントのサイズを取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Data.IC1DataSource.SetVisibleRowCount(System.Int32,System.String)">
      <summary>表示されている行数を設定します。</summary>
      <param name="value">値。</param>
      <param name="name">名前。</param>
    </member>
    <member name="M:C1.Data.IC1DataSource.BoundControlScrolled">
      <summary>スクロールされるコントロールを連結します。</summary>
    </member>
    <member name="T:C1.Data.IC1ComplexBoundControl">
      <summary></summary>
    </member>
    <member name="M:C1.Data.IC1ComplexBoundControl.GetFirstVisibleRow">
      <summary>最初に表示されている行を取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Data.IC1ComplexBoundControl.GetVisibleRowCount">
      <summary>表示されている行数を取得します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Data.IC1ComplexBoundControl.ScrollToRow(System.Int32,System.Int32)">
      <summary>行にスクロールします。</summary>
      <param name="firstVisibleRow">最初に表示される行。</param>
      <param name="rowCount">行数。</param>
    </member>
    <member name="T:C1.Data.IC1EditableObject">
      <summary></summary>
    </member>
    <member name="M:C1.Data.IC1EditableObject.RequestModification">
      <summary>変更を要求します。</summary>
    </member>
    <member name="T:C1.Data.IC1DataView">
      <summary></summary>
    </member>
    <member name="M:C1.Data.IC1DataView.SetRowFilter(System.String)">
      <summary>行フィルタを設定します。</summary>
      <param name="value">値。</param>
    </member>
    <member name="M:C1.Data.IC1DataView.SetSort(System.String)">
      <summary>ソートを設定します。</summary>
      <param name="value">値。</param>
    </member>
    <member name="M:C1.Data.IC1DataView.Refresh">
      <summary>このインスタンスをリフレッシュします。</summary>
    </member>
    <member name="T:C1.Data.LateBindingIC1DataSource">
      <summary>連結コントロールなどの C1Data コンシューマーによって使用されるインタフェースに リフレクションによって動的な遅延連結アクセスを行います。</summary>
    </member>
    <member name="M:C1.Data.LateBindingIC1DataSource.GetDataSource(System.Object)">
      <summary>データソースを取得します。</summary>
      <param name="obj">オブジェクト。</param>
      <returns></returns>
    </member>
    <member name="T:C1.Data.LateBindingIC1ComplexBoundControl">
      <summary></summary>
    </member>
    <member name="M:C1.Data.LateBindingIC1ComplexBoundControl.NewLateBindingIC1ComplexBoundControl(System.Object)">
      <summary>C1 複合連結コントロールインタフェースへの遅延連結を作成します。</summary>
      <param name="obj">オブジェクト。</param>
      <returns></returns>
    </member>
    <member name="T:C1.Data.LateBindingIC1DataView">
      <summary></summary>
    </member>
    <member name="M:C1.Data.LateBindingIC1DataView.GetDataView(System.Object)">
      <summary>データビューを取得します。</summary>
      <param name="obj">オブジェクト。</param>
      <returns></returns>
    </member>
    <member name="T:C1.C1PreviewClient.GraphicsHolder">
      <summary>グラフィックオブジェクトを保持します。そのグラフィックオブジェクトの作成に使用された（プリンタ）デバイスまたはビットマップがあれば、 それも一緒に保持します。ポイントは、グラフィックオブジェクトが不要になった場合に、それと一緒にデバイスまたはビットマップを 破棄することです（リソースリークを避けるために）。</summary>
    </member>
    <member name="F:C1.C1PreviewClient.GraphicsHolder.Empty">
      <summary>空のグラフィックホルダインスタンス。</summary>
    </member>
    <member name="M:C1.C1PreviewClient.GraphicsHolder.FromDC(System.IntPtr)">
      <summary>デバイスコンテキストからグラフィックホルダを作成します。 ホルダが破棄されると、グラフィックとデバイスコンテキストの両方が解放されます（デバイスコンテキストの DeleteDC が呼び出される）。</summary>
      <param name="dc">グラフィックの作成元のデバイスコンテキスト。</param>
      <returns>グラフィックホルダの新しいインスタンス。</returns>
    </member>
    <member name="M:C1.C1PreviewClient.GraphicsHolder.FromGraphics(System.Drawing.Graphics)">
      <summary>グラフィックインスタンスからグラフィックホルダを作成します。 ホルダが破棄されると、グラフィックだけが残されます（破棄されません）。</summary>
      <param name="g">新しいホルダに保存するグラフィック。</param>
      <returns>グラフィックホルダの新しいインスタンス。</returns>
    </member>
    <member name="M:C1.C1PreviewClient.GraphicsHolder.FromScreen">
      <summary>画面からグラフィックホルダを作成します。失敗すると（Azure 上など）、ビットマップからグラフィックが作成されます。 ホルダが破棄されると、グラフィックとビットマップの両方が解放されます。</summary>
      <returns>グラフィックホルダの新しいインスタンス。</returns>
    </member>
    <member name="M:C1.C1PreviewClient.GraphicsHolder.FromBitmap">
      <summary>ビットマップからグラフィックホルダを作成します。ホルダが破棄されると、グラフィックとビットマップが解放されます。 これが失敗することはありません。</summary>
      <returns>グラフィックホルダの新しいインスタンス。</returns>
    </member>
    <member name="M:C1.C1PreviewClient.GraphicsHolder.Dispose">
      <summary>現在のグラフィックホルダを破棄します。</summary>
    </member>
    <member name="P:C1.C1PreviewClient.GraphicsHolder.Graphics">
      <summary>現在のインスタンスによって保持されているグラフィックを取得します。</summary>
    </member>
    <member name="P:C1.C1PreviewClient.GraphicsHolder.DpiX">
      <summary>現在のインスタンスによって保持されているグラフィックの水平解像度を取得します。</summary>
    </member>
    <member name="P:C1.C1PreviewClient.GraphicsHolder.DpiY">
      <summary>現在のインスタンスによって保持されているグラフィックの垂直解像度を取得します。</summary>
    </member>
    <member name="T:C1.C1PreviewClient.Serialization.ZipStructureException">
      <summary>基になる zip ストリームが無効な形式の場合に、C1DX または C1MDX シリアライズ/デシリアライズ中に 発生した例外を表します。</summary>
    </member>
    <member name="T:C1.C1PreviewClient.Serialization.SerializeExceptionBase">
      <summary>
        <see cref="T:C1.C1PreviewClient.Serialization.SerializeException" />クラスと
        <see cref="T:C1.C1PreviewClient.Serialization.DeserializeException" />クラスの抽象基本クラスです。
      </summary>
    </member>
    <member name="P:C1.C1PreviewClient.Serialization.SerializeExceptionBase.Log">
      <summary>シリアライズまたはデシリアライズ中に発生した例外の原因となったアクションを 説明する文字列のリストを取得します。</summary>
    </member>
    <member name="T:C1.C1PreviewClient.Serialization.SerializeException">
      <summary>シリアライズ中に発生した例外を表します。</summary>
    </member>
    <member name="T:C1.C1PreviewClient.Serialization.DeserializeException">
      <summary>デシリアライズ中に発生した例外を表します。</summary>
    </member>
    <member name="P:C1.C1PreviewClient.Serialization.DeserializeException.LineNumber">
      <summary>例外に関連付けられた行番号を取得します。</summary>
    </member>
    <member name="P:C1.C1PreviewClient.Serialization.DeserializeException.LinePosition">
      <summary>例外に関連付けられた行内の位置を取得します。</summary>
    </member>
    <member name="T:C1.Util.CodeRange">
      <summary>文字コードの範囲を表します。</summary>
    </member>
    <member name="M:C1.Util.CodeRange.#ctor(System.Char)">
      <summary></summary>
      <param name="ch">追加文字。</param>
    </member>
    <member name="M:C1.Util.CodeRange.#ctor(System.Char,System.Char)">
      <summary></summary>
      <param name="first"></param>
      <param name="last"></param>
    </member>
    <member name="M:C1.Util.CodeRange.Clone">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Util.CodeRange.Contains(C1.Util.CodeRange)">
      <summary></summary>
      <param name="cr"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Util.CodeRange.First">
      <summary>文字の開始コード。</summary>
    </member>
    <member name="P:C1.Util.CodeRange.Last">
      <summary>文字の終了コード。</summary>
    </member>
    <member name="T:C1.Util.CodeRanges">
      <summary>
        一意の
        <see cref="T:C1.Util.CodeRange" />オブジェクトのコレクションを表します。 コレクション内のすべての CodeRange オブジェクトは重ならず、First フィールドに 基づいてソートされています。
      </summary>
    </member>
    <member name="M:C1.Util.CodeRanges.AddNoCheck(C1.Util.CodeRange)">
      <summary>
        現在のオブジェクトに
        <see cref="T:C1.Util.CodeRange" />オブジェクトをチェックなしで追加します。通常はデシリアライズ中に使用されます。
      </summary>
      <param name="cr">
        追加する
        <see cref="T:C1.Util.CodeRange" />。
      </param>
    </member>
    <member name="M:C1.Util.CodeRanges.GetGlyphs">
      <summary>このコード範囲のリストに含まれる文字の配列を取得します。</summary>
      <returns>文字の配列。</returns>
    </member>
    <member name="M:C1.Util.CodeRanges.ContainsAllChars">
      <summary>
        この
        <see cref="T:C1.Util.CodeRanges" />に 0x0000 ～ 0xFFFF のすべての文字が 含まれるかどうかを示す値を取得します。
      </summary>
      <returns></returns>
    </member>
    <member name="T:C1.Util.UIStringsItemEventHandler">
      <summary>
        <see cref="T:C1.Util.UIStrings" />項目関連イベントのハンドラを表します。
      </summary>
    </member>
    <member name="T:C1.Util.UIStringsItemEventArgs">
      <summary>
        <see cref="T:C1.Util.UIStrings" />項目関連イベントにイベントデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Util.UIStringsItemEventArgs.Key">
      <summary>追加または変更する項目のキーを取得します。</summary>
      <value>キー。</value>
    </member>
    <member name="P:C1.Util.UIStringsItemEventArgs.Value">
      <summary>文字列値を取得します。</summary>
      <value>値。</value>
    </member>
    <member name="P:C1.Util.UIStringsItemEventArgs.IsDefault">
      <summary>このインスタンスがデフォルトかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスがデフォルトの場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.Util.UIStringsItemEventArgs.Description">
      <summary>説明を取得します。</summary>
      <value>説明。</value>
    </member>
    <member name="T:C1.Util.UIStrings">
      <summary>エンドユーザーに表示される UI 文字列のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Util.UIStrings.Add(System.Object,System.Int32,System.String,System.String)">
      <summary>順序を示す文字列をコレクションに追加します。</summary>
      <param name="key">文字列のキー。</param>
      <param name="ordinal">文字列の順序。</param>
      <param name="value">文字列。</param>
      <param name="description">文字列の説明。</param>
    </member>
    <member name="M:C1.Util.UIStrings.Add(System.Object,System.String,System.String)">
      <summary>アルファベット順にコレクションに文字列を追加します。</summary>
      <param name="key">文字列のキー。</param>
      <param name="value">文字列。</param>
      <param name="description">文字列の説明。</param>
    </member>
    <member name="M:C1.Util.UIStrings.AddInOrder(System.Object,System.String,System.String)">
      <summary>順序を維持しながらコレクションに文字列を追加します。</summary>
      <param name="key">文字列のキー。</param>
      <param name="value">文字列。</param>
      <param name="description">文字列の説明。</param>
    </member>
    <member name="M:C1.Util.UIStrings.Reset">
      <summary>コレクションのすべての文字列をデフォルト値に設定します。</summary>
    </member>
    <member name="M:C1.Util.UIStrings.ShouldSerialize">
      <summary>現在のコレクションの中にデフォルト値以外の文字列が あるかどうかを示します。</summary>
      <returns>
        デフォルト値以外の文字列がある場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.Util.UIStrings.IsDefault(System.Object)">
      <summary>コレクション内の文字列がデフォルト値かどうかをテストします。</summary>
      <param name="key">テストする文字列のキー。</param>
      <returns>
        文字列がデフォルト値の場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.Util.UIStrings.GetDescription(System.Object)">
      <summary>文字列の説明を返します。</summary>
      <param name="key">説明の取得元の文字列のキー。</param>
      <returns>文字列の説明</returns>
    </member>
    <member name="M:C1.Util.UIStrings.Reset(System.Object)">
      <summary>文字列をデフォルト値にリセットします。</summary>
      <param name="key">リセットする文字列のキー。</param>
    </member>
    <member name="M:C1.Util.UIStrings.GetKeyAt(System.Int32)">
      <summary>指定されたインデックスを持つ項目のキーを返します。</summary>
      <param name="index">項目のインデックス。</param>
      <returns>項目のキー。</returns>
    </member>
    <member name="M:C1.Util.UIStrings.GetValueAt(System.Int32)">
      <summary>インデックスに基づいて文字列を取得します。</summary>
      <param name="index">文字列のインデックス。</param>
      <returns>文字列。</returns>
    </member>
    <member name="M:C1.Util.UIStrings.SetValueAt(System.Int32,System.String)">
      <summary>指定されたインデックスを持つ文字列の値を設定します。</summary>
      <param name="index">文字列のインデックス。</param>
      <param name="value">新しい文字列値。</param>
    </member>
    <member name="M:C1.Util.UIStrings.OnItemAdded(C1.Util.UIStringsItemEventArgs)">
      <summary>
        <see cref="E:C1.Util.UIStrings.ItemAdded" />イベントを発生させます。
      </summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:C1.Util.UIStrings.OnItemChanged(C1.Util.UIStringsItemEventArgs)">
      <summary>
        <see cref="E:C1.Util.UIStrings.ItemChanged" />イベントを発生させます。
      </summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="M:C1.Util.UIStrings.OnCollectionChanged(System.EventArgs)">
      <summary>
        <see cref="E:C1.Util.UIStrings.CollectionChanged" />イベントを発生させます。
      </summary>
      <param name="e">イベントデータ。</param>
    </member>
    <member name="P:C1.Util.UIStrings.Count">
      <summary>コレクションに含まれる要素の数を取得します。</summary>
    </member>
    <member name="E:C1.Util.UIStrings.ItemAdded">
      <summary>コレクションに新しい項目が追加されたときに発生します。</summary>
    </member>
    <member name="E:C1.Util.UIStrings.ItemChanged">
      <summary>コレクション内の項目が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Util.UIStrings.CollectionChanged">
      <summary>コレクションが変更されると発生します。</summary>
    </member>
    <member name="T:C1.Util.UIStrings.TypeConverter">
      <summary>
        <see cref="T:C1.Util.UIStrings" />型の型変換を提供します。
      </summary>
    </member>
    <member name="M:C1.Util.UIStrings.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>内部使用。</summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Util.UIStrings.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>内部使用。</summary>
      <param name="context"></param>
      <param name="value"></param>
      <param name="attrFilter"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Util.UIStrings.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>内部使用。</summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.C1Combo">
      <summary>C1Combo コントロールは、複数の列を含むドロップダウンリストボックスとして使用されます。</summary>
      <remarks>
        <para>C1Combo は C1List から独立しているため、単独で使用することも、C1List と組み合わせて使用することもできます。 C1List コントロールと同様に、設計時に C1Combo コントロールを Visual Basic のフォームに配置できます。</para>
        <para>C1Combo コントロールは、インクリメンタルサーチもサポートしています。</para>
      </remarks>
    </member>
    <member name="T:C1.Win.C1List.ComboBoxContainer">
      <summary>ComboBoxContainer の概要を説明します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.#ctor">
      <summary>ComboBoxContainer クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.#ctor(System.Windows.Forms.Control,System.Windows.Forms.Control)">
      <summary>ComboBoxContainer クラスの新しいインスタンスを初期化します。</summary>
      <param name="contentCtrl">エディタコントロール。</param>
      <param name="dropDownCtrl">ドロップダウンコントロール。</param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.Dispose(System.Boolean)">
      <summary></summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.ProcessKeyPreview(System.Windows.Forms.Message@)">
      <summary></summary>
      <param name="m"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary></summary>
      <param name="m"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnOpen(System.EventArgs)">
      <summary>Open イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnBeforeOpen(System.ComponentModel.CancelEventArgs)">
      <summary>BeforeOpen イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnClose(System.EventArgs)">
      <summary>Close イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnBorderStyleChanged(System.EventArgs)">
      <summary>BorderStyleChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnComboBoxStyleChanged(System.EventArgs)">
      <summary>CombBoxStyleChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnHandleCreated(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary></summary>
      <param name="levent"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary></summary>
      <param name="keyData"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.IsInputKey(System.Windows.Forms.Keys)">
      <summary></summary>
      <param name="keyData"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.IsInputChar(System.Char)">
      <summary></summary>
      <param name="charCode"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnMouseEnter(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnMouseLeave(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.GetPopupLocation">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.PerformDropDown">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.PerformCloseUp">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
      <summary></summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="width"></param>
      <param name="height"></param>
      <param name="specified"></param>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.WndProc(System.Windows.Forms.Message@)">
      <summary></summary>
      <param name="m"></param>
    </member>
    <member name="E:C1.Win.C1List.ComboBoxContainer.BeforeOpen">
      <summary>リストがドロップダウンされる前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ComboBoxContainer.Open">
      <summary>コントロールが閉じている間に、ユーザーがドロップダウンボタンをクリックするか、［Alt］+［↓］キーを押して、コントロールのリスト部分を開いたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ComboBoxContainer.Close">
      <summary>コントロールが開いている間に、ユーザーがドロップダウンボタンをクリックするか、［Alt］+［↓］キーを押して、コントロールのリスト部分を開いたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ComboBoxContainer.ComboStyleChanged">
      <summary>ユーザーが ComboStyle プロパティの値を変更したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ComboBoxContainer.BorderStyleChanged">
      <summary>BorderStyle プロパティが変更されるときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.VisualStyle">
      <summary>コントロールの全体的な外観を決定する値を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用すると、コントロールの外観を アプリケーションの外観に合わせてすばやくカスタマイズできます。</para>
        <para>
          使用できる設定には、
          <b>System</b>、さまざまな Microsoft Office の配色、 および
          <b>Custom</b>があります（コントロールの標準スタイルと外観プロパティに依存）。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1List.ComboBoxContainer.VisualStyleChanged">
      <summary>VisualStyle プロパティが変更されると発生します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ReadOnly">
      <summary>コントロール内のテキストを変更できるかどうかを設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.AutoSize">
      <summary>コンボボックスの高さをサイズ変更できるかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.RightToLeft">
      <summary>True の場合は、右から左に表記されるテキストの機能が適用されます。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.BorderStyle">
      <summary>コントロールの境界線のスタイルを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ButtonWidth">
      <summary>コンボボタンの幅を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ComboStyle">
      <summary>コントロールの表示タイプと動作を示す値を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ContextMenu">
      <summary>コントロールに関連付けられたショートカットメニューを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.DroppedDown">
      <summary>ドロップダウンウィンドウが可視かどうかを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.Focused">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.FlatStyle">
      <summary>コンボボックスの 3D の外観を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.GapHeight">
      <summary>コンボボックスの編集部分とドロップダウン部分の間の距離を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ContainsFocus">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ContentHeight">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.DropDownHeight">
      <summary>ドロップダウンの高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.DropDownWidth">
      <summary>ドロップダウンの幅を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.DropdownPosition">
      <summary>ドロップダウンの位置を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.ToolTip">
      <summary>ツールチップのテキストを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.#ctor">
      <summary>C1Combo コントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.Dispose(System.Boolean)">
      <summary>オブジェクトによって使用されるアンマネージリソースを解放し、オプションでマネージリソースも解放します。</summary>
      <param name="disposing">マネージリソースとアンマネージリソースの両方を解放する場合は、true。アンマネージリソースだけを解放する場合は、false。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.CreateAccessibilityInstance">
      <summary>このコントロールの新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>
        コントロールの新しい
        <see cref="T:System.Windows.Forms.AccessibleObject" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.LoadLayout(System.String)">
      <summary>保存されているレイアウトを所定のファイルから読み込みます。</summary>
      <param name="filename">保存されているレイアウトを含むファイル。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.LoadLayout(System.IO.Stream)">
      <summary>保存されているレイアウトを所定のストリームから読み込みます。</summary>
      <param name="stream">保存されているレイアウトを含むストリーム。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SaveLayout(System.IO.Stream)">
      <summary>グリッドのレイアウトを保存します。</summary>
      <param name="stream">グリッドのレイアウトを含むストリーム。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SaveLayout(System.String,System.Boolean)">
      <summary>グリッドのレイアウトを保存します。</summary>
      <param name="filename">グリッドのレイアウトを含むファイル。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SaveLayout(System.IO.Stream,System.Boolean)">
      <summary>グリッドのレイアウトを保存します。</summary>
      <param name="stream">グリッドのレイアウトを含むストリーム。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.BeginInit">
      <summary>オブジェクトに初期化が開始されたことを通知します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.EndInit">
      <summary>オブジェクトに初期化が完了したことを通知します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ShouldSerializeCaptionHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ShouldSerializeColumnCaptionHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ShouldSerializeColumnFooterHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ShouldSerializeItemHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ResetVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1List.C1Combo.VisualStyle" />をデフォルト値にリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ShouldSerializeVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1List.C1Combo.VisualStyle" />がシリアライズされるかどうかをテストします。
      </summary>
      <returns>
        <see cref="P:C1.Win.C1List.C1Combo.VisualStyle" />がシリアライズされる場合は true、そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnChange(System.EventArgs)">
      <summary>Change イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnLeftColChange(C1.Win.C1List.SplitEventArgs)">
      <summary>LeftColChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnColFootClick(C1.Win.C1List.ColEventArgs)">
      <summary>ColFootClick イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnColHeadClick(C1.Win.C1List.ColEventArgs)">
      <summary>ColHeadClick イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnAfterSort(C1.Win.C1List.FilterEventArgs)">
      <summary>AfterSort イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnColMove(C1.Win.C1List.ColMoveEventArgs)">
      <summary>ColMove イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnColResize(C1.Win.C1List.ColResizeEventArgs)">
      <summary>ColResize イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnComboBoxStyleChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnComboBoxStyleChange(System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnDataSourceChanged(System.EventArgs)">
      <summary>DataSourceChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnError(C1.Win.C1List.ErrorEventArgs)">
      <summary>Error イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnDisplayMemberChanged(System.EventArgs)">
      <summary>DisplayMemberChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnFetchRowStyle(C1.Win.C1List.FetchRowStyleEventArgs)">
      <summary>FetchRowStyle イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnFetchCellStyle(C1.Win.C1List.FetchCellStyleEventArgs)">
      <summary>FetchCellStyle イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnFetchCellTips(C1.Win.C1List.FetchCellTipsEventArgs)">
      <summary>FetchCellTips イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnFetchScrollTips(C1.Win.C1List.FetchScrollTipsEventArgs)">
      <summary>FetchScrollTips イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnGotFocus(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnLostFocus(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnFormatText(C1.Win.C1List.FormatTextEventArgs)">
      <summary>FormatText イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnItemChanged(System.EventArgs)">
      <summary>ItemChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnRowChange(System.EventArgs)">
      <summary>RowChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnRowResize(System.ComponentModel.CancelEventArgs)">
      <summary>RowSize イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnScroll(System.ComponentModel.CancelEventArgs)">
      <summary>Scroll イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnDrawItem(C1.Win.C1List.OwnerDrawCellEventArgs)">
      <summary>DrawItem イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary></summary>
      <param name="drgevent"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary></summary>
      <param name="drgevent"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary></summary>
      <param name="drgevent"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnSelChange(System.ComponentModel.CancelEventArgs)">
      <summary>SelChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnSelectionChangeCommitted(System.EventArgs)">
      <summary>SelectionChangeCommitted イベントを発生させます。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnSelectedValueChanged(System.EventArgs)">
      <summary>SelectedValueChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnTopIndexChange(C1.Win.C1List.SplitEventArgs)">
      <summary>TopIndexChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnUnboundColumnFetch(C1.Win.C1List.UnboundColumnFetchEventArgs)">
      <summary>UnboundColumnFetch を発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnNotInList(C1.Win.C1List.NotInListEventArgs)">
      <summary>NotInList イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnMismatch(C1.Win.C1List.MismatchEventArgs)">
      <summary>Mismatch イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnValueMemberChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)">
      <summary>リスト、列、またはスプリット内のセルのフォントと色をその値に基づいて制御します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.AddItem(System.String)">
      <summary>AddItem モードで、末尾に新しい項目を追加します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.AddItemTitles(System.String)">
      <summary>AddItem モードで、列のタイトルを設定します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.AddItemF(System.String)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.AddItemEnd">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SuspendBinding">
      <summary>データソースからのデータ連結通知を一時停止します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ResumeBinding">
      <summary>データソースからのデータ連結通知を再開します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)">
      <summary>リスト、列、またはスプリット内のセルのフォントと色をその内容に基づいて制御します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.C1Combo.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag,System.String)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.C1Combo.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.CaptureImage">
      <summary>ドロップダウンリストコントロールの画像を返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.CellContaining(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>座標で指定されたセルの位置を返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ColContaining(System.Int32)">
      <summary>指定された座標がある列のインデックスを返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>以前の AddCellStyle メソッドの呼び出しで設定されたセル条件を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearFields">
      <summary>デフォルトのリストレイアウトを復元します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearItems">
      <summary>AddItem モードで、すべての項目をクリアします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearSelCols">
      <summary>現在のスプリットで選択されている列をすべて選択解除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ClearSelected">
      <summary>すべての行の選択をクリアします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.CloseCombo">
      <summary>コンボのドロップダウンリストを閉じます。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindString(System.String)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s で始まるセルテキストがある最初の行インデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindString(System.String,System.Int32)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s で始まるセルテキストがある、startIndex 後の最初の行インデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindString(System.String,System.Int32,System.Int32)">
      <summary>指定された列で、文字列 s で始まるセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindString(System.String,System.Int32,System.String)">
      <summary>指定された列で、文字列 s で始まるセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindStringExact(System.String)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s と正確に一致するセルテキストがある最初の行インデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>指定された列で、文字列 s と正確に一致するセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindStringExact(System.String,System.Int32,System.String)">
      <summary>指定された列で、文字列 s と正確に一致するセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.FindStringExact(System.String,System.Int32)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s と正確に一致するセルテキストがある、startIndex 後の最初の行インデックスを検索します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.GetItemText(System.Int32,System.Int32)">
      <summary>C1Combo のセルテキストを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.GetItemText(System.Int32,System.String)">
      <summary>任意のセルのセルテキストを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.HoldFields">
      <summary>現在の列/フィールドレイアウトを保持します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.InsertHorizontalSplit(System.Int32)">
      <summary>指定されたインデックスに左右分割を追加します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.InsertItem(System.String,System.Int32)">
      <summary>AddItem モードで、新しい項目をインデックス位置に追加します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.InsertVerticalSplit(System.Int32)">
      <summary>指定されたインデックスに上下分割を追加します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.OpenCombo">
      <summary>コンボのリストをドロップダウンします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.PointAt(System.Int32,System.Int32)">
      <summary>指定された XY 座標にあるリスト要素の種類を示す PointAtEnum 定数の 1 つを返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.Rebind">
      <summary>連結データソースとの接続を再確立します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.Rebind(System.Boolean)">
      <summary>連結データソースとの接続を再確立します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.RemoveHorizontalSplit(System.Int32)">
      <summary>指定されたインデックスから左右分割を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.RemoveItem(System.Int32)">
      <summary>AddItem モードで、指定された位置にある項目を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.RemoveVerticalSplit(System.Int32)">
      <summary>指定されたインデックスから上下分割を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.RowContaining(System.Int32)">
      <summary>指定された座標を含む表示行の 0 から始まるインデックスを返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.RowTop(System.Int32)">
      <summary>表示されている行の上端の Y 座標を返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.ScrollCtl(System.Int32,System.Int32)">
      <summary>指定された行数および列数だけリストデータ領域をスクロールします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.Select(System.Int32,System.Int32)">
      <summary>コンボボックスのテキストの指定されたテキストを選択します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SelectAll">
      <summary>コンボボックスのテキストのすべてのテキストを選択します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SetAddItemData(System.Int32,System.Int32,System.String)">
      <summary>AddItem モードで、セルデータを更新します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.Sort(System.Int32,C1.Win.C1List.SortDirEnum)">
      <summary>コントロールの指定された列をソートします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.Sort(System.String,C1.Win.C1List.SortDirEnum)">
      <summary>コントロールの指定された列をソートします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.SplitContaining(System.Int32,System.Int32)">
      <summary>指定された XY 座標にあるスプリットのインデックス値を返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1Combo.PerformCloseUp">
      <summary></summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.Change">
      <summary>ComboStyle プロパティが 0（Dropdown Combo）または 1（Simple Combo）に設定されており、ユーザーが C1Combo コントロールのテキストボックス部分に入力してテキストを変更した場合にのみ、発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.ColMove">
      <summary>ユーザーが選択した列の移動を完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.ColResize">
      <summary>ユーザーが列のサイズ変更を完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.ColFootClick">
      <summary>コントロールのフッターがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.ColHeadClick">
      <summary>コントロールのヘッダーがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.AfterSort">
      <summary>列ヘッダーをクリックして列がソートされた後に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.ItemChanged">
      <summary>コンボボックスのテキストボックス部分の内容とリスト部分の現在の行が同時に変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.Scroll">
      <summary>ユーザーがスクロールバーを使用して、コントロールを水平方向または垂直方向にスクロールしたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.DataSourceChanged">
      <summary>連結データソースが変更または要求されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.LeftColChange">
      <summary>リストやスプリットの最初に表示されている列が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.NotInList">
      <summary>ユーザーがリスト部分にない値をコンボボックスのテキストボックス部分に入力したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.Mismatch">
      <summary>ユーザーがリスト部分にない値をコンボボックスのテキストボックス部分に入力したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.RowChange">
      <summary>ユーザーがリストの行を変更したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.RowResize">
      <summary>ユーザーがリスト行のサイズ変更を完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.SelChange">
      <summary>ユーザーが異なる範囲の行または列を選択したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.SelectionChangeCommitted">
      <summary>選択項目が変更され、その変更が C1ComboBox に表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.Error">
      <summary>データアクセスエラーが発生すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.FormatText">
      <summary>NumberFormat プロパティが設定されている列のセルデータが表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.DrawItem">
      <summary>再描画する必要があるセルがあり、DrawMode が OwnerDrawFixed または OwnerDrawVariable に設定されているときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.UnboundColumnFetch">
      <summary>連結コントロールで非連結列のセルの値を表示する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.FetchCellTips">
      <summary>コントロールがフォーカスを持ち、マウスポインタがデータセル、列ヘッダー、スプリットヘッダー、またはコントロールのキャプションバーの上にアイドル状態でしばらく（CellTipsDelay プロパティで定義）置かれているときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.FetchCellStyle">
      <summary>FetchStyle プロパティが True に設定されている列のセルデータがリストに表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.FetchRowStyle">
      <summary>FetchRowStyles プロパティが True に設定されている場合に、リストのデータ行が表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.FetchScrollTips">
      <summary>リストがフォーカスを持ち、マウスでスクロールボックスが移動されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.TopIndexChange">
      <summary>コントロールまたはスプリットの最初の表示行が変更された場合に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.SelectedValueChanged">
      <summary>SelectedValue プロパティが変化すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.DisplayMemberChanged">
      <summary>DisplayMember プロパティが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.C1Combo.ValueMemberChanged">
      <summary>ValueMember プロパティが変化すると発生します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AddItemCols">
      <summary>AddItem モードで、列数を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AddItemSeparator">
      <summary>AddItem モードで、AddItem メソッドを使用する場合の列の区切り文字列を決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AllowColMove">
      <summary>対話式の列の移動を有効または無効にします。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AllowColSelect">
      <summary>対話式の列の選択を有効または無効にします。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AllowHorizontalSplit">
      <summary>ユーザーが左右分割を作成できるかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AllowVerticalSplit">
      <summary>ユーザーが上下分割をサイズ変更できるかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AllowSort">
      <summary>列のソートを許可するかどうかを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AlternatingRows">
      <summary>リストまたはスプリットで、奇数番号の行と偶数番号の行を異なるスタイルで表示するかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AutoCompletion">
      <summary>編集中に一致したインクリメンタルサーチ値をコンボのテキスト部分に自動的にコピーするかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AutoDropDown">
      <summary>ユーザーがセルに文字を入力すると自動的にコントロールを開くかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AllowDrag">
      <summary>ドラッグアンドドロップでテキストをエディタから取得できるかどうかを示すフラグを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DragMode">
      <summary>コンボボックスとプログラマのどちらがドラッグ操作を処理するかどうかを示す値を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DropMode">
      <summary>コンボボックスがドロップ操作を処理する方法を示す値を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.BackColor">
      <summary>コントロールのリスト部分の背景色を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.FetchRowStyles">
      <summary>FetchRowStyle イベントが発生するかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Bookmark">
      <summary>リストの現在の行を識別するブックマークを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Caption">
      <summary>リストのキャプションを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CaptionHeight">
      <summary>リストのキャプション領域の高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CaptionStyle">
      <summary>キャプション領域の外観を制御する Style オブジェクトを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CaptionVisible">
      <summary>リストのキャプションを表示するかどうかを示すフラグを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CellTips">
      <summary>マウスポインタがアイドル状態のときにリストにテキストウィンドウをポップアップ表示するかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CellTipsDelay">
      <summary>セルチップウィンドウを表示するまでの時間を決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CellTipsWidth">
      <summary>セルチップウィンドウの幅を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Col">
      <summary>現在のセルの列の位置を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ColumnFooters">
      <summary>フッターを表示するかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ColumnHeaders">
      <summary>ヘッダーを表示するかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ColumnCaptionHeight">
      <summary>列ヘッダーの高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ColumnFooterHeight">
      <summary>列フッターの高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Columns">
      <summary>C1DataColumn オブジェクトのコレクションを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ColumnWidth">
      <summary>コントロールの各列の幅を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.CharacterCasing">
      <summary>すべての文字をそのままにするか、大文字または小文字にするかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DataMode">
      <summary>Mormal モードまたは AddItem モードを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DeadAreaBackColor">
      <summary>リストのデッドエリアの背景色を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DefColWidth">
      <summary>自動的に作成される列の幅を指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DisplayMember">
      <summary>インクリメンタルサーチに使用する DataSource フィールドを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DrawMode">
      <summary>コードまたはオペレーティングシステムがリスト内の要素の描画を処理するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.EditorBackColor">
      <summary>コントロールのエディタ部分の背景色を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.EditorForeColor">
      <summary>コントロールのエディタ部分の前景色を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.EditorFont">
      <summary>C1Combo コントロールのテキストボックス部分に関連付けられているフォントを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.EditorHeight">
      <summary>エディタの高さを取得/設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.EmptyRows">
      <summary>リストの最後のデータ行の下に行を表示する方法を決定する値を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ExtendRightColumn">
      <summary>最後の列を拡大してリストのデッドエリアを埋めるかどうかを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.FlatStyle">
      <summary>リストの外観を決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ForeColor">
      <summary>コントロールのリスト部分の前景色を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Font">
      <summary>C1Combo コントロールのリスト部分に関連付けられているフォントを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.FooterStyle">
      <summary>列フッターの外観を制御する Style オブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.FocusedSplit">
      <summary>フォーカスがある Split を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.HeadingStyle">
      <summary>列ヘッダーの外観を制御する Style オブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.HighLightRowStyle">
      <summary>強調表示された行の外観を制御する Style オブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.HScrollBar">
      <summary>水平スクロールバーの外観を制御する HBar オブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.IntegralHeight">
      <summary>行を部分的に表示するかどうかを制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ItemHeight">
      <summary>すべてのリスト行の高さを返すまたは設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.KeepForeColor">
      <summary>コンボボックスが無効な場合に、テキストボックスの前景色を変更しないかどうかを決定します。これは、ComboStyle が DropdownList の場合にのみ有効です。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.LeftCol">
      <summary>リストまたはスプリットの左端の列の 0 から始まるインデックスを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.LimitToList">
      <summary>ユーザーがリストに存在しないエントリを入力できるかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ListCount">
      <summary>コントロールにある行数の合計を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MatchCol">
      <summary>インクリメンタルサーチを実行する列を指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MatchCompare">
      <summary>検索の比較モードを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MatchEntry">
      <summary>コントロールがユーザーの入力に基づいて検索を実行する方法を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MatchEntryTimeout">
      <summary>インクリメンタルサーチのタイムアウト（ミリ秒単位）を示す値を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MaxDropDownItems">
      <summary>コンボボックスのドロップダウン部分の項目の最大数です。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MaxLength">
      <summary>コンボボックスの編集部分に入力できる最大文字数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.MouseCursor">
      <summary>マウスポインタがコントロールのリスト部分の上に移動したときのスタイルを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Enabled">
      <summary>コントロールが有効かどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.EvenRowStyle">
      <summary>偶数番号の行の外観を制御する Style オブジェクトを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.OddRowStyle">
      <summary>奇数番号の行の外観を制御する Style オブジェクトを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.PartialRightColumn">
      <summary>右端の列をスプリットの端でクリップする場合は True です。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.PreferredHeight">
      <summary>コンボボックスの項目領域の適切な高さを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ReadOnly">
      <summary>コントロール内のテキストを変更できるかどうかを設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Row">
      <summary>最初の表示行に対する現在のリスト行の位置を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.RowDivider">
      <summary>リストの行間の境界線のスタイルを設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.RowSubDividerColor">
      <summary>RowSubDivider の色を取得または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.RowTracking">
      <summary>マウスポインタが C1List コントロールの上を移動するときに、自動的に行を強調表示するかどうかを制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ScrollTips">
      <summary>スクロールボックスがドラッグされたときにテキストをポップアップ表示するかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ScrollTrack">
      <summary>スクロール中のリストに常に情報を表示するかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectedCols">
      <summary>SelectedColumnCollection オブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectedIndex">
      <summary>現在の選択項目のブックマークを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectedStyle">
      <summary>選択されたセルの外観を制御する Style オブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectedText">
      <summary>コンボボックスの編集ウィンドウで現在選択されているテキストを含む文字列を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectedValue">
      <summary>ValueMember プロパティで指定されたメンバプロパティの値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectionLength">
      <summary>編集ウィンドウで選択されている文字の数を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SelectionStart">
      <summary>編集ウィンドウで選択されているテキストの開始点を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Split">
      <summary>現在のスプリット番号を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Splits">
      <summary>Split オブジェクトのコレクションを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Style">
      <summary>リストの通常の Style オブジェクトを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Styles">
      <summary>名前付き Style オブジェクトのコレクションを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.SuperBack">
      <summary>AutoCompletion と LimitToList が true の場合の BackSpace の動作を制御します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.Text">
      <summary>エディタに表示されるテキストを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.TextAlign">
      <summary>エディタ内でテキストを配置する方法を決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.TopIndex">
      <summary>リストまたはスプリットで最初に表示されている行のブックマークを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.WillChangeToIndex">
      <summary>コントロール内の選択項目を識別するブックマークを設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.WillChangeToText">
      <summary>選択される項目のテキストを識別する文字列を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.WillChangeToValue">
      <summary>選択される値を識別するオブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.ValueMember">
      <summary>連結に使用するフィールド名を指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.VisibleCols">
      <summary>現在のスプリットの表示されている列の数を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.VisibleRows">
      <summary>リスト内に表示されている行の数を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.VScrollBar">
      <summary>垂直スクロールバーの外観を制御する VBar オブジェクトを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.VisualStyle">
      <summary>コントロールの全体的な外観を決定する値を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用すると、コントロールの外観を アプリケーションの外観に合わせてすばやくカスタマイズできます。</para>
        <para>
          使用できる設定には、
          <b>System</b>、さまざまな Microsoft Office の配色、 および
          <b>Custom</b>があります（コントロールの標準スタイルと外観プロパティに依存）。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DataSource">
      <summary>コントロールの連結に使用するデータソースオブジェクトを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.DataMember">
      <summary>コントロールにデータを挿入するために使用するデータメンバの名前を取得または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1Combo.AutoSelect">
      <summary>コンボに最初にデータが入力されたときにコンボのインデックスをデータソースの現在の位置に設定するかどうかを設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.C1List">
      <summary>複数列のリストボックスコントロールです。</summary>
    </member>
    <member name="T:C1.Win.C1List.ListBase.C1ListBase">
      <summary>C1List の抽象基本クラスです。</summary>
    </member>
    <member name="T:C1.Win.C1List.ListBase.Frame">
      <summary>BaseGridFrame の概要を説明します。</summary>
    </member>
    <member name="F:C1.Win.C1List.ListBase.Frame.m_serializing">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.#ctor">
      <summary>スプリットコンテナクラスの ctor。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.Dispose(System.Boolean)">
      <summary>クラスが破棄されるときに呼び出されます。</summary>
      <param name="disposing">True でクリーンアップします。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.LoadResources">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.BeginInit">
      <summary>ISupportInitialize インタフェース。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBindingContextChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.EndInit">
      <summary>ISupportInitialize インタフェース。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnVisibleChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.InitializeStyles">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSizeChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnResize(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFontChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.IsInputChar(System.Char)">
      <summary></summary>
      <param name="charCode"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.IsInputKey(System.Windows.Forms.Keys)">
      <summary></summary>
      <param name="keyData"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.saveImages">
      <summary>画像をシリアライズするヘルパーメソッドです。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnCursorChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnMouseLeave(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnClick(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnDoubleClick(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnLeave(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.WndProc(System.Windows.Forms.Message@)">
      <summary></summary>
      <param name="m"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.createDataColumn(System.ComponentModel.PropertyDescriptor)">
      <summary></summary>
      <param name="p"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.ClearFields">
      <summary>デフォルトのリストレイアウトを復元します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.GetSchema(System.ComponentModel.PropertyDescriptorCollection,System.Int32,System.Data.DataRelation,System.ComponentModel.PropertyDescriptor[])">
      <summary></summary>
      <param name="props"></param>
      <param name="level"></param>
      <param name="r"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.SetDataSource(System.Object,System.Windows.Forms.BindingMemberInfo,System.Boolean)">
      <summary></summary>
      <param name="datasource"></param>
      <param name="newDisplayMember"></param>
      <param name="force"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundGetData(System.Int32,C1.Win.C1List.C1DataColumn)">
      <summary></summary>
      <param name="row"></param>
      <param name="dc"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundColUpdate(C1.Win.C1List.C1DataColumn,System.String)">
      <summary></summary>
      <param name="dc"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundGetRelativeBookmak(System.Int32,System.Int32)">
      <summary></summary>
      <param name="start"></param>
      <param name="offset"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundAddRow">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundDeleteRow">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundGetMaxRow">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.UnboundReset(System.Boolean)">
      <summary></summary>
      <param name="first"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.ShouldSerializeCaptionHeight">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.ResetVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1List.ListBase.Frame.VisualStyle" />をデフォルト値にリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.ShouldSerializeVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1List.ListBase.Frame.VisualStyle" />がシリアライズされるかどうかをテストします。
      </summary>
      <returns>
        <see cref="P:C1.Win.C1List.ListBase.Frame.VisualStyle" />がシリアライズされる場合は true、そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.canCreateSplits">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAfterColUpdate(C1.Win.C1List.ColEventArgs)">
      <summary>列でデータソースが更新された後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAfterDelete(System.EventArgs)">
      <summary>行が削除された後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAfterInsert(System.EventArgs)">
      <summary>行が挿入された後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAfterUpdate(System.EventArgs)">
      <summary>行が更新された後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAfterSort(C1.Win.C1List.FilterEventArgs)">
      <summary>データソースがソートされた後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeColUpdate(C1.Win.C1List.BeforeColUpdateEventArgs)">
      <summary>列が更新される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeDelete(System.ComponentModel.CancelEventArgs)">
      <summary>行が削除される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeInsert(System.ComponentModel.CancelEventArgs)">
      <summary>行が挿入される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeUpdate(System.ComponentModel.CancelEventArgs)">
      <summary>行が更新される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnColResize(C1.Win.C1List.ColResizeEventArgs)">
      <summary>列がサイズ変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnHeadClick(C1.Win.C1List.ColEventArgs)">
      <summary>列ヘッダーがクリックされたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFootClick(C1.Win.C1List.ColEventArgs)">
      <summary>列フッターがクリックされたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnOwnerDrawCell(C1.Win.C1List.OwnerDrawCellEventArgs)">
      <summary>セルをレンダリングする必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnOwnerDrawCellPrint(C1.Win.C1List.OwnerDrawCellEventArgs)">
      <summary>セルを出力する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnOwnerDrawPageHeader(C1.Win.C1List.OwnerDrawPageEventArgs)">
      <summary>ページヘッダーを印刷する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnOwnerDrawPageFooter(C1.Win.C1List.OwnerDrawPageEventArgs)">
      <summary>ページフッターを印刷する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeRowColChange(System.ComponentModel.CancelEventArgs)">
      <summary>現在の行または列が変更される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnRowColChange(C1.Win.C1List.RowColChangeEventArgs)">
      <summary>現在の行または列が変更された後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnRowResize(System.ComponentModel.CancelEventArgs)">
      <summary>行がサイズ変更される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnScroll1(System.ComponentModel.CancelEventArgs)">
      <summary>グリッドがスクロールするときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSelChange(System.ComponentModel.CancelEventArgs)">
      <summary>選択が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSplitChange(System.EventArgs)">
      <summary>スプリット通貨が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSplitRemoved(System.EventArgs)">
      <summary>左右または上下分割が削除されるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnChange(System.EventArgs)">
      <summary>グリッドセルの内容が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnUnboundColumnFetch(C1.Win.C1List.UnboundColumnFetchEventArgs)">
      <summary>発生してアンバウンド列のデータを取得します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAfterColEdit(C1.Win.C1List.ColEventArgs)">
      <summary>列が編集された後に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnColSelected(C1.Win.C1List.ColEventArgs)">
      <summary>列が選択されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeColEdit(C1.Win.C1List.BeforeColEditEventArgs)">
      <summary>列を編集する前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnColEdit(C1.Win.C1List.ColEventArgs)">
      <summary>列が編集されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnTopIndexChange(C1.Win.C1List.SplitEventArgs)">
      <summary>一番上の行が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnLeftColChange(C1.Win.C1List.SplitEventArgs)">
      <summary>左の列が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFormatText(C1.Win.C1List.FormatTextEventArgs)">
      <summary>セル値がカスタム書式を必要とするときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnValueItemError(C1.Win.C1List.ColEventArgs)">
      <summary>ValueItems コレクションにない値項目が選択されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFetchCellStyle(C1.Win.C1List.FetchCellStyleEventArgs)">
      <summary>セルをレンダリングするためにカスタムスタイルを使用する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFetchRowStyle(C1.Win.C1List.FetchRowStyleEventArgs)">
      <summary>グループ化されたセルをレンダリングするためにカスタムスタイルを使用する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnAddNew(System.EventArgs)">
      <summary>新しい行が追加されるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnColMove(C1.Win.C1List.ColMoveEventArgs)">
      <summary>列がドラッグされるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFetchCellTips(C1.Win.C1List.FetchCellTipsEventArgs)">
      <summary>セルチップを表示する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnInit(System.EventArgs)">
      <summary>グリッドが初期化されるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnDataSourceChanged(System.EventArgs)">
      <summary>データソースが変更されるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnLayoutReady(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFetchScrollTips(C1.Win.C1List.FetchScrollTipsEventArgs)">
      <summary>スクロールチップを表示する必要があるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFilterChange(System.EventArgs)">
      <summary>フィルタ条件が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFilterButtonClick(C1.Win.C1List.ColEventArgs)">
      <summary>フィルタバーのボタンがクリックされるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnBeforeOpen(System.ComponentModel.CancelEventArgs)">
      <summary>子グリッドが表示される前に発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSort(C1.Win.C1List.FilterEventArgs)">
      <summary>列ヘッダーをクリックしてデータソースがソートされるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnFilter(C1.Win.C1List.FilterEventArgs)">
      <summary>AllowFilter が false のときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnError(C1.Win.C1List.ErrorEventArgs)">
      <summary>UI を介してグリッドにエラーが見つかるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.ShowHeaderCheckBox">
      <summary>ヘッダーセクションですべての行を選択/選択解除するためのチェックボックスを CheckBox 選択モードで表示するかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.BorderStyle">
      <summary>コントロールの境界線のスタイルを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.AllowSort">
      <summary>列のソートを許可するかどうかを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.Caption">
      <summary>リストのキャプションを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.CaptionHeight">
      <summary>リストのキャプション領域の高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.DataMember">
      <summary>コントロールにデータを挿入するために使用するデータメンバの名前を取得または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.DataSource">
      <summary>コントロールの連結に使用するデータソースオブジェクトを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.ScrollTrack">
      <summary>スクロール中のリストに常に情報を表示するかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.VisualStyle">
      <summary>コントロールの全体的な外観を決定する値を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用すると、グリッドの外観を アプリケーションの外観に合わせてすばやくカスタマイズできます。</para>
        <para>
          使用できる設定には、
          <b>System</b>、さまざまな Microsoft Office の配色、 および
          <b>Custom</b>があります（コントロールの標準スタイルと外観プロパティに依存）。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1List.ListBase.Frame.VisualStyleChanged">
      <summary>VisualStyle プロパティが変更されると発生します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.#ctor">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.Dispose(System.Boolean)">
      <summary>使用されているリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.EndInit">
      <summary>オブジェクトに初期化が完了したことを通知します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.InitializeStyles">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.SetDataSource(System.Object,System.Windows.Forms.BindingMemberInfo,System.Boolean)">
      <summary></summary>
      <param name="datasource"></param>
      <param name="newDisplayMember"></param>
      <param name="force"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ShouldSerializeColumnCaptionHeight">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ShouldSerializeColumnFooterHeight">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ShouldSerializeItemHeight">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)">
      <summary>リスト、列、またはスプリット内のセルのフォントと色をその値に基づいて制御します。</summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />定数の組み合わせ。
      </param>
      <param name="style">
        フォントと色の属性を指定する
        <see cref="T:C1.Win.C1List.Style" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)">
      <summary>リスト、列、またはスプリット内のセルのフォントと色をその内容に基づいて制御します。</summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />定数の組み合わせ。
      </param>
      <param name="style">
        フォントと色の属性を指定する
        <see cref="T:C1.Win.C1List.Style" />オブジェクト。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag,System.String)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.AddItemTitles(System.String)">
      <summary>
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)" />モードで、列のタイトルを設定します。
      </summary>
      <param name="titles">設定するタイトル。セミコロン（;）で区切られます。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)">
      <summary>
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)" />モードで、末尾に新しい項目を追加します。
      </summary>
      <param name="newItem">
        追加する項目。
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AddItemSeparator" />で区切られます。
      </param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.InsertItem(System.String,System.Int32)">
      <summary>
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)" />モードで、新しい項目をインデックス位置に追加します。
      </summary>
      <param name="item">
        追加する項目。
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AddItemSeparator" />で区切られます。
      </param>
      <param name="index">挿入先の位置です。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.RemoveItem(System.Int32)">
      <summary>
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)" />モードで、指定された位置にある項目を削除します。
      </summary>
      <param name="index">項目のインデックスです。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ClearItems">
      <summary>
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)" />モードで、すべての項目をクリアします。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.SuspendBinding">
      <summary>データソースからのデータ連結通知を一時停止します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ResumeBinding">
      <summary>データソースからのデータ連結通知を再開します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.CellContaining(System.Int32,System.Int32,System.Int32@,System.Int32@)">
      <summary>座標で指定されたセルの位置を返します。</summary>
      <param name="x">ピクセル単位の x 座標を定義する整数です。</param>
      <param name="y">ピクセル単位の y 座標を定義する整数です。</param>
      <param name="rowAt">指定された y 座標にある行の 0 から始まるインデックスを受け取る整数です。</param>
      <param name="colAt">指定された y 座標にある列の 0 から始まるインデックスを受け取る整数です。</param>
      <value>データセルが指定された XY 座標にあるかどうかを示すブール値です。</value>
      <remarks>
        CellContaining メソッドは、
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.ColContaining(System.Int32)" />メソッドと
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.RowContaining(System.Int32)" />メソッドを組み合わせて 1 つの呼び出しにしたメソッドです。 x と y で指定された XY 座標がデータセルを指す場合、このメソッドは True を返し、rowindex と colindex 引数はセルを識別する 0 から始まるインデックスを返します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.SetAddItemData(System.Int32,System.Int32,System.String)">
      <summary>AddItem モードで、セルデータを更新します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="data">セルの新しいデータ。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.CaptureImage">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ClearCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <remarks>
        <para>
          ClearCellStyle メソッドは、対象のオブジェクトに対して 以前に
          <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)" />メソッドを呼び出して設定されたセル条件を削除します。このようなセル条件が存在しない場合は、 このメソッドを呼び出しても効果はありません。
        </para>
        <para>condition 引数が CellStyleFlag.AllCells の場合は、状態に関係なく、正規表現以外のセル条件がすべて削除されます。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ClearSelCols">
      <summary>現在のスプリットで選択されている列をすべて選択解除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ClearSelected">
      <summary>すべての行の選択をクリアします。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ColContaining(System.Int32)">
      <summary>指定された座標がある列のインデックスを返します。</summary>
      <param name="x">水平方向の座標（X 値）をピクセル単位で定義する整数。</param>
      <value>指定された X 座標にある列のインデックスに対応する整数。</value>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.GetDisplayText(System.Int32,System.Int32)">
      <summary>指定された行および列の表示テキストを取得します。</summary>
      <param name="rowIndex">行インデックス。</param>
      <param name="colIndex">列インデックス。</param>
      <value>セルテキストを識別する文字列を返します。</value>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.GetItemText(System.Int32,System.Int32)">
      <summary>任意のセルのセルテキストを取得します。</summary>
      <param name="rowIndex">行インデックス。</param>
      <param name="colIndex">列インデックス。</param>
      <value>セルテキストを識別する文字列を返します。</value>
      <remarks>このメソッドは、Column オブジェクトを使用しないで、セルのテキストを直接取得します。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.GetItemText(System.Int32,System.String)">
      <summary>任意のセルのセルテキストを取得します。</summary>
      <param name="rowIndex">行インデックス。</param>
      <param name="colName">列名。</param>
      <value>セルテキストを識別する文字列を返します。</value>
      <remarks>このメソッドは、Column オブジェクトを使用しないで、セルのテキストを直接取得します。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.Sort(System.Int32,C1.Win.C1List.SortDirEnum)">
      <summary>コントロールの指定された列をソートします。</summary>
      <param name="col">ソートする列を識別する列番号。</param>
      <param name="dir">ソート方向。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.Sort(System.String,C1.Win.C1List.SortDirEnum)">
      <summary>コントロールの指定された列をソートします。</summary>
      <param name="colName">ソートする列を識別する列名。</param>
      <param name="dir">ソート方向。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnAfterSort(C1.Win.C1List.FilterEventArgs)">
      <summary>AfterSort イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.HoldFields">
      <summary>現在の列/フィールドレイアウトを保持します。</summary>
      <remarks>
        <para>
          HoldFields メソッドは、現在の列/フィールドのレイアウトをカスタマイズされたレイアウトとして設定します。これにより、 その後の
          <see cref="M:C1.Win.C1List.ListBase.C1ListBase.Rebind" />操作で、現在のレイアウトが表示に使用されます。
          <see cref="M:C1.Win.C1List.ListBase.Frame.ClearFields" />メソッドを呼び出すと、リストの自動レイアウト動作を再開できます。
        </para>
        <para>
          HoldFields メソッドは、非連結モードで、コードで列レイアウトを指定し、 そのレイアウトを
          <see cref="M:C1.Win.C1List.ListBase.C1ListBase.Rebind" />操作の後もそのまま使用する場合に特に便利です。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.PointAt(System.Int32,System.Int32)">
      <summary>
        指定された XY 座標にあるリスト要素の種類を示す
        <see cref="T:C1.Win.C1List.PointAtEnum" />定数の 1 つを返します。
      </summary>
      <param name="x">x 座標（ピクセル単位）。</param>
      <param name="y">y 座標（ピクセル単位）。</param>
      <remarks>
        <para>
          PointAt メソッドは、
          <see cref="T:C1.Win.C1List.PointAtEnum" />で定義されている定数の 1 つを返します。これは、指定された XY 座標にあるコントロール要素の種類を示します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.RowTop(System.Int32)">
      <summary>表示されている行の上端の Y 座標を返します。</summary>
      <param name="row">行インデックス。</param>
      <value>リストのコンテナの座標系に基づく、指定された表示行の Y 位置。</value>
      <remarks>
        <para>RowTop メソッドは、リストの上端（リストの Top プロパティで示される）に対する表示されている行の上端の y 座標を返します。</para>
        <para>RowTop メソッドを ItemHeight、Left、Width と組み合わせて使用して、リストセルの上に表示されるコントロールのサイズと配置を決定します。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.Rebind">
      <summary>連結データソースとの接続を再確立します。</summary>
      <remarks>
        <para>このメソッドは、連結データソースとの接続を再確立します。 これにより、設計時に DataSource プロパティを設定したときに行われる操作と同じ操作がコントロールで実行されます。</para>
        <para>設計時にリスト列を変更していない場合は、ReBind メソッドを実行すると、現在のデータソースに基づいて、列、ヘッダーなどのプロパティがリセットされます。</para>
        <para>
          設計時に列を変更している場合でもリストの列の連結をリセットするには、 ReBind の直前に
          <see cref="M:C1.Win.C1List.ListBase.Frame.ClearFields" />メソッドを呼び出します。 逆に、リストの自動レイアウトによる応答をキャンセルし、現在の列/フィールドのレイアウトをリストで使用するには、 ReBind の直前に
          <see cref="M:C1.Win.C1List.ListBase.C1ListBase.HoldFields" />メソッドを呼び出します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.Rebind(System.Boolean)">
      <summary>データソースのデータでリストを再初期化します。</summary>
      <param name="holdFields">True の場合は、現在の列レイアウトを保存します。False の場合は、データソースからスキーマを取得します。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.RowContaining(System.Int32)">
      <summary>指定された座標にある表示行の 0 から始まるインデックスを返します。</summary>
      <param name="y">y 座標（ピクセル単位）。</param>
      <value>指定された Y 座標にある表示行に対応する整数。</value>
      <remarks>
        <para>RowContaining メソッドは、指定された座標にある表示行の 0 から始まるインデックスを返します。この値の範囲は 0 から VisibleRows - 1 です。</para>
        <para>y がリストのデータ領域の外にある場合、このメソッドは -1 を返します。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.IndexFromPoint(System.Drawing.Point)">
      <summary>特定の点に対応する行のインデックスを返します。</summary>
      <param name="p">特定の点。</param>
      <returns>行インデックス。</returns>
      <remarks>点がどの行にもない場合は、-1 を返します。そうでない場合は、行インデックスを返します。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.SplitContaining(System.Int32,System.Int32)">
      <summary>指定された XY 座標にあるスプリットのインデックス値を返します。</summary>
      <param name="x">x 座標（ピクセル単位）。</param>
      <param name="y">y 座標（ピクセル単位）。</param>
      <returns>指定された XY 座標にあるスプリットのインデックスに対応する整数。</returns>
      <remarks>
        <para>戻り値の範囲は 0 から Split.Count -1 です。</para>
        <para>どちらかの引数がリストのデータ領域の外にある場合、このメソッドは -1 を返します。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ScrollCtl(System.Int32,System.Int32)">
      <summary>指定された行数および列数だけリストデータ領域をスクロールします。</summary>
      <param name="rows">スクロールする列の数。</param>
      <param name="cols">スクロールする行の数。</param>
      <remarks>
        <para>正のオフセットは、右および下にスクロールします。負のオフセットは、左および上にスクロールします。範囲外の列オフセットを指定すると、トラップ可能なエラーが発生します。範囲外の行オフセットを指定すると、データベースの先頭または末尾までスクロールします。</para>
        <para>
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.LeftCol" />プロパティと
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.TopIndex" />プロパティを設定しても同じですが、両方を個別に設定する必要があります。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ExportToDelimitedFile(System.String,C1.Win.C1List.RowSelectorEnum)">
      <summary>リストの指定された行を指定されたファイルに区切り ASCII テキストとしてエクスポートします。</summary>
      <param name="outPath">リスト行のエクスポート先のファイルを指定します。</param>
      <param name="selector">エクスポートする行を指定するオプションの値を指定します。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ExportToDelimitedFile(System.String,C1.Win.C1List.RowSelectorEnum,System.String)">
      <summary>リストの指定された行を指定されたファイルに区切り ASCII テキストとしてエクスポートします。</summary>
      <param name="outPath">リスト行のエクスポート先のファイルを指定します。</param>
      <param name="selector">エクスポートする行を指定するオプションの値を指定します。</param>
      <param name="delim">フィールドの区切り使用するオプションの区切り文字列を指定します。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ExportToDelimitedFile(System.String,C1.Win.C1List.RowSelectorEnum,System.String,System.String)">
      <summary>リストの指定された行を指定されたファイルに区切り ASCII テキストとしてエクスポートします。</summary>
      <param name="outPath">リスト行のエクスポート先のファイルを指定します。</param>
      <param name="selector">エクスポートする行を指定するオプションの値を指定します。</param>
      <param name="delim">フィールドの区切り使用するオプションの区切り文字列を指定します。</param>
      <param name="prefix">suffix と組み合わせて、各値を囲むオプションの文字列を指定します。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ExportToDelimitedFile(System.String,C1.Win.C1List.RowSelectorEnum,System.String,System.String,System.String)">
      <summary>リストの指定された行を指定されたファイルに区切り ASCII テキストとしてエクスポートします。</summary>
      <param name="outPath">リスト行のエクスポート先のファイルを指定します。</param>
      <param name="selector">エクスポートする行を指定するオプションの値を指定します。</param>
      <param name="delim">フィールドの区切り使用するオプションの区切り文字列を指定します。</param>
      <param name="prefix">suffix と組み合わせて、各値を囲むオプションの文字列を指定します。</param>
      <param name="suffix">prefix と組み合わせて、各値を囲むオプションの文字列を指定します。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.ExportToDelimitedFile(System.String,C1.Win.C1List.RowSelectorEnum,System.String,System.String,System.String,System.Boolean)">
      <summary>リストの指定された行を指定されたファイルに区切り ASCII テキストとしてエクスポートします。</summary>
      <param name="outPath">リスト行のエクスポート先のファイルを指定します。</param>
      <param name="selector">エクスポートする行を指定するオプションの値を指定します。</param>
      <param name="delim">フィールドの区切り使用するオプションの区切り文字列を指定します。</param>
      <param name="prefix">suffix と組み合わせて、各値を囲むオプションの文字列を指定します。</param>
      <param name="suffix">prefix と組み合わせて、各値を囲むオプションの文字列を指定します。</param>
      <param name="headers">ファイルの最初の行に列ヘッダーを書き込むかどうかを指定します。</param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.InsertVerticalSplit(System.Int32)">
      <summary>指定されたインデックスに上下分割を追加します。</summary>
      <param name="idx">新しいスプリットの位置を識別する 0 から始まる整数。</param>
      <remarks>デフォルトで、リストには 1 つの上下分割があります。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.RemoveVerticalSplit(System.Int32)">
      <summary>指定されたインデックスから上下分割を削除します。</summary>
      <param name="idx">削除するスプリットの位置を識別する 0 から始まる整数。</param>
      <remarks>デフォルトで、リストには 1 つの上下分割があります。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.InsertHorizontalSplit(System.Int32)">
      <summary>指定されたインデックスに左右分割を追加します。</summary>
      <param name="idx">新しいスプリットの位置を識別する 0 から始まる整数。</param>
      <remarks>デフォルトで、リストには 1 つの左右分割があります。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.RemoveHorizontalSplit(System.Int32)">
      <summary>指定されたインデックスから左右分割を削除します。</summary>
      <param name="idx">削除するスプリットの位置を識別する 0 から始まる整数。</param>
      <remarks>デフォルトで、リストには 1 つの左右分割があります。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnHeadClick(C1.Win.C1List.ColEventArgs)">
      <summary>HeadClick イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFootClick(C1.Win.C1List.ColEventArgs)">
      <summary>FootClick イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnColMove(C1.Win.C1List.ColMoveEventArgs)">
      <summary>ColMoveEvent を発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnColSelected(C1.Win.C1List.ColEventArgs)">
      <summary>ColSelected イベントを発生させます。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnColResize(C1.Win.C1List.ColResizeEventArgs)">
      <summary>ColResize イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnRowResize(System.ComponentModel.CancelEventArgs)">
      <summary>RowResize イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnScroll1(System.ComponentModel.CancelEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnRowChange(System.EventArgs)">
      <summary>RowChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnRowColChange(C1.Win.C1List.RowColChangeEventArgs)">
      <summary>RowColChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnTopIndexChange(C1.Win.C1List.SplitEventArgs)">
      <summary>TopIndexChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnLeftColChange(C1.Win.C1List.SplitEventArgs)">
      <summary>LeftColChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnSelChange(System.ComponentModel.CancelEventArgs)">
      <summary>SelChang イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnSplitChange(System.EventArgs)">
      <summary>SplitChange イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnSplitRemoved(System.EventArgs)">
      <summary>左右または上下分割が削除されるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnDisplayMemberChanged(System.EventArgs)">
      <summary>DisplayMemberChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnDataSourceChanged(System.EventArgs)">
      <summary>DataSourceChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnValueMemberChanged(System.EventArgs)">
      <summary>ValueMemberChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnSelectedValueChanged(System.EventArgs)">
      <summary>SelectedValueChanged イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFetchRowStyle(C1.Win.C1List.FetchRowStyleEventArgs)">
      <summary>FetchRowStyle イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnUnboundColumnFetch(C1.Win.C1List.UnboundColumnFetchEventArgs)">
      <summary>UnboundColumnFetch イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFetchCellStyle(C1.Win.C1List.FetchCellStyleEventArgs)">
      <summary>FetchCellStyle イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFetchCellTips(C1.Win.C1List.FetchCellTipsEventArgs)">
      <summary>FetchCellTips イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFormatText(C1.Win.C1List.FormatTextEventArgs)">
      <summary>FromatText イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnError(C1.Win.C1List.ErrorEventArgs)">
      <summary>Error イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnOwnerDrawCell(C1.Win.C1List.OwnerDrawCellEventArgs)">
      <summary>OwnerDrawCell イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnLayoutReady(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFetchScrollTips(C1.Win.C1List.FetchScrollTipsEventArgs)">
      <summary>FetchScrollTips イベントを発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.GetSelected(System.Int32)">
      <summary>特定の行が選択されているかどうかをチェックします。</summary>
      <remarks>True を返す場合、行は選択されています。そうでない場合、行は選択されていません。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.SetSelected(System.Int32,System.Boolean)">
      <summary>コードから行を選択または選択解除します。</summary>
      <param name="index">コントロールの行番号を指定する 0 から始まる整数。</param>
      <param name="value">選択範囲のステータスを示すブール値。</param>
      <remarks>SetSelected(index, True) は、行が選択されていない場合に、それを選択します。SetSelected(index, False) は、行が選択されている場合に、それを選択解除します。</remarks>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.canCreateSplits">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AllowHorizontalSplit">
      <summary>ユーザーが左右分割を作成できるかどうかを指定します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        <para>True の場合、ユーザーは実行時に現在のリストを複数の左右分割に分割できます。</para>
        <para>False の場合、ユーザーはリストを水平方向に分割することができません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AllowVerticalSplit">
      <summary>ユーザーが上下分割をサイズ変更できるかどうかを指定します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        <para>True の場合、ユーザーはリストの上下分割を複数作成できます。</para>
        <para>False の場合、ユーザーは上下分割を作成できません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AllowRowSizing">
      <summary>ユーザーがリストの行をサイズ変更できるかどうかを指定します。</summary>
      <remarks>
        <para>このプロパティは、ユーザーが行を個別にサイズ変更できるか、まとめてサイズ変更できるか、まったくサイズ変更できないかを決定します。</para>
        <para>このプロパティは SelectionMode プロパティが CheckBox に設定されている場合にのみ動作します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AllowColMove">
      <summary>対話式の列の移動を有効または無効にします。</summary>
      <value>デフォルト値は true です。</value>
      <remarks>
        <para>True（デフォルト）の場合、ユーザーは列を移動できます。</para>
        <para>False の場合、ユーザーは列を移動できません。</para>
        <para>
          AllowColMove プロパティを使用して、ユーザーが列ヘッダーをドラッグして列を目的の場所に 移動できるかどうかを制御します。列の順序が変更されると、
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.ColMove" />イベントが発生します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AlternatingRows">
      <summary>リストまたはスプリットで、奇数番号の行と偶数番号の行を異なるスタイルで表示するかどうかを決定します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        <para>True の場合は、指定されたオブジェクトの行の外観が OddRowStyle プロパティと EvenRowStyle プロパティによって制御されます。</para>
        <para>False（デフォルト）の場合は、指定されたオブジェクトの行の外観が Style プロパティによって制御されます。</para>
        <para>設計時には、Styles プロパティページを使用して組み込みの OddRow（EvenRow）スタイルを変更することにより、奇数（偶数）行の色とフォントを変更できます。</para>
        <para>実行時には、OddRowStyle（EvenRowStyle）プロパティが返した Style オブジェクトを変更することにより、奇数（偶数）行を表示する色とフォントを変更できます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AddItemSeparator">
      <summary>AddItem モードで、AddItem メソッドを使用する場合の列の区切り文字列を決定します。</summary>
      <remarks>このプロパティのデフォルト値は ; です。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Bookmark">
      <summary>リストの現在の行を識別するブックマークを設定または返します。</summary>
      <remarks>
        <para>Bookmark プロパティから返される値を使用すると、現在の列への参照を保存できます。この参照は、別の行が現在の行になった後でも有効です。</para>
        <para>コードで Bookmark プロパティを有効な値に設定すると、その値に関連付けられた行が現在の行になります。また、その新しい現在の行が表示範囲に入るように、必要に応じてリストの表示が調整されます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.CaptionStyle">
      <summary>
        キャプション領域の外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを設定または返します。
      </summary>
      <remarks>このプロパティは、C1List コントロールのキャプションバーまたは Split オブジェクトのヘッダー領域の外観を制御する Style オブジェクトを設定または返します。デフォルトは、組み込みの Caption スタイルです。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.CellTips">
      <summary>マウスポインタがアイドル状態のときにリストにテキストウィンドウをポップアップ表示するかどうかを決定します。</summary>
      <remarks>
        <para>CellTips プロパティは、マウスポインタがアイドル状態のときにリストにテキストウィンドウをポップアップ表示するかどうかを決定します。 デフォルトでは、このプロパティは NoCellTips に設定され、セルチップは表示されません。</para>
        <para>
          CellTips プロパティが Anchored または Floating に設定されている場合は、 リストにフォーカスが移り、マウスポインタがリストセル、レコードセレクタ、列ヘッダー、スプリットヘッダー、またはリストキャプション上で アイドル状態になると、
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchCellTips" />イベントが発生します。このイベントは、ポインタが スクロールバー上に置かれた場合には発生しません。
        </para>
        <para>Anchored に設定すると、セルチップウィンドウは、セルの左端または右端に配置されます。 通常は左端ですが、最大限にテキストを表示するために、必要に応じて右端にも配置されます。</para>
        <para>Floating に設定すると、セルチップウィンドウは、できる限りポインタの下に表示されます。</para>
        <para>FetchCellTips イベントのハンドラを提供しない場合は、ポインタがリストセル上に置かれると、 デフォルトの動作として、テキストボックスにセルの内容（最大 256 文字）が表示されます。 これにより、セル全体が表示されていなくても、ユーザーはセルの内容を確認できます。 FetchCellTips イベントを使用してデフォルトのセルテキストを上書きし、状況依存ヘルプを 表示するようにプログラムすることもできます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.CellTipsDelay">
      <summary>セルチップウィンドウを表示するまでの時間を決定します。</summary>
      <value>デフォルト値は 500 ミリ秒です。</value>
      <remarks>
        <para>このプロパティを 0 に設定すると、デフォルトの 500 に戻ります。セルチップが無効にはなりません。 セルチップを無効にするには、CellTips プロパティを NoCellTips に設定します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.CellTipsWidth">
      <summary>セルチップウィンドウの幅を設定または返します。</summary>
      <remarks>
        <para>CellTipsWidth プロパティは、セルチップウィンドウの幅をリストのコンテナの座標系で設定または返します。</para>
        <para>デフォルトでは、このプロパティは 0 に設定され、セルチップウィンドウはセルチップテキストに合わせて拡大または縮小されます。この動作を変更するには、このプロパティを 0 以外の値に指定して、セルチップウィンドウを幅を固定します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Col">
      <summary>現在のスプリットの現在のセルの列位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ColumnFooters">
      <summary>フッターを表示するかどうかを指定します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>FooterText プロパティを使用して、個々の列にフッターテキストを設定します。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ColumnHeaders">
      <summary>ヘッダーを表示するかどうかを指定します。</summary>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ColumnCaptionHeight">
      <summary>列ヘッダーの高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ColumnFooterHeight">
      <summary>列フッターの高さを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Columns">
      <summary>
        <see cref="T:C1.Win.C1List.C1DataColumn" />オブジェクトのコレクションを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.CurrentCellVisible">
      <summary>スプリットの現在のセルの表示状態を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DataMode">
      <summary>Mormal モードまたは AddItem モードを指定します。</summary>
      <remarks>
        詳細については、
        <see cref="T:C1.Win.C1List.DataModeEnum" />を参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DataView">
      <summary>リストにデータを表示する方法を設定または返します。</summary>
      <remarks>
        詳細については、
        <see cref="T:C1.Win.C1List.DataViewEnum" />を参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DeadAreaBackColor">
      <summary>リストのデッドエリアの背景色を制御します。</summary>
      <remarks>
        <para>このプロパティの設定は、最後の列の右、最後の行の下、Outlook グループ化領域など、データ挿入中のコントロールのデッドエリアの外観に適用されます。</para>
        <para>
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.EmptyRows" />プロパティが True の場合、作成された空のデータ行はデッドエリアと見なされず、 DeadAreaBackColor では表示されません。空の行を DeadAreaBackColor で表示するには、 最初に、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.EmptyRows" />プロパティを False に設定する必要があります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DefColWidth">
      <summary>自動的に作成される列の幅を指定します。</summary>
      <remarks>
        <para>DefColWidth プロパティを実行時に設定しても、既存の列は変更されません。その後コードで作成される列にのみ適用されます。</para>
        <para>連結モードでは、リストから要求されてもテキストフィールドの幅を提供しないデータソースがあります。そのため、DefColWidth が 0 の場合は、リストがデフォルトの幅を提供する必要があるため、実際の列幅が期待どおりにならない場合があります。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DestinationCol">
      <summary>セルの移動後の移動先になるリスト列を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DestinationRow">
      <summary>セルの移動後の移動先になるリスト行を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DestinationSplit">
      <summary>セルの移動後の移動先になるリストスプリットを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.EmptyRows">
      <summary>リストの最後のデータ行の下に行を表示する方法を決定する値を設定または返します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>データソースのすべてのレコードでリスト全体が埋まらない場合は、EmptyRows を True に設定すると、埋まらなかったリスト領域に空のデータ行が表示されます。EmptyRows が False（デフォルト）の場合は、埋まらなかったリスト領域は空白になり、コントロールパネルの設定で指定されているシステムの 3D オブジェクト色（またはシステムのボタン表示色）が表示されます。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.EvenRowStyle">
      <summary>偶数番号の行の外観を制御する Style オブジェクトを設定または返します。</summary>
      <remarks>
        <para>
          このプロパティは、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AlternatingRows" />プロパティが True に設定されているリストまたはスプリットの偶数番号の行の 外観を制御する Style オブジェクトを設定または返します。デフォルトは、組み込みの EvenRow スタイルです。
        </para>
        <para>
          奇数番号の行の外観を変更するには、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.OddRowStyle" />プロパティを設定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.RightToLeft">
      <summary>True の場合は、右から左に表記されるテキストの機能が適用されます。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ExtendRightColumn">
      <summary>最後の列を拡大してリストのデッドエリアを埋めるかどうかを設定または返します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>使用できる領域がリストの列で埋まらない場合は、空いた領域ができます。 この領域はデッドエリアと呼ばれ、デフォルトの背景色は灰色です。 このプロパティは、この領域をリストの最後の列で埋めるかどうかを設定します。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyles">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントが発生するかどうかを指定します。
      </summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        <para>
          True の場合は、リストにデータ行が表示されるときに
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントが発生します。
        </para>
        <para>
          False（デフォルト）の場合、
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントは発生しません。
        </para>
        <para>
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントを使用しないと実現できない複雑な行ごとの 書式設定を行うには、この値を True に設定します。たとえば、特定の条件を満たす行にのみフォントや色を適用するには、 FetchRowStyles プロパティを True に設定し、
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントにコードを記述する必要があります。
        </para>
        <para>
          1 行おきに異なる色とフォントで表示するには、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AlternatingRows" />プロパティを True に設定するだけです。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.TopIndex">
      <summary>リストまたはスプリットで最初に表示されている行のブックマークを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ColumnWidth">
      <summary>コントロールの各列の幅を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.FlatStyle">
      <summary>リストの外観を決定します。</summary>
      <remarks>
        詳細については、
        <see cref="T:C1.Win.C1List.FlatModeEnum" />を参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.FooterStyle">
      <summary>列フッターの外観を制御する Style オブジェクトを返します。</summary>
      <remarks>デフォルトは、組み込みの Footing スタイルです。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.HeadingStyle">
      <summary>列ヘッダーの外観を制御する Style オブジェクトを返します。</summary>
      <remarks>
        このプロパティは、リスト、列、スプリットの列ヘッダーの外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを返します。 デフォルトは、組み込みの Heading スタイルです。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.HighLightRowStyle">
      <summary>
        強調表示された行の外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを返します。
      </summary>
      <remarks>
        このプロパティは、強調表示された行の外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを返します。 デフォルトは、組み込みの HighlightRow スタイルです。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.HScrollBar">
      <summary>
        水平スクロールバーの外観を制御する
        <see cref="T:C1.Win.C1List.Util.HBar" />オブジェクトを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.VScrollBar">
      <summary>
        垂直スクロールバーの外観を制御する
        <see cref="T:C1.Win.C1List.Util.VBar" />オブジェクトを設定または返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.IntegralHeight">
      <summary>行を部分的に表示するかどうかを制御します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        <para>True の場合は、行が部分的には表示されません。必要に応じてコントロールの高さが減少され、最後の部分的な行が除かれます。</para>
        <para>False の場合は、行が部分的にも表示されます。コントロールの高さは設計時のままです。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.LeftCol">
      <summary>リストまたはスプリットの左端の列の 0 から始まるインデックスを設定または返します。</summary>
      <remarks>
        コードでこのプロパティを使用すると、リストまたはスプリットが水平方向にスクロールします。
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.TopIndex" />プロパティを使用して、リストまたはスプリットに表示される最初の行のブックマークを決定します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.DisplayMember">
      <summary>インクリメンタルサーチに使用する DataSource フィールドを設定または返します。</summary>
      <remarks>DisplayMember プロパティが指定されていない場合は、コントロールの最初の列がインクリメンタルサーチと選択値の両方に使用されます。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectedValue">
      <summary>ValueMember プロパティで指定されたメンバプロパティの値を取得または設定します。</summary>
      <remarks>SelectedValue は連結可能です。通常の使用方法としては、別の DataSource のフィールドに連結します。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectedText">
      <summary>DisplayMember プロパティで指定される、現在選択されている行のテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ValueMember">
      <summary>連結に使用するフィールド名を指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.OddRowStyle">
      <summary>
        奇数番号の行の外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを設定または返します。
      </summary>
      <remarks>
        <para>
          このプロパティは、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AlternatingRows" />プロパティが True に設定されているリストまたはスプリットの奇数番号の行の 外観を制御する
          <see cref="T:C1.Win.C1List.Style" />オブジェクトを設定または返します。 デフォルトは、組み込みの OddRow スタイルです。
        </para>
        <para>
          偶数番号の行の外観を変更するには、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.EvenRowStyle" />プロパティを設定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.PartialRightColumn">
      <summary>右端の列をスプリットの端でクリップする場合は True です。</summary>
      <remarks>
        <para>True（デフォルト）の場合は、コントロールまたはスプリットの幅が右端の列全体が入るほど大きくないと、右端の列がクリップされます。</para>
        <para>False の場合は、他の列が表示されていても、右端の列はクリップされません。この場合、右端の列は、コントロールまたはスプリットの唯一の表示列として表示範囲までスクロールされます。</para>
        <para>コントロールに複数のスプリットがある場合は、コントロールの PartialRightColumn プロパティを設定すると、各スプリットの PartialRightColumn プロパティを個別に設定することと同じ効果があります。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Row">
      <summary>最初の表示行に対する現在のリスト行の位置を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.RowDivider">
      <summary>リストの行間の境界線のスタイルを設定します。</summary>
      <remarks>
        RowDivider の Style プロパティは、境界線をドラッグしてコントロールをサイズ変更できるかどうかを制御するプロパティではありません。 この動作を制御するには、
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AllowRowSizing" />プロパティを使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.RowSubDividerColor">
      <summary>RowSubDivider の色を取得または返します。</summary>
      <remarks>
        このプロパティは、リストの行補助分割線の色を制御します。
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.DataView" />が DataViewEnum.MultipleLines に設定されている場合に使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ItemHeight">
      <summary>すべてのリスト行の高さを返すまたは設定します。</summary>
      <remarks>
        <para>デフォルト値は、現在のフォントの文字の高さで決定されます。</para>
        <para>
          コントロールの
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AllowRowSizing" />プロパティが True に設定され、
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.SelectionMode" />プロパティが CheckBox に設定されている場合は、実行時にユーザーがチェックボックス間の行分割線をドラッグして
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.ItemHeight" />プロパティを調整できます。
        </para>
        <para></para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.FocusedSplit">
      <summary>フォーカスがある Split を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.RowTracking">
      <summary>マウスポインタが C1List コントロールの上を移動するときに、自動的に行を強調表示するかどうかを制御します。</summary>
      <value>デフォルト値は true です。</value>
      <remarks>
        <para>True（デフォルト）の場合は、マウスポインタが置かれた行が強調表示されます。</para>
        <para>False の場合は、マウスポインタを移動しても、強調表示されている行は変化しません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ScrollTips">
      <summary>スクロールボックスがドラッグされたときにテキストをポップアップ表示するかどうかを決定します。</summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        <para>ScrollTips プロパティは、スクロールボックスがドラッグされたときにテキストをポップアップ表示するかどうかを決定します。 デフォルトでは、このプロパティは False に設定され、ScrollTips は表示されません。</para>
        <para>
          ScrollTips プロパティが True に設定されている場合は、リストのスクロールボックスがドラッグされるたびに、
          <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchScrollTips" />イベントが発生します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectedIndex">
      <summary>現在の選択項目のブックマークを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.WillChangeToIndex">
      <summary>コントロール内の選択項目を識別するブックマークを設定します。</summary>
      <remarks>
        このプロパティは、
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.SelChange" />イベントで使用されます。 これらのイベントを処理する場合、
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.SelectedIndex" />は前の選択インデックス、WillChangeToIndex は新しい選択インデックスになります。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.WillChangeToText">
      <summary>選択される項目のテキストを識別する文字列を返します。</summary>
      <remarks>
        <para>
          このプロパティは、通常、SelChange イベントで使用され、新しい選択項目のテキストを返します。 新しい選択インデックスを参照する
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.WillChangeToIndex" />に関連します。
        </para>
        <para>
          <see cref="P:C1.Win.C1List.ListBase.C1ListBase.WillChangeToIndex" />プロパティが -1 に設定されている場合、WillChangeToText プロパティは空の文字列を返します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.WillChangeToValue">
      <summary>選択される値を識別するオブジェクトを返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectedIndices">
      <summary>
        <see cref="T:C1.Win.C1List.SelectedRowCollection" />オブジェクトを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectedCols">
      <summary>
        <see cref="T:C1.Win.C1List.SelectedColumnCollection" />オブジェクトを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectedStyle">
      <summary>
        選択されたセルの外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Split">
      <summary>現在のスプリット番号を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Splits">
      <summary>
        <see cref="T:C1.Win.C1List.Split" />オブジェクトのコレクションを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SplitIndex">
      <summary>
        <see cref="T:C1.Win.C1List.SplitCollection" />の現在の
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.Split" />のインデックスを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SpringMode">
      <summary>リストがサイズ変更されると列もサイズ変更されるかどうかを指定します。</summary>
      <remarks>
        <para>このプロパティが True に設定されている場合は、リストが水平方向にサイズ変更されると、表示列の列幅も比例して拡大または縮小されます。</para>
        <para>False に設定されている場合は（デフォルト）、リストが水平方向にサイズ変更されても、列幅は変化しません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Style">
      <summary>リストの通常の Style オブジェクトを設定または返します。</summary>
      <remarks>
        このプロパティは、リスト、列、スプリット内のセルの通常の外観を制御する
        <see cref="T:C1.Win.C1List.Style" />オブジェクトを設定または返します。 デフォルトは、組み込みの Normal スタイルです。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.Styles">
      <summary>名前付き Style オブジェクトのコレクションを返します。</summary>
      <remarks>このプロパティは、名前付き Style オブジェクトのコレクションを返します。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ValueTranslate">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.VisibleCols">
      <summary>現在のスプリットの表示されている列の数を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.VisibleRows">
      <summary>リスト内に表示されている行の数を返します。</summary>
      <remarks>返される値には、全体が表示されている行と一部が表示されている行が含まれます。</remarks>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.ListCount">
      <summary>コントロールにある行数の合計を返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.AddItemCols">
      <summary>AddItem モードで、列数を設定または返します。</summary>
      <remarks>
        AddItemCols プロパティを明示的に設定できます。設定されていない場合（AddItemCols が 0 の場合）は、
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItem(System.String)" />または
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.AddItemTitles(System.String)" />を呼び出すと、コントロールによって自動的に AddItemCols プロパティが設定されます。
      </remarks>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.AfterSort">
      <summary>列ヘッダーをクリックして列がソートされた後に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.ColHeadClick">
      <summary>コントロールのヘッダーがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.ColFootClick">
      <summary>コントロールのフッターがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.ColMove">
      <summary>ユーザーが選択した列の移動を完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.ColSelected">
      <summary>列が選択されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.ColResize">
      <summary>ユーザーが列のサイズ変更を完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.RowResize">
      <summary>ユーザーがリスト行のサイズ変更を完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.OnScroll">
      <summary>ユーザーがスクロールバーを使用して、リストを水平方向または垂直方向にスクロールしたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.RowChange">
      <summary>ユーザーがリストの行を変更したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.TopIndexChange">
      <summary>コントロールまたはスプリットの最初の表示行が変更された場合に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.LeftColChange">
      <summary>リストやスプリットの最初に表示されている列が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.SelChange">
      <summary>ユーザーが異なる範囲の行または列を選択したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.SplitChange">
      <summary>スプリットによってフォーカスが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.SplitRemoved">
      <summary>左右または上下分割が削除されるたびに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.DisplayMemberChanged">
      <summary>DisplayMember プロパティが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.DataSourceChanged">
      <summary>連結データソースが変更または要求されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.ValueMemberChanged">
      <summary>ValueMember プロパティが変化すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.SelectedValueChanged">
      <summary>SelectedValue プロパティが変化すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle">
      <summary>FetchRowStyles プロパティが True に設定されている場合に、リストのデータ行が表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.UnboundColumnFetch">
      <summary>連結コントロールで非連結列のセルの値を表示する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.FetchCellStyle">
      <summary>FetchStyle プロパティが True に設定されている列のセルデータがリストに表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.FetchCellTips">
      <summary>コントロールがフォーカスを持ち、マウスポインタがデータセル、列ヘッダー、スプリットヘッダー、またはコントロールのキャプションバーの上にアイドル状態でしばらく（CellTipsDelay プロパティで定義）置かれているときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.FormatText">
      <summary>NumberFormat プロパティが設定されている列のセルデータが表示されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.Error">
      <summary>データアクセスエラーが発生すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.OwnerDrawCell">
      <summary>列の OwnerDraw が True の場合に、セルが描画される直前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.LayoutReady">
      <summary>コントロールレイアウトファイルの非同期のダウンロードが完了すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1List.ListBase.C1ListBase.FetchScrollTips">
      <summary>リストがフォーカスを持ち、マウスでスクロールボックスが移動されたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.C1ListBase.SelectionMode">
      <summary>リストで使用できる選択のタイプを設定または返します。</summary>
      <remarks>
        詳細については、
        <see cref="T:C1.Win.C1List.SelectionModeEnum" />を参照してください。
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.C1List.#ctor">
      <summary>C1List コントロールの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1List.#ctor(C1.Win.C1List.C1Combo)">
      <summary></summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.ExportToExcel(System.String)">
      <summary>グリッドを XLS ファイルにエクスポートします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1List.ExportToExcel(System.String,System.Boolean)">
      <summary>グリッドを XLS ファイルにエクスポートします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1List.CreateAccessibilityInstance">
      <summary>このコントロールの新しいユーザー補助オブジェクトを作成します。</summary>
      <returns>
        コントロールの新しい
        <see cref="T:System.Windows.Forms.AccessibleObject" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.C1List.LoadLayout(System.String)">
      <summary>保存されているレイアウトを所定のファイルから読み込みます。</summary>
      <param name="filename">保存されているレイアウトを含むファイル。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.LoadLayout(System.IO.Stream)">
      <summary>保存されているレイアウトを所定のストリームから読み込みます。</summary>
      <param name="stream">保存されているレイアウトを含むストリーム。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.SaveLayout(System.IO.Stream)">
      <summary>グリッドのレイアウトを保存します。</summary>
      <param name="stream">グリッドのレイアウトを含むストリーム。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.SaveLayout(System.String,System.Boolean)">
      <summary>グリッドのレイアウトを保存します。</summary>
      <param name="filename">グリッドのレイアウトを含むファイル。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.SaveLayout(System.IO.Stream,System.Boolean)">
      <summary>グリッドのレイアウトを保存します。</summary>
      <param name="stream">グリッドのレイアウトを含むストリーム。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.OnGotFocus(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.OnClick(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.C1List.Find(System.String,C1.Win.C1List.MatchCompareEnum,System.Boolean,System.Int32,System.Int32)">
      <summary>特定の列内の文字列を検索します。</summary>
      <param name="target">ターゲット文字列。</param>
      <param name="searchMode">比較モード。</param>
      <param name="includeStart">最初の行から検索を開始します。</param>
      <param name="startBmk">検索の開始行。</param>
      <param name="colIndex">検索する列インデックス。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.Find(System.String,C1.Win.C1List.MatchCompareEnum,System.Boolean,System.Int32,System.String)">
      <summary>特定の列内の文字列を検索します。</summary>
      <param name="target">ターゲット文字列。</param>
      <param name="searchMode">比較モード。</param>
      <param name="includeStart">最初の行から検索を開始します。</param>
      <param name="startBmk">検索の開始行。</param>
      <param name="fieldName">フィールド名で指定された検索対象の列。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindString(System.String)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s で始まるセルテキストがある最初の行インデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindString(System.String,System.Int32)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s で始まるセルテキストがある、startIndex 後の最初の行インデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
      <param name="startIndex">開始行。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindString(System.String,System.Int32,System.Int32)">
      <summary>指定された列で、文字列 s で始まるセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
      <param name="startIndex">開始行。</param>
      <param name="col">列のインデックス。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindString(System.String,System.Int32,System.String)">
      <summary>指定された列で、文字列 s で始まるセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
      <param name="startIndex">開始行。</param>
      <param name="field">列のフィールド名。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindStringExact(System.String)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s と正確に一致するセルテキストがある最初の行インデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindStringExact(System.String,System.Int32,System.Int32)">
      <summary>指定された列で、文字列 s と正確に一致するセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
      <param name="startIndex">開始行。</param>
      <param name="col">列のインデックス。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindStringExact(System.String,System.Int32,System.String)">
      <summary>指定された列で、文字列 s と正確に一致するセルテキストがある、startIndex 後の最初の行のインデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
      <param name="startIndex">開始行。</param>
      <param name="field">列のフィールド名。</param>
    </member>
    <member name="M:C1.Win.C1List.C1List.FindStringExact(System.String,System.Int32)">
      <summary>DisplayMember プロパティで指定された列で、文字列 s と正確に一致するセルテキストがある、startIndex 後の最初の行インデックスを検索します。</summary>
      <param name="s">ターゲット文字列。</param>
      <param name="startIndex">開始行。</param>
    </member>
    <member name="P:C1.Win.C1List.C1List.PrintInfo">
      <summary>
        <see cref="P:C1.Win.C1List.C1List.PrintInfo" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1List.PreviewInfo">
      <summary>
        <see cref="T:C1.Win.C1List.PrintPreviewWinSettings" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1List.AllowColSelect">
      <summary>対話式の列の選択を有効または無効にします。</summary>
      <remarks>デフォルト値は true です。</remarks>
    </member>
    <member name="P:C1.Win.C1List.C1List.MatchEntry">
      <summary>コントロールがユーザーの入力に基づいて検索を実行する方法を設定または返します。</summary>
      <remarks>デフォルト値は MatchEntryEnum.None です。</remarks>
    </member>
    <member name="P:C1.Win.C1List.C1List.MatchCol">
      <summary>MatchEntry プロパティが None でない場合に、検索列を設定します。</summary>
      <remarks>デフォルト値は MatchColEnum.DisplayMember です。</remarks>
    </member>
    <member name="P:C1.Win.C1List.C1List.MatchCompare">
      <summary>検索の比較モードを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1List.MatchEntryTimeout">
      <summary>インクリメンタルサーチのタイムアウト（ミリ秒単位）を示す値を設定または返します。</summary>
      <remarks>デフォルト値は 2000 ミリ秒です。</remarks>
    </member>
    <member name="T:C1.Win.C1List.PrintOptionsForm">
      <summary>印刷/エクスポートオプションのフォームを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.OnExporterChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.OnActionChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_exporter">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_action">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_actionMask">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_rowHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_pageBreaks">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_fillEmpty">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_wrapText">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_outputFileName">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkUseGridColors">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_numFooterHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_numHeaderHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_txtFooter">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_txtHeader">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_numMaxRowHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_cmbRowHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkColFooter">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkColHeader">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkSplitHeader">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkGridHeader">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkPrintHorzSplits">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_cmbStretchToWidth">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_cmbWrapText">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_cmbHorzPageBreak">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkShowProgress">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_grpPageHeaders">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblFooterHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblHeaderHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblFooter">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblHeader">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_grpRenderOptions">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblRowHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblStretchToWidth">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblWrapText">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblHorzPageBreak">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_btnOK">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_btnCancel">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblAction">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_btnOutputFileName">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_btnOptions">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_cmbAction">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblOutputFileName">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_lblMaxRowHeight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_grpFormView">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.m_chkOneFormPerPage">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.#ctor">
      <summary>PrintOptionsFrom クラスの新しいインスタンスを作成する。</summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.Dispose(System.Boolean)">
      <summary>クラスが破棄されるときに呼び出されます。</summary>
      <param name="disposing">True でクリーンアップします。</param>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_btnOutputFileName_Click(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_btnOptions_Click(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_cmbAction_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.UpdateStatus">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.PrintOptionsForm_Load(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.PrintOptionsForm_Closing(System.Object,System.ComponentModel.CancelEventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_cmbRowHeight_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_cmbHorzPageBreak_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_cmbStretchToWidth_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.m_cmbWrapText_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary></summary>
    </member>
    <member name="E:C1.Win.C1List.PrintOptionsForm.ExporterChanged">
      <summary></summary>
    </member>
    <member name="E:C1.Win.C1List.PrintOptionsForm.ActionChanged">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.Exporter">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.OutputFileName">
      <summary>出力ファイルの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.Action">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.ActionMask">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.RowHeight">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.PageBreaks">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.FillEmpty">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.WrapText">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.PrintOptionsForm.ActionItem">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.ActionItem.Empty">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.ActionItem.#ctor(C1.Win.C1List.PrintInfo.ActionFlags,System.Object)">
      <summary>ActionItem クラスの新しいインスタンスを作成する。</summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.ActionItem.ToString">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.ActionItem.Action">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.PrintOptionsForm.ActionItem.Provider">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.PrintOptionsForm.RowHeightItem">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.RowHeightItem.RowHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.RowHeightItem.#ctor(C1.Win.C1List.PrintInfo.RowHeightEnum)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.RowHeightItem.ToString">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.RowHeightItem.RowHeightItems">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.PrintOptionsForm.PageBreakItem">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.PageBreakItem.PageBreaks">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.PageBreakItem.#ctor(C1.Win.C1List.PrintInfo.PageBreaksEnum)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.PageBreakItem.ToString">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.PageBreakItem.PageBreakItems">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.PrintOptionsForm.FillEmptyItem">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.FillEmptyItem.FillEmpty">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.FillEmptyItem.#ctor(C1.Win.C1List.PrintInfo.FillEmptyEnum)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.FillEmptyItem.ToString">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.FillEmptyItem.FillEmptyItems">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.PrintOptionsForm.WrapTextItem">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.WrapTextItem.WrapText">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.WrapTextItem.#ctor(C1.Win.C1List.PrintInfo.WrapTextEnum)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.PrintOptionsForm.WrapTextItem.ToString">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.PrintOptionsForm.WrapTextItem.WrapTextItems">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.C1TrueDBGridPrintOptionsFormDropDownEditor">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.C1OwnerDrawPrint">
      <summary>印刷およびプレビューするときに、カスタムページのヘッダーとフッターを管理するオブジェクトです。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1OwnerDrawPrint.RenderDirectText(System.Object,System.Object,System.String,System.Object,System.Drawing.Font,System.Drawing.Color,C1.Win.C1List.AlignHorzEnum)">
      <summary>ドキュメントのテキストをレンダリングします。</summary>
      <param name="x">レンダリングを開始する X 座標です。</param>
      <param name="y">レンダリングを開始する Y 座標です。</param>
      <param name="text">レンダリングするテキスト。</param>
      <param name="width">レンダリングするテキストの幅です。</param>
      <param name="font">使用するフォント。</param>
      <param name="textColor">テキストの色です。</param>
      <param name="horzAlign">テキストをレンダリングするための配置です。</param>
    </member>
    <member name="M:C1.Win.C1List.C1OwnerDrawPrint.RenderDirectImage(System.Object,System.Object,System.Drawing.Image,System.Object,System.Object,C1.Win.C1List.BackgroundPictureDrawModeEnum)">
      <summary>ドキュメントの画像をレンダリングします。</summary>
      <param name="x">X 座標。</param>
      <param name="y">Y 座標。</param>
      <param name="image">レンダリングする画像。</param>
      <param name="width">レンダリングする幅です。</param>
      <param name="height">レンダリングする高さです。</param>
      <param name="imageAlign">配置オプション。</param>
    </member>
    <member name="M:C1.Win.C1List.C1OwnerDrawPrint.RenderDirectLine(System.Object,System.Object,System.Object,System.Object,System.Drawing.Color,System.Double)">
      <summary>ドキュメントの線をレンダリングします。</summary>
      <param name="fromX">始点の x 座標。</param>
      <param name="fromY">始点の y 座標。</param>
      <param name="toX">終点の x 座標。</param>
      <param name="toY">終点の y 座標。</param>
      <param name="color">線の色。</param>
      <param name="width">線の幅。</param>
    </member>
    <member name="P:C1.Win.C1List.C1OwnerDrawPrint.HeightInch">
      <summary>描画領域の高さ（インチ単位）</summary>
    </member>
    <member name="T:C1.Win.C1List.PrintForm">
      <summary>印刷プレビューフォームです。</summary>
    </member>
    <member name="M:C1.Win.C1List.PrintForm.#ctor">
      <summary>PrintFrom クラスの新しいインスタンスを作成する。</summary>
    </member>
    <member name="M:C1.Win.C1List.PrintForm.Init">
      <summary>追加のフォーム初期化です。</summary>
      <remarks>"C1.Win.C1List.PrintForm" から継承された Form の FormBorderStyle、MaximizeBox、MinimizeBox、ControlBox などの プロパティをオーバーライドするには、PrintForm の Init メソッドをオーバーライドします。 最初に base.Init() を呼び出して、次に必要なプロパティを設定します。</remarks>
      <example>
        次の例はカスタム PrintForm です。サイズ変更可能な境界線を持ち、コントロールボックスをオンにし、最小化/最大化ボックスをオフにしています。
        <code>public class CustPrintForm : C1.Win.C1List.PrintForm { public CustPrintForm(): base() { } protected override void Init() { base.Init(); FormBorderStyle = FormBorderStyle.Sizable; this.ControlBox = true; this.MinimizeBox = false; this.MaximizeBox = false; } }</code></example>
    </member>
    <member name="M:C1.Win.C1List.PrintForm.Dispose(System.Boolean)">
      <summary>オーバーロードメソッド。オーバーライドされます。コントロールが使用するすべてのリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="T:C1.Win.C1List.C1TrueDBGridPreviewFormDropDownEditor">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.PrintCancelException">
      <summary>
        <see cref="T:C1.Win.C1List.C1List" />の印刷またはエクスポートがユーザーによってキャンセルされた場合に 生成される例外を表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.PrintCancelException.#ctor">
      <summary>
        <see cref="T:C1.Win.C1List.PrintCancelException" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo">
      <summary>
        <see cref="!:C1List.ExportTo()" />、
        <see cref="M:C1.Win.C1List.PrintInfo.Print" />などの メソッドを使用して、
        <see cref="T:C1.Win.C1List.C1List" />を 印刷またはエクスポートする方法を指定します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.ShouldSerializePageSettings">
      <summary>
        <see cref="P:C1.Win.C1List.PrintInfo.PageSettings" />プロパティをシリアライズするかどうかを示します。
      </summary>
      <returns>
        <see cref="P:C1.Win.C1List.PrintInfo.PageSettings" />をシリアライズする場合は
        <b>true</b>、そうでない場合は
        <b>false</b>。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.ShouldSerializePrintOptionsFormClassName">
      <summary>
        <see cref="P:C1.Win.C1List.PrintInfo.PrintOptionsFormClassName" />プロパティをシリアライズするかどうかを示します。
      </summary>
      <returns>
        <see cref="P:C1.Win.C1List.PrintInfo.PrintOptionsFormClassName" />をシリアライズする場合は
        <b>true</b>、そうでない場合は
        <b>false</b>。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.ResetPrintOptionsFormClassName">
      <summary>
        <see cref="P:C1.Win.C1List.PrintInfo.PrintOptionsFormClassName" />プロパティをデフォルト値にリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.ShouldSerializePreviewFormClassName">
      <summary>
        <see cref="P:C1.Win.C1List.PrintInfo.PreviewFormClassName" />プロパティをシリアライズするかどうかを示します。
      </summary>
      <returns>
        <see cref="P:C1.Win.C1List.PrintInfo.PreviewFormClassName" />をシリアライズする場合は
        <b>true</b>、そうでない場合は
        <b>false</b>。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.ResetPreviewFormClassName">
      <summary>
        <see cref="P:C1.Win.C1List.PrintInfo.PreviewFormClassName" />プロパティをデフォルト値にリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.PrintPreview">
      <summary>エンドユーザーが印刷操作で生成される出力をプレビューするための 個別のモーダルウィンドウを開きます。</summary>
      <remarks>
        <see cref="P:C1.Win.C1List.PrintInfo.PreviewFormClassName" />を使用して、プレビューダイアログに使用される カスタムフォームを指定できます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.Print">
      <summary>グリッドを印刷します。</summary>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.Print(System.Drawing.Printing.PrinterSettings)">
      <summary>グリッドを印刷します。</summary>
      <param name="printerSettings">使用するプリンタ設定（プリンタを含む）を指定します。</param>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.Print(System.IO.Stream)">
      <summary>
        現在のグリッドをストリームに
        <b>C1D</b>（ネイティブ
        <b>C1PrintDocument</b>）形式で保存します。
        <para>
          他の多くの印刷/エクスポートメソッドとは異なり、このメソッドに
          <b>C1Report</b>アセンブリは必要ありません。
        </para></summary>
      <param name="stream">出力ストリーム。</param>
      <remarks>
        <para>
          このメソッドが戻ると、ストリームの
          <b>Position</b>は 0 に設定されます。
        </para>
        <para>
          このメソッドでは、進捗ダイアログは表示されません （
          <see cref="P:C1.Win.C1List.PrintInfo.ShowProgressForm" />プロパティは無視されます）。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.PrintToStream">
      <summary>
        現在のグリッドをメモリストリームに
        <b>C1D</b>（ネイティブ
        <b>C1PrintDocument</b>）形式で保存します。
        <para>
          このメソッドが戻ると、ストリームの
          <b>Position</b>は 0 に設定されます。
        </para></summary>
      <returns>保存されたグリッドを含むストリーム。</returns>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.SaveAsC1d(System.String)">
      <summary>
        現在のグリッドを
        <b>C1D</b>ファイルとして保存します。このファイルは、 後で
        <b>C1PrintDocument</b>（
        <b>C1Report</b>製品で提供される）にロードできます。
        <para>
          他の多くの印刷/エクスポートメソッドとは異なり、このメソッドに
          <b>C1Report</b>アセンブリは必要ありません。
        </para></summary>
      <param name="outputFileName">出力ファイルの名前。</param>
      <returns>
        ファイルが正常に保存された場合は
        <b>true</b>、 そうでない場合は
        <b>false</b>。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.PrintInfo.SaveAsC1d(System.IO.Stream)">
      <summary>
        現在のグリッドをストリームに
        <b>C1D</b>（ネイティブ
        <b>C1PrintDocument</b>）形式で保存します。
        <para>
          他の多くの印刷/エクスポートメソッドとは異なり、このメソッドに
          <b>C1Report</b>アセンブリは必要ありません。
        </para></summary>
      <param name="stream">出力ストリーム。</param>
      <returns>
        ストリームが正常に書き込まれた場合は
        <b>true</b>、 そうでない場合は
        <b>false</b>。
      </returns>
      <remarks>
        <see cref="M:C1.Win.C1List.PrintInfo.Print(System.IO.Stream)" />メソッドとは異なり、 このメソッドは、保存後にストリームの位置をリセットしません。
      </remarks>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.RowCanSplit">
      <summary>グリッド行を複数ページに分割できるかどうかを示す値を取得または設定します。</summary>
      <remarks>この新しいプロパティは、列内のかなり長いテキストを複数ページに印刷する場合に役立ちます。</remarks>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.UseGridColors">
      <summary>グリッドの配色を印刷ページに変換するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.OwnerDrawPageHeader">
      <summary>ページヘッダーはオーナー描画であるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.OwnerDrawPageFooter">
      <summary>ページフッターはオーナー描画であるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageHeaderStyle">
      <summary>ページヘッダーのレンダリングに使用するスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageHeader">
      <summary>各ページの上端に印刷する文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageHeaderHeight">
      <summary>ページヘッダーの高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageFooterStyle">
      <summary>ページフッターのレンダリングに使用するスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageFooterHeight">
      <summary>ページフッターの高さを 100 分の 1 インチ単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageFooter">
      <summary>各ページの最下部に印刷する文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.RepeatColumnFooters">
      <summary>列フッターをページごとに配置するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.RepeatGridHeader">
      <summary>グリッドキャプションをページごとに配置するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.RepeatSplitHeaders">
      <summary>スプリットキャプションをページごとに配置するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PrintHorizontalSplits">
      <summary>左右分割をプレビューおよび印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.RepeatColumnHeaders">
      <summary>列ヘッダーをページごとに配置するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.FillAreaWidth">
      <summary>印刷ページの余白の処理方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageBreak">
      <summary>水平方向のページ区切りモードを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.WrapText">
      <summary>セルのテキストを折り返す方法を制御する値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PrintEmptyGrid">
      <summary>データ行がない場合にグリッドを印刷するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.MaxRowHeight">
      <summary>
        行の最大高さを 100 分の 1 インチ単位で取得または設定します （
        <see cref="P:C1.Win.C1List.PrintInfo.VarRowHeight" />が
        <see cref="F:C1.Win.C1List.PrintInfo.RowHeightEnum.StretchToMax" />の場合に使用されます）。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.VarRowHeight">
      <summary>印刷グリッドの行の高さを決定する方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.GridLines">
      <summary>グリッド線のレンダリング方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.ShowOptionsDialog">
      <summary>グリッドが印刷またはエクスポートされるときに、オプションダイアログを表示するかどうかを 示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.ShowProgressForm">
      <summary>グリッドが印刷またはエクスポートされるときに、進捗ダイアログを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.OneFormPerPage">
      <summary>Form ビュースタイルのグリッドをページごとに各レコードに出力するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.ShowSelection">
      <summary>プレビューまたは印刷時に選択したセルを強調表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PageSettings">
      <summary>印刷の PageSettings を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.ProgressCaption">
      <summary>印刷進捗ダイアログのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PrintOptionsFormClassName">
      <summary>印刷オプションダイアログとして使用されるフォームのクラス名を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintInfo.PreviewFormClassName">
      <summary>プレビューフォームとして使用されるフォームのクラス名を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo.FillEmptyEnum">
      <summary>印刷ページの余白の処理方法を指定します（埋めるかどうか）。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.FillEmptyEnum.ExtendAll">
      <summary>すべての列を均等に拡大してページを埋めます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.FillEmptyEnum.None">
      <summary>ページの右側に余白をそのまま残します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.FillEmptyEnum.ExtendLast">
      <summary>ページの右端の列を拡大して余白を埋めます。</summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo.PageBreaksEnum">
      <summary>グリッドが 1 ページに収まりきらない場合に、グリッドを拡張ページ （水平方向）に分割する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.PageBreaksEnum.FitIntoArea">
      <summary>すべての列を 1 ページに収まるように狭くします。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.PageBreaksEnum.ClipInArea">
      <summary>1 ページに収まらない列がクリップされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.PageBreaksEnum.OnSplit">
      <summary>必要に応じて、水平方向のページブレークをグリッドのスプリットに挿入できます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.PageBreaksEnum.OnColumn">
      <summary>必要に応じて、水平方向のページブレークを任意の列に挿入できます。</summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo.WrapTextEnum">
      <summary>セルテキストを折り返す方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.WrapTextEnum.Wrap">
      <summary>必要に応じて、任意のセル内のテキストを折り返すことができます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.WrapTextEnum.NoWrap">
      <summary>セル内のテキストは折り返されません。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.WrapTextEnum.LikeColumn">
      <summary>
        列の
        <see cref="P:C1.Win.C1List.Style.WrapText" />プロパティを使用します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo.GridLinesEnum">
      <summary>グリッド線をどのようにレンダリングするかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.GridLinesEnum.Always">
      <summary>グリッド線はレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.GridLinesEnum.None">
      <summary>グリッド線はレンダリングされません。</summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo.RowHeightEnum">
      <summary>行の高さを決定する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.RowHeightEnum.StretchToFit">
      <summary>すべてのデータが収まるように、行を垂直方向に引き伸ばします。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.RowHeightEnum.LikeGrid">
      <summary>グリッド行の高さを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.RowHeightEnum.StretchToMax">
      <summary>
        <see cref="P:C1.Win.C1List.PrintInfo.MaxRowHeight" />を越えない範囲で、行を垂直方向に引き伸ばします。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.PrintInfo.ActionFlags">
      <summary>許可される印刷オプションを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.ActionFlags.None">
      <summary>印刷/エクスポート操作は許可されません。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.ActionFlags.Print">
      <summary>印刷が許可されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.ActionFlags.Preview">
      <summary>プレビューが許可されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.ActionFlags.Export">
      <summary>エクスポートが許可されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PrintInfo.ActionFlags.MaskAll">
      <summary>すべての印刷/エクスポート操作が許可されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.PrintPreviewWinSettings">
      <summary>
        <see cref="M:C1.Win.C1List.PrintInfo.PrintPreview" />メソッドによって表示される 印刷プレビューウィンドウの特性を指定します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.PrintPreviewWinSettings.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.PrintPreviewWinSettings.ShouldSerializeUIStrings">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.PrintPreviewWinSettings.ResetUIStrings">
      <summary>UIStrings の配列をデフォルトのロケールに戻してリセットします。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.Caption">
      <summary>プレビューウィンドウのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.NavigationPaneDockingStyle">
      <summary>コントロールをナビゲーションページにドッキングする位置と方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.Location">
      <summary>プレビューウィンドウの位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.AllowSizing">
      <summary>プレビューウィンドウの大きさをエンドユーザーが変更できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.ZoomFactor">
      <summary>印刷プレビューのズーム倍率を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.Size">
      <summary>フォームのサイズを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.ToolBars">
      <summary>ツールバーの可視性を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.PrintPreviewWinSettings.UIStrings">
      <summary>ユーザーインタフェース文字列の配列を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.C1PrintProgress">
      <summary>印刷の進捗ウィンドウです。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1PrintProgress.#ctor">
      <summary>C1PrintProgress クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1PrintProgress.Dispose(System.Boolean)">
      <summary>オーバーロードされます。このコンポーネントによって使用されたリソースを解放します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1PrintProgress.TxtPrinting">
      <summary>グリッドを印刷/プレビューするときに、現在の進捗の表示に使用するテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1PrintProgress.TxtCancel">
      <summary>[キャンセル] ボタンのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1PrintProgress.TxtTitle">
      <summary>ウィンドウキャプションのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1PrintProgress.CancelClicked">
      <summary>印刷／プレビューがキャンセルされたかどうかを示す値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ListBase.View">
      <summary>スプリットの基本クラスです。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.Dispose">
      <summary>ビューが使用するリソースを解放します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.Dispose(System.Boolean)">
      <summary>ビューが使用するリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.FixedCols">
      <summary>固定列の数を返します。</summary>
      <returns>固定列の数</returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.getLeftStartPos">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.getRecordSelectorRect(System.Int32)">
      <summary></summary>
      <param name="row"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.getColumnFooterRect(System.Int32)">
      <summary></summary>
      <param name="col"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.getEditRect(C1.Win.C1List.Style)">
      <summary></summary>
      <param name="style"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.drawMarquee(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.drawCellLines(System.Windows.Forms.PaintEventArgs,System.Drawing.Rectangle,C1.Win.C1List.C1DisplayColumn)">
      <summary></summary>
      <param name="e"></param>
      <param name="r"></param>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.renderInnerCell(System.Drawing.Graphics,C1.Win.C1List.Style,System.Drawing.Rectangle@,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Image)">
      <summary></summary>
      <param name="g"></param>
      <param name="style"></param>
      <param name="r"></param>
      <param name="col"></param>
      <param name="row"></param>
      <param name="val"></param>
      <param name="button"></param>
      <param name="buttonText"></param>
      <param name="buttonAlways"></param>
      <param name="activecell"></param>
      <param name="buttonPicture"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.drawCells(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.needsHorzSB">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.setHBarPages">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.adjustBottomRow(System.Int32)">
      <summary></summary>
      <param name="row"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.getHScrollRect">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.pointInColWidth(System.Drawing.Point)">
      <summary></summary>
      <param name="p"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.partialRow(System.Int32)">
      <summary></summary>
      <param name="row"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.setCurrentCell(System.Int32,System.Int32)">
      <summary></summary>
      <param name="row"></param>
      <param name="col"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.invalidateCurrentCell">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.endHorizontalResizing">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.beginMoveColumn(System.Drawing.Point,System.Int32)">
      <summary></summary>
      <param name="p"></param>
      <param name="col"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.isLeftInsert(System.Int32,System.Drawing.Point)">
      <summary>四角形の左側に挿入ポイントを表示する場合、True を返します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.displayInsertionPoint(System.Int32,System.Drawing.Point)">
      <summary></summary>
      <param name="col"></param>
      <param name="p"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.continueMoveColumn(System.Drawing.Point)">
      <summary></summary>
      <param name="p"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.endMoveColumn(System.Drawing.Point)">
      <summary></summary>
      <param name="p"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.canEdit">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyUp">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyUp(System.Boolean)">
      <summary></summary>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyLeft">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyLeft(System.Char,System.Boolean)">
      <summary></summary>
      <param name="key"></param>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyRight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyRight(System.Boolean)">
      <summary></summary>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyPgDown">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyPgDown(System.Boolean)">
      <summary></summary>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyPgUp">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyPgUp(System.Boolean)">
      <summary></summary>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyHome">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyHome(System.Boolean)">
      <summary></summary>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyEnd">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.keyEnd(System.Boolean)">
      <summary></summary>
      <param name="eval"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.getEditData(System.Int32,C1.Win.C1List.C1DisplayColumn)">
      <summary></summary>
      <param name="row"></param>
      <param name="dc"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.computeRectAreas">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.computeColHeaderArea">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.computeColFooterArea">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.clipDataRect(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.clearSort(System.Int32)">
      <summary></summary>
      <param name="col"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.View.findTopRow(System.Int32,System.Int32)">
      <summary></summary>
      <param name="low"></param>
      <param name="high"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.RelationState">
      <summary>列の関係が定義されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.RelationState.None">
      <summary>列は関連付けられていません。</summary>
    </member>
    <member name="F:C1.Win.C1List.RelationState.Parent">
      <summary>列は親です。</summary>
    </member>
    <member name="F:C1.Win.C1List.RelationState.Child">
      <summary>列は子です。</summary>
    </member>
    <member name="T:C1.Win.C1List.C1DataColumn">
      <summary>データソースのバインド情報を定義する列を表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.#ctor">
      <summary>このオブジェクトの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.CellText(System.Int32)">
      <summary>所定の行のセルの表示値を取得します。</summary>
      <param name="row">取得する行です。</param>
      <returns>表示値です。</returns>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.CellValue(System.Int32)">
      <summary>所定の行のセル値を取得します。</summary>
      <param name="row">取得する行です。</param>
      <returns>データソースの基底データです。</returns>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.Refresh">
      <summary>表示されたすべての行で現在の列を無効にします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.RefreshCell">
      <summary>現在のセルを無効にします。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.RefreshCell(System.Int32)">
      <summary>所定の行のセルを無効にします。</summary>
      <param name="row">無効にする行です。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.Refetch">
      <summary>データソースからグリッド全体を再作成します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.RefetchCell">
      <summary>データソースから現在のセルに再挿入します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumn.RefetchCell(System.Int32)">
      <summary>データソースから指定されたデータを再挿入します。</summary>
      <param name="row">再取得する行です。</param>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.Caption">
      <summary>列ヘッダーのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.DataChanged">
      <summary>この列のデータが変更されたかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.DataField">
      <summary>列のデータベースのフィールド名を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.DataWidth">
      <summary>この列のセルに入力される文字の最大数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.DefaultValue">
      <summary>グリッドによって新しい行が追加されたときに、列のデフォルト値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.FooterText">
      <summary>列フッターに表示されるテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.NumberFormat">
      <summary>列の書式文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.ValueItems">
      <summary>
        この列の
        <see cref="P:C1.Win.C1List.C1DataColumn.ValueItems" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.Text">
      <summary>現在のセルの表示値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.Value">
      <summary>現在のセルの値を設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.Tag">
      <summary>この列に関連するユーザー定義オブジェクトを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.C1DisplayColumn">
      <summary>スプリットの列を表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.Dispose">
      <summary>このコンポーネントによって使用されたリソースを解放します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.Dispose(System.Boolean)">
      <summary>このコンポーネントによって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.FixColumn(System.Boolean)">
      <summary>v が True の場合は、列を固定してスクロールできないようにします。v が False の場合は、列を固定解除します。</summary>
      <param name="v">True は列を固定します。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.FixColumn(System.Boolean,System.Int32)">
      <summary>v が True の場合は、列を固定してスクロールできないようにします。v が False の場合は、列を固定解除します。</summary>
      <param name="v">True は列を固定します。</param>
      <param name="pos">固定後の列インデックスの位置です。</param>
      <remarks>v が True の場合、列は固定され、最初の位置に移動します。 v が False の場合、列は固定解除され、最後の位置に移動します。</remarks>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)">
      <summary>
        指定された条件を満たすセルの外観を変更するために使用する
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />を制御します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="style">
        外観の属性を指定する
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />です。
      </param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)">
      <summary>
        内容に基づいてセルの外観を変更するために使用する
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />を制御します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="style">
        外観の属性を指定する
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />です。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.ClearCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.C1DisplayColumn.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.C1DisplayColumn.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag,System.String)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.C1DisplayColumn.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumn.AutoSize">
      <summary>列内に表示されている最も長いフィールドに合わせて、列の幅を調整します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.CellTop">
      <summary>現在の行のセルの上端の垂直方向のオフセットを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.HeadingStyle">
      <summary>
        列ヘッダーの外観を制御する
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.Style">
      <summary>
        この列のルート
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.FooterStyle">
      <summary>
        列フッターの外観を制御する
        <see cref="P:C1.Win.C1List.C1DisplayColumn.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.Visible">
      <summary>列の表示状態を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.ColumnDivider">
      <summary>このプロパティは、列の間に描画される境界線のスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.Width">
      <summary>列の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.Height">
      <summary>列の高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.AllowSizing">
      <summary>列のサイズ変更が許可されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.MinWidth">
      <summary>
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.SpringMode" />にある場合、列のサイズを変更できる最小幅を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.HeaderDivider">
      <summary>ヘッダー領域のこの列に分割線を表示するかどうかを設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.FooterDivider">
      <summary>列分割線をフッター領域に表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.FetchStyle">
      <summary>列に対して、FetchCellStyle イベントが発生するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.ButtonHeader">
      <summary>列ヘッダーがボタンのように動作するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.ButtonFooter">
      <summary>列フッターがボタンのように動作するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.OwnerDraw">
      <summary>OwnerDrawCell イベントで、この列のセルを描画するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.DataColumn">
      <summary>
        このオブジェクトに関連する
        <see cref="T:C1.Win.C1List.C1DataColumn" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.Name">
      <summary>
        関連する
        <see cref="T:C1.Win.C1List.C1DataColumn" />オブジェクトのキャプションを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.BaseTypeConverter">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.BaseTypeConverter.ObjFromString(System.String)">
      <summary></summary>
      <param name="str"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.BaseTypeConverter.StringFromObj(System.Object)">
      <summary></summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.BaseTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary></summary>
      <param name="context"></param>
      <param name="sourceType"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.BaseTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary></summary>
      <param name="context"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.BaseTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary></summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.BaseTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary></summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.BitmapTypeConverter">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.BitmapTypeConverter.ObjFromString(System.String)">
      <summary></summary>
      <param name="str"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.BitmapTypeConverter.StringFromObj(System.Object)">
      <summary></summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.GenericTypeConverter">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.GenericTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary></summary>
      <param name="context"></param>
      <param name="sourceType"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.GenericTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary></summary>
      <param name="context"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.Util.GridLines">
      <summary>行と列の分割線に使用する行を表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.GridLines.#ctor">
      <summary>このオブジェクトの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.GridLines.op_Equality(C1.Win.C1List.Util.GridLines,C1.Win.C1List.Util.GridLines)">
      <summary></summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.GridLines.op_Inequality(C1.Win.C1List.Util.GridLines,C1.Win.C1List.Util.GridLines)">
      <summary></summary>
      <param name="a"></param>
      <param name="b"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.GridLines.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.Util.GridLines.Color">
      <summary>行と列の分割線に使用する行の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.GridLines.Style">
      <summary>行と列の分割線に使用する行のスタイルを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.Split">
      <summary>データを表示および編集する水平または垂直のペインを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Split.computeColHeaderArea">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.getHScrollRect">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Split.getFilterTextRect(System.Int32)">
      <summary></summary>
      <param name="col"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Split.getFilterRect(System.Int32)">
      <summary></summary>
      <param name="col"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Split.drawMarquee(System.Windows.Forms.PaintEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.Split.renderInnerCell(System.Drawing.Graphics,C1.Win.C1List.Style,System.Drawing.Rectangle@,System.Int32,System.Int32,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Image)">
      <summary></summary>
      <param name="g"></param>
      <param name="style"></param>
      <param name="r"></param>
      <param name="col"></param>
      <param name="row"></param>
      <param name="val"></param>
      <param name="button"></param>
      <param name="buttonText"></param>
      <param name="buttonAlways"></param>
      <param name="activecell"></param>
      <param name="buttonPicture"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Split.setCurrentCell(System.Int32,System.Int32)">
      <summary></summary>
      <param name="row"></param>
      <param name="col"></param>
    </member>
    <member name="M:C1.Win.C1List.Split.OnFilterChanged">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.invalidateCurrentCell">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.FilterColumnAt(System.Drawing.Point,System.Int32@)">
      <summary></summary>
      <param name="p"></param>
      <param name="col"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Split.keyUp">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.keyLeft">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.keyRight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.keyPgDown">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.keyPgUp">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.getEditData(System.Int32,C1.Win.C1List.C1DisplayColumn)">
      <summary></summary>
      <param name="row"></param>
      <param name="dc"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Split.ShouldSerializeCaptionHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.ShouldSerializeColumnCaptionHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.ShouldSerializeColumnFooterHeight">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Split.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)">
      <summary>
        指定された条件を満たすセルの外観を変更するために使用する
        <see cref="P:C1.Win.C1List.Split.Style" />を制御します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="style">
        外観の属性を指定する
        <see cref="P:C1.Win.C1List.Split.Style" />です。
      </param>
    </member>
    <member name="M:C1.Win.C1List.Split.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)">
      <summary>
        内容に基づいてセルの外観を変更するために使用する
        <see cref="P:C1.Win.C1List.Split.Style" />を制御します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="style">
        外観の属性を指定する
        <see cref="P:C1.Win.C1List.Split.Style" />です。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="M:C1.Win.C1List.Split.ClearCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.Split.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
    </member>
    <member name="M:C1.Win.C1List.Split.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.Split.AddCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
    </member>
    <member name="M:C1.Win.C1List.Split.ClearRegexCellStyle(C1.Win.C1List.CellStyleFlag,System.String)">
      <summary>
        以前の
        <see cref="M:C1.Win.C1List.Split.AddRegexCellStyle(C1.Win.C1List.CellStyleFlag,C1.Win.C1List.Style,System.String)" />メソッドの呼び出しで設定されたセル条件を削除します。
      </summary>
      <param name="condition">
        1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />列挙型の組み合わせ。
      </param>
      <param name="regex">正規表現文字列。</param>
    </member>
    <member name="P:C1.Win.C1List.Split.AllowFocus">
      <summary>スプリットがフォーカスを受け取ることができるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.AllowColMove">
      <summary>列を移動する機能を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.AllowColSelect">
      <summary>列を選択する機能を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.Name">
      <summary>スプリットの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.AllowRowSizing">
      <summary>行のサイズ変更を対話式で実行する方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.AllowHorizontalSizing">
      <summary>ユーザーが左右分割をサイズ変更できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.AllowVerticalSizing">
      <summary>ユーザーが上下分割をサイズ変更できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.AlternatingRowStyle">
      <summary>
        スプリットが、奇数番号の行に
        <see cref="P:C1.Win.C1List.Split.OddRowStyle" />を使用し、偶数番号の行に
        <see cref="P:C1.Win.C1List.Split.EvenRowStyle" />を使用するかどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.Caption">
      <summary>キャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.CaptionHeight">
      <summary>キャプションの高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.ColumnCaptionHeight">
      <summary>列のキャプションの高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.ColumnFooterHeight">
      <summary>列フッターの高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.CurrentCellVisible">
      <summary>スプリットの現在のセルの表示状態を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.ExtendRightColumn">
      <summary>最終列を延長してスプリットのデッドエリアを埋める方法を決定する値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.FetchRowStyles">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントが発生するかどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.FirstRow">
      <summary>スプリットで表示される最初の行の行インデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.GroupColumns">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.Split.LeftCol">
      <summary>スプリットに表示される左端の列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.VerticalScrollGroup">
      <summary>スプリット間で垂直スクロールを同期するグループを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.HorizontalScrollGroup">
      <summary>スプリット間で水平スクロールを同期するグループを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.VScrollBar">
      <summary>
        垂直スクロールバーの外観を制御する
        <see cref="T:C1.Win.C1List.Util.VBar" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.HScrollBar">
      <summary>
        水平スクロールバーの外観を制御する
        <see cref="T:C1.Win.C1List.Util.HBar" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.SplitSize">
      <summary>スプリットのサイズを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Split.SplitSizeMode">
      <summary>
        <see cref="P:C1.Win.C1List.Split.SplitSize" />プロパティを使用してスプリットの実際のサイズを決定する方法を示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.CaptionStyle">
      <summary>
        キャプション領域の外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.EvenRowStyle">
      <summary>
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AlternatingRows" />を使用しているときに偶数番号の行の外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.FooterStyle">
      <summary>
        列フッターの外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.HeadingStyle">
      <summary>
        グリッドの列ヘッダーの外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.HighLightRowStyle">
      <summary>
        <see cref="P:C1.Win.C1List.Split.MarqueeStyle" />が Highlight Row/Cell に設定されているときに、現在の行/セルを制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.OddRowStyle">
      <summary>
        <see cref="P:C1.Win.C1List.ListBase.C1ListBase.AlternatingRows" />を使用しているときに奇数番号の行の外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.RecordSelectorStyle">
      <summary>
        RecordSelectors の外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.SelectedStyle">
      <summary>
        選択された行と列の外観を制御する
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.Style">
      <summary>
        スプリットの root
        <see cref="P:C1.Win.C1List.Split.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Split.DisplayColumns">
      <summary>
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />オブジェクトのコレクションを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.ValueItems">
      <summary>セルをレンダリングする方法を定義するオブジェクトを表します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.AnnotatePicture">
      <summary>値と表示値の両方を表示する場合は True です。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.DefaultItem">
      <summary>デフォルトの ValueItem のインデックスまたは -1（デフォルトがない場合）を設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.Presentation">
      <summary>ValueItem の表示方法を設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.Translate">
      <summary>ValueItem を使用して列内のデータ値を変換するかどうかを設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.Validate">
      <summary>ValueItemCollection を使用して入力値を検証するかどうかを設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.Values">
      <summary>Value/DisplayValue ペアのコレクションを返します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ValueItemCollection">
      <summary>
        <see cref="T:C1.Win.C1List.ValueItem" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.ValueItemCollection.Add(C1.Win.C1List.ValueItem)">
      <summary>
        <see cref="T:C1.Win.C1List.ValueItem" />をコレクションの末尾に追加します。
      </summary>
      <param name="vi">追加する ValueItem です。</param>
      <returns>ValueItem が追加されたインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.ValueItemCollection.OnInsert(System.Int32,System.Object)">
      <summary></summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1List.ValueItemCollection.Insert(System.Int32,C1.Win.C1List.ValueItem)">
      <summary>
        指定されたインデックスに
        <see cref="T:C1.Win.C1List.ValueItem" />を追加します。
      </summary>
      <param name="index">ValueItem が挿入される 0 から始まるインデックスです。</param>
      <param name="vi">挿入する ValueItem です。</param>
    </member>
    <member name="M:C1.Win.C1List.ValueItemCollection.IndexOf(C1.Win.C1List.ValueItem)">
      <summary>
        指定された
        <see cref="T:C1.Win.C1List.ValueItem" />のインデックスを取得します。
      </summary>
      <param name="vi">検索する ValueItem です。</param>
      <returns>ValueItem のインデックスです。</returns>
    </member>
    <member name="P:C1.Win.C1List.ValueItemCollection.Item(System.Int32)">
      <summary>
        指定されたインデックス位置のコレクションから指定された
        <see cref="T:C1.Win.C1List.ValueItem" />を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.ValueItem">
      <summary>値/詳表示値のペアを定義するオブジェクトを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ValueItem.#ctor">
      <summary>ValueItem クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ValueItem.#ctor(System.String,System.Object)">
      <summary>ValueItem クラスの新しいインスタンスを初期化します。</summary>
      <param name="value">基底のデータ値です。</param>
      <param name="displayValue">変換された値です。</param>
    </member>
    <member name="M:C1.Win.C1List.ValueItem.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.ValueItem.Value">
      <summary>この項目の（変換されていない）生の値を設定または取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItem.DisplayValue">
      <summary>この項目の書式設定された（表示）値を設定または取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.C1DataColumnCollection">
      <summary>
        <see cref="T:C1.Win.C1List.C1DataColumn" />オブジェクトのコレクションを含みます。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumnCollection.OnInsert(System.Int32,System.Object)">
      <summary></summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumnCollection.Clear">
      <summary>コレクションからすべての要素を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumnCollection.Add(C1.Win.C1List.C1DataColumn)">
      <summary>C1DataColumn をコレクションの末尾に追加します。</summary>
      <param name="dc">追加する C1DataColumn です。</param>
      <returns>C1DataColumn が追加されたインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumnCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックスにある C1DataColumn を削除します。</summary>
      <param name="index">削除する行の 0 から始まるインデックスです。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumnCollection.Insert(System.Int32,C1.Win.C1List.C1DataColumn)">
      <summary>
        指定されたインデックスに
        <see cref="T:C1.Win.C1List.C1DataColumn" />を追加します。
      </summary>
      <param name="index">C1DataColumn が挿入される 0 から始まるインデックスです。</param>
      <param name="dc">挿入する C1DataColumn です。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DataColumnCollection.IndexOf(C1.Win.C1List.C1DataColumn)">
      <summary>
        指定された
        <see cref="T:C1.Win.C1List.C1DataColumn" />のインデックスを取得します。
      </summary>
      <param name="dc"></param>
      <returns>C1DataColumn のインデックスです。</returns>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumnCollection.Item(System.Int32)">
      <summary>コレクションから、指定したインデックスの指定した C1DataColumn を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumnCollection.Item(System.String)">
      <summary>コレクションから、指定した名前の指定した C1DataColumn を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.C1DisplayColumnCollection">
      <summary>
        <see cref="T:C1.Win.C1List.Split" />の中の
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />のコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.Insert(System.Int32,C1.Win.C1List.C1DisplayColumn)">
      <summary>
        指定されたインデックスに
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />を追加します。
      </summary>
      <param name="index">C1DisplayColumn が挿入される 0 から始まるインデックスです。</param>
      <param name="vc">挿入する C1DataColumn です。</param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.IndexOf(C1.Win.C1List.C1DisplayColumn)">
      <summary>
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />のインデックスを取得します。
      </summary>
      <param name="vc"></param>
      <returns>C1DisplayColumn のインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.IndexOf(C1.Win.C1List.C1DataColumn)">
      <summary>
        <see cref="T:C1.Win.C1List.C1DataColumn" />によって指定された
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />のインデックスを取得します。
      </summary>
      <param name="dc"></param>
      <returns>C1DisplayColumn のインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.OnRemove(System.Int32,System.Object)">
      <summary></summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary></summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.OnClear">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1DisplayColumnCollection.OnClearComplete">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumnCollection.Item(System.Int32)">
      <summary>
        コレクションから、指定したインデックスの指定した
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumnCollection.Item(C1.Win.C1List.C1DataColumn)">
      <summary>
        指定した
        <see cref="T:C1.Win.C1List.C1DataColumn" />を含むコレクションから指定した
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumnCollection.Item(System.String)">
      <summary>
        コレクションから、指定した名前の指定した
        <see cref="T:C1.Win.C1List.C1DisplayColumn" />を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.C1PropImagesCollection">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.C1PropImagesCollection.Add(System.Drawing.Image)">
      <summary></summary>
      <param name="m"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.GridStyleCollection">
      <summary>
        名前付き
        <see cref="T:C1.Win.C1List.Style" />のコレクションを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.GridStyleCollection.#ctor(C1.Win.C1List.ListBase.Frame)">
      <summary></summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1List.GridStyleCollection.OnInsert(System.Int32,System.Object)">
      <summary></summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1List.GridStyleCollection.Add(C1.Win.C1List.Style)">
      <summary>
        <see cref="T:C1.Win.C1List.Style" />をコレクションの末尾に追加します。
      </summary>
      <param name="style">追加する Style です。</param>
      <returns>
        <see cref="T:C1.Win.C1List.Style" />が追加されたインデックスです。
      </returns>
    </member>
    <member name="M:C1.Win.C1List.GridStyleCollection.Insert(System.Int32,C1.Win.C1List.Style)">
      <summary>
        指定されたインデックスに
        <see cref="T:C1.Win.C1List.Style" />を追加します。
      </summary>
      <param name="index">Style が挿入される 0 から始まるインデックスです。</param>
      <param name="style">挿入する Style です。</param>
    </member>
    <member name="M:C1.Win.C1List.GridStyleCollection.IndexOf(C1.Win.C1List.Style)">
      <summary>
        指定された
        <see cref="T:C1.Win.C1List.Style" />のインデックスを取得します。
      </summary>
      <param name="style"></param>
      <returns>Style のインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.GridStyleCollection.RemoveAt(System.Int32)">
      <summary>
        指定されたインデックスにある
        <see cref="T:C1.Win.C1List.Style" />を削除します。
      </summary>
      <param name="index">削除する Style の 0 から始まるインデックスです。</param>
    </member>
    <member name="P:C1.Win.C1List.GridStyleCollection.Item(System.Int32)">
      <summary>指定されたインデックスの指定した Style をコレクションから取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.GridStyleCollection.Item(System.String)">
      <summary>指定された名前の指定した Style をコレクションから取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.SelectedColumnCollection">
      <summary>
        選択された列を表す
        <see cref="T:C1.Win.C1List.C1DataColumn" />オブジェクトのコレクションが含まれます。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.SelectedColumnCollection.Clear">
      <summary>コレクションからすべての要素を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.SelectedColumnCollection.RemoveAt(System.Int32)">
      <summary>指定したインデックスにある C1DataColumn を削除します。</summary>
      <param name="index">削除する行の 0 から始まるインデックスです。</param>
    </member>
    <member name="M:C1.Win.C1List.SelectedColumnCollection.Add(C1.Win.C1List.C1DataColumn)">
      <summary>C1DataColumn をコレクションの末尾に追加します。</summary>
      <param name="dc">追加する C1DataColumn です。</param>
      <returns>C1DataColumn が追加されたインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.SelectedColumnCollection.Insert(System.Int32,C1.Win.C1List.C1DataColumn)">
      <summary>
        指定されたインデックスに
        <see cref="T:C1.Win.C1List.C1DataColumn" />を追加します。
      </summary>
      <param name="index">C1DataColumn が挿入される 0 から始まるインデックスです。</param>
      <param name="dc">挿入する C1DataColumn です。</param>
    </member>
    <member name="T:C1.Win.C1List.SelectedRowCollection">
      <summary>選択された行のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.SelectedRowCollection.Clear">
      <summary>コレクションからすべての要素を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1List.SelectedRowCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある行を削除します。</summary>
      <param name="index">削除する行の 0 から始まるインデックスです。</param>
    </member>
    <member name="M:C1.Win.C1List.SelectedRowCollection.Add(System.Int32)">
      <summary>行をコレクションの末尾に追加します。</summary>
      <param name="row">追加する行番号です。</param>
      <returns>行が追加されたインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.SelectedRowCollection.Insert(System.Int32,System.Int32)">
      <summary>指定されたインデックスに行を追加します。</summary>
      <param name="index">行が挿入される 0 から始まるインデックスです。</param>
      <param name="row">挿入する行です。</param>
    </member>
    <member name="M:C1.Win.C1List.SelectedRowCollection.IndexOf(System.Int32)">
      <summary>指定された行のインデックスを取得します。</summary>
      <param name="row"></param>
      <returns>行のインデックスです。</returns>
    </member>
    <member name="M:C1.Win.C1List.SelectedRowCollection.Contains(System.Int32)">
      <summary>指定された行がコレクションに含まれるかどうかを判定します。</summary>
      <param name="row"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.SelectedRowCollection.Item(System.Int32)">
      <summary>コレクションから指定された行インデックスを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.SplitCollection">
      <summary>Split オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.IMemberTypeEncoder">
      <summary>このインタフェースを使用すると、オブジェクトやコレクションで、メンバのタイプを カスタマイズした方法でシリアライズできます。 コレクションがこのインタフェースを実装すると、コレクション項目を シリアライズする間に TypeToString が呼び出され、null 以外の文字列を返す すべての項目に対して、項目の要素名としてその文字列が使用されます。 クラスがこのインタフェースを実装し、クラスのメンバに TypeNameSerialization.Custom 属性があり、 XmlAttribute 属性がない（つまり、要素としてシリアライズされる）場合、 そのメンバがシリアライズされたときに TypeToString がオーナーに対して呼び出され、それが null 以外の 文字列を返す場合は、TypeName 属性の値としてその文字列が使用されます。 このインタフェースを実装するコレクションをデシリアライズすると、 StringToType がコレクションの新しい各項目に対して呼び出され、 それが null 以外のタイプを返す場合は、そのタイプを使用して項目が作成されます。そうでない場合は、 TypeNameSerialization 属性が使用されます。 このインタフェースを実装するクラスをデシリアライズすると、StringToType TypeNameSerialization.Custom 属性セットを持つメンバに対して、そのクラスに StringToType が呼び出されます。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.IMemberTypeEncoder.TypeToString(System.Object)">
      <summary>オブジェクトのタイプを表す文字列を返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.IMemberTypeEncoder.StringToType(System.String)">
      <summary>シリアライズされた文字列から復元されたタイプを返します。</summary>
    </member>
    <member name="M:C1.Win.C1List.SplitCollection.IndexOf(C1.Win.C1List.ListBase.View)">
      <summary>指定されたスプリットの場合、インデックスを取得します。</summary>
      <param name="v"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.SplitCollection.Item(System.Int32)">
      <summary>指定したスプリットオブジェクトをコレクションから取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.SplitCollection.Item(System.String)">
      <summary>指定したスプリットオブジェクトをコレクションから取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.SplitCollection.Item(System.Int32,System.Int32)">
      <summary>指定したスプリットオブジェクトをコレクションから取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.SplitCollection.RowCount">
      <summary>コレクション内の上下分割の数を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1List.SplitCollection.ColCount">
      <summary>コレクション内の左右分割の数を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ChangeEventHandler">
      <summary>Change イベントのデリゲートです。</summary>
    </member>
    <member name="T:C1.Win.C1List.NotInListEventHandler">
      <summary>NotInList イベントのデリゲートです。</summary>
    </member>
    <member name="T:C1.Win.C1List.MismatchEventHandler">
      <summary>Mismatch イベントのデリゲートです。</summary>
    </member>
    <member name="T:C1.Win.C1List.OpenEventHandler">
      <summary>
        <see cref="E:C1.Win.C1List.ComboBoxContainer.Open" />イベントのハンドラです。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.CloseEventHandler">
      <summary>
        <see cref="E:C1.Win.C1List.ComboBoxContainer.Close" />イベントのハンドラです。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.NotInListEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.C1Combo.NotInList" />イベントのイベントデータを定義します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.NotInListEventArgs.NewEntry">
      <summary>ユーザーによって入力され、リストにないテキストを表す文字列。</summary>
    </member>
    <member name="P:C1.Win.C1List.NotInListEventArgs.Retry">
      <summary>新しいエントリがリストにないかどうかをコントロールが再照会する場合は、True。</summary>
    </member>
    <member name="T:C1.Win.C1List.MismatchEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.C1Combo.Mismatch" />イベントのイベントデータを定義します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.MismatchEventArgs.NewEntry">
      <summary>ユーザーによって入力され、リストにないテキストを表す文字列。</summary>
    </member>
    <member name="P:C1.Win.C1List.MismatchEventArgs.Reposition">
      <summary>一致しない入力が行われたときに現在の行がリストの先頭に戻らないようにする場合は、False。</summary>
    </member>
    <member name="T:C1.Win.C1List.DragModeEnum">
      <summary>コンボボックスとプログラマのどちらがドラッグ操作を処理するかを決定する値を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DragModeEnum.Automatic">
      <summary>コンボボックスがドラッグ操作を処理します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DragModeEnum.Manual">
      <summary>コンボボックスがドラッグ操作を処理します。</summary>
    </member>
    <member name="T:C1.Win.C1List.DropModeEnum">
      <summary>コンボボックスがドロップ操作を処理する方法を決定する値を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropModeEnum.Automatic">
      <summary>コンボボックスがドロップ操作を処理します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropModeEnum.Manual">
      <summary>プログラマが手作業でドロップ操作を処理します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ComboStyleEnum">
      <summary>コンボボックスのスタイルを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1List.ComboStyleEnum.DropdownCombo">
      <summary>テキストボックスとドロップダウンリストで構成されます。ユーザーはリストから選択するか、テキストボックスに入力できます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ComboStyleEnum.SimpleCombo">
      <summary>テキストボックスと常に表示されるリストで構成されます。 ユーザーはリストから選択するか、テキストボックスに入力できます。 単純なコンボボックスのサイズには、テキスト部分とリスト部分が含まれます。 デフォルトでは、単純なコンボボックスは、リストに何も表示されていない状態のサイズになります。 リストに表示される項目を増やすには、設計時にコントロールをサイズ変更するか、 実行時に Height プロパティを増やします。</summary>
    </member>
    <member name="F:C1.Win.C1List.ComboStyleEnum.DropdownList">
      <summary>0（DropdownCombo）の設定と同様に、テキストボックスとドロップダウンリストで構成されます。 ただし、このスタイルではテキストを入力できません。ドロップダウンリストから選択できるだけです。</summary>
    </member>
    <member name="T:C1.Win.C1List.DropdownPositionEnum">
      <summary>ドロップダウンリストの位置を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropdownPositionEnum.DefaultPosition">
      <summary>ドロップダウンリストは、右下に開きます。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropdownPositionEnum.RightDown">
      <summary>ドロップダウンリストは、右下に開きます。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropdownPositionEnum.RightUp">
      <summary>ドロップダウンリストは、右上に開きます。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropdownPositionEnum.LeftDown">
      <summary>ドロップダウンリストは、左下に開きます。</summary>
    </member>
    <member name="F:C1.Win.C1List.DropdownPositionEnum.LeftUp">
      <summary>ドロップダウンリストは、左上に開きます。</summary>
    </member>
    <member name="T:C1.Win.C1List.DropDownList">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.DropDownList.#ctor(C1.Win.C1List.C1Combo)">
      <summary>DroDownList クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1List.DropDownList.GetService(System.Type)">
      <summary></summary>
      <param name="service"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.DropDownList.OnChange(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.DropDownList.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.IOnLongOpInProgressProvider">
      <summary>フィードバックを返すために使用するインタフェース、操作が長時間にわたる場合にキャンセル機能を提供するインタフェースです。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.IOnLongOpInProgressProvider.OnLongOpInProgress(System.Boolean@)">
      <summary></summary>
      <param name="cancel"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.IOnLongOpInProgressProvider.OnLongOpInProgress">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.LongOpInProgressArgs">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.LongOpInProgressArgs.CancelIfPossible">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.LongOpInProgressHandler">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.C1Stack">
      <summary>System.Collections.ArrayList に基づいたインデックスアクセスによる単純なスタックです。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.C1Stack.Push(System.Object)">
      <summary></summary>
      <param name="o"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.C1Stack.Pop">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.C1Stack.Peek">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.C1Stack.IsIndexInBounds(System.Int32)">
      <summary></summary>
      <param name="idx"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.C1Stack.Top">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.C1Stack.Length">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.C1Stack.IsEmpty">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.Pair">
      <summary>汎用ペアクラス。（gp utils に移動する必要があります）。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Pair.#ctor">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Pair.#ctor(System.Object,System.Object)">
      <summary></summary>
      <param name="first"></param>
      <param name="second"></param>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Pair.First">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Pair.Second">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Design.PropBagAttribute">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Design.LayoutAttribute">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.TypeSerialization">
      <summary>項目タイプをシリアライズする方法を決定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.Util.Xml.Serialization.TypeSerialization.None">
      <summary>項目タイプをシリアライズしません（デフォルト）。</summary>
    </member>
    <member name="F:C1.Win.C1List.Util.Xml.Serialization.TypeSerialization.FullName">
      <summary>項目タイプを完全修飾名としてシリアライズします。</summary>
    </member>
    <member name="F:C1.Win.C1List.Util.Xml.Serialization.TypeSerialization.AssemblyQualifiedName">
      <summary>項目タイプを完全修飾名とアセンブリ名としてシリアライズします。</summary>
    </member>
    <member name="F:C1.Win.C1List.Util.Xml.Serialization.TypeSerialization.Custom">
      <summary>メンバにオーナーの IMemberTypeEncoder を使用します （コレクション項目の場合、自動的に実行されます）。</summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.MemberTypeEncoderHelper">
      <summary>IMemberTypeEncoder の実装に使用するヘルパークラスです。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.MemberTypeEncoderHelper.TypeToString(System.Object)">
      <summary></summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.MemberTypeEncoderHelper.StringToType(System.String)">
      <summary></summary>
      <param name="str"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.TypeSerializationAttribute">
      <summary>シリアライザにプロパティまたはフィールドのタイプ名をシリアライズさせます。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.TypeSerializationAttribute.#ctor(C1.Win.C1List.Util.Xml.Serialization.TypeSerialization)">
      <summary></summary>
      <param name="ts"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.TypeSerializationAttribute.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.TypeSerializationAttribute.TypeSerialization">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.CollectionElementTypeAttribute">
      <summary>この属性を使用するとコレクションの要素タイプ名を指定できます （この場合、保存は必要ありません）。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.CollectionElementTypeAttribute.#ctor(System.Type)">
      <summary></summary>
      <param name="type"></param>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.CollectionElementTypeAttribute.CollectionElementType">
      <summary></summary>
    </member>
    <member name="T:C1.Win.C1List.Util.Xml.Serialization.Serializer">
      <summary>オブジェクトを XML にシリアライズし、XML からオブジェクトをシリアライズ解除します。</summary>
      <remarks>このクラスのすべてのメソッドは静的です（Visual Basic で共有）。 このクラスのインスタンスは作成できません。</remarks>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@)">
      <summary>指定したオブジェクトをシリアライズして、ストリームを使用して XML ドキュメントのインスタンスをファイルに書き込みます。 基になるストリームは閉じられません。オブジェクトのコピーに役立ちます。 呼び出し元が、writer.Close() を呼び出し、ライタと基になるストリームを閉じる必要があります。</summary>
      <param name="stream">XML ドキュメントのインスタンスの書き込みに使用するストリーム</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
      <param name="writer">XmlWriter オブジェクト参照。ストリーム/ライタの操作後に writer.Close を呼び出します。</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定したオブジェクトをシリアライズして、ストリームを使用して XML ドキュメントのインスタンスをファイルに書き込みます。</summary>
      <param name="stream">XML ドキュメントのインスタンスの書き込みに使用するストリーム</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定したオブジェクトをシリアライズして、XmlWriter を使用して XML ドキュメントのインスタンスをファイルに書き込みます。</summary>
      <param name="writer">XML ドキュメントのインスタンスの書き込みに使用する XmlWriter</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@)">
      <summary>指定したオブジェクトをシリアライズして、ストリームを使用して XML ドキュメントのインスタンスをファイルに書き込みます。 基になるストリームは閉じられません。オブジェクトのコピーに役立ちます。 呼び出し元が、writer.Close() を呼び出し、ライタと基になるストリームを閉じる必要があります。</summary>
      <param name="stream">XML ドキュメントのインスタンスの書き込みに使用するストリーム</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="mi">シリアライズするオブジェクトの FieldInfo または MemberInfo のオブジェクトコンテキスト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
      <param name="writer">XmlWriter オブジェクト参照。ストリーム/ライタの操作後に writer.Close を呼び出します。</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces,System.Xml.XmlTextWriter@,System.Attribute[])">
      <summary></summary>
      <param name="stream"></param>
      <param name="o"></param>
      <param name="mi"></param>
      <param name="namespaces"></param>
      <param name="writer"></param>
      <param name="filter"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.IO.Stream,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定したオブジェクトをシリアライズして、ストリームを使用して XML ドキュメントのインスタンスをファイルに書き込みます。</summary>
      <param name="stream">XML ドキュメントのインスタンスの書き込みに使用するストリーム</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="mi">シリアライズするオブジェクトの FieldInfo または MemberInfo のオブジェクトコンテキスト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces,System.Attribute[])">
      <summary>指定したオブジェクトをシリアライズして、XmlWriter を使用して XML ドキュメントのインスタンスをファイルに書き込みます。</summary>
      <param name="writer">XML ドキュメントのインスタンスの書き込みに使用する XmlWriter</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="mi">シリアライズするオブジェクトの FieldInfo または MemberInfo のオブジェクトコンテキスト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
      <param name="filter">シリアライズする対象を指定する属性の配列</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.Xml.XmlTextWriter,System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定したオブジェクトをシリアライズして、XmlWriter を使用して XML ドキュメントのインスタンスをファイルに書き込みます。</summary>
      <param name="writer">XML ドキュメントのインスタンスの書き込みに使用する XmlWriter</param>
      <param name="o">シリアライズするオブジェクト</param>
      <param name="mi">シリアライズするオブジェクトの FieldInfo または MemberInfo のオブジェクトコンテキスト</param>
      <param name="namespaces">オブジェクトから参照される XmlSerializerNamespaces</param>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Serialize(System.Object,System.Reflection.MemberInfo,System.Xml.Serialization.XmlSerializerNamespaces)">
      <summary>指定されたオブジェクトを XML 形式文字列にシリアライズします。</summary>
      <param name="o"></param>
      <param name="mi"></param>
      <param name="namespaces"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Deserialize(System.IO.Stream,System.Type)">
      <summary>XML ドキュメントインスタンスのシリアライズを解除します。</summary>
      <param name="stream">シリアライズされる XML ドキュメントインスタンスを含むストリーム</param>
      <param name="type">シリアライズを解除するオブジェクトのタイプ</param>
      <returns>シリアライズを解除するオブジェクト</returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Deserialize(System.Xml.XmlTextReader,System.Type)">
      <summary>XML ドキュメントインスタンスのシリアライズを解除します。</summary>
      <param name="reader">シリアライズされる XML ドキュメントインスタンスを含む XmlReader</param>
      <param name="type">シリアライズを解除するオブジェクトのタイプ</param>
      <returns>シリアライズを解除するオブジェクト</returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Deserialize(System.Xml.XmlTextReader,System.Object,System.Type,System.Type)">
      <summary>オブジェクトのシリアライズを解除します。</summary>
      <param name="reader">シリアライズされる XML ドキュメントインスタンスを含む XmlReader</param>
      <param name="o">シリアライズを解除するオブジェクト</param>
      <param name="type">シリアライズを解除するオブジェクトのタイプ</param>
      <param name="elementType">配列要素のタイプ（オブジェクトが配列の場合）</param>
      <returns>シリアライズを解除するオブジェクト</returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.Deserialize(System.String,System.Type)">
      <summary>XML ドキュメント文字列のシリアライズを解除します。</summary>
      <param name="XMLString">XML 文字列。</param>
      <param name="type">オブジェクトの型。</param>
      <returns>文字列からのオブジェクト。</returns>
    </member>
    <member name="M:C1.Win.C1List.Util.Xml.Serialization.Serializer.DeserializeText(System.Xml.XmlTextReader,System.Type)">
      <summary>要素または属性のテキストを該当するタイプのオブジェクトにシリアライズ解除します。</summary>
      <param name="reader">シリアライズされる XML ドキュメントインスタンスを含む XmlReader</param>
      <param name="type">シリアライズを解除するオブジェクトのタイプ</param>
      <returns>シリアライズを解除するオブジェクト</returns>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Serializer.OnLongOpInProgressProvider">
      <summary>IOnLongOpInProgressProvider インタフェースを実装するオブジェクトを設定または返します （シリアライズ時にユーザーにビジュアルにフィードバックするために使用）。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Serializer.SerializeDefaultValues">
      <summary>すべての値を保存するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Serializer.Formatting">
      <summary>XML ライタが使用する書式を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Serializer.Indentation">
      <summary>XML ライタが使用するインデントを設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.Xml.Serialization.Serializer.NonPublic">
      <summary>非パブリックプロパティのシリアライズを設定または返します。True の場合、非パブリックプロパティが 含まれていますが、デフォルトでは表示されません。パブリックプロパティはデフォルトで常に表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.MatchEntryEnum">
      <summary>ユーザーの入力に基づいて C1List コントロールが検索を実行する方法を決定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchEntryEnum.None">
      <summary>デフォルト。コントロールはインクリメンタルサーチを実行しません。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchEntryEnum.Standard">
      <summary>検索引数が 1 文字に制限され、コントロールは、 入力された文字に一致するリスト内のエントリの最初の文字を検索します。 同じ字を繰り返し入力すると、その文字で始まるリスト内の すべてのエントリが順に検索されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchEntryEnum.Extended">
      <summary>コントロールは、入力されたすべての文字に一致するエントリを検索します。 文字が入力されるとインクリメンタルサーチが実行されます。 ユーザーが［BackSpace］を押すか、数秒間キー入力しないでいると、検索引数がクリアされます。</summary>
    </member>
    <member name="T:C1.Win.C1List.MatchColEnum">
      <summary>検索を実行する場所を決定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchColEnum.DisplayMember">
      <summary>DisplayMember の列を検索します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchColEnum.CurrentMousePos">
      <summary>マウスカーソルの位置にある列を検索します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchColEnum.CurrentSelectedCol">
      <summary>現在選択されている列を検索します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchColEnum.LeftVisibleCol">
      <summary>表示されている左端の列を検索します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchColEnum.RightVisibleCol">
      <summary>表示されている右端の列を検索します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchColEnum.AllCols">
      <summary>表示されているすべての列を検索します。</summary>
    </member>
    <member name="T:C1.Win.C1List.MatchCompareEnum">
      <summary>列を検索する際の比較方法です。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.LessThan">
      <summary>指定された値より小さい文字列、数字、日付の検索に使用します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.LessThanOrEqual">
      <summary>指定された値以下の文字列、数字、日付の検索に使用します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.Equal">
      <summary>指定された値と等しい文字列、数字、日付の検索に使用します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.GreaterThanOrEqual">
      <summary>指定された値以上の文字列、数字、日付の検索に使用します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.GreaterThan">
      <summary>指定された値より大きい文字列、数字、日付の検索に使用します。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.PartiallyEqual">
      <summary>PartiallyEqual はデフォルトのモードで、インクリメンタルサーチと同じです。</summary>
    </member>
    <member name="F:C1.Win.C1List.MatchCompareEnum.IncludeEqual">
      <summary>別の文字列内の文字列のマッチングに使用されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.DataModeEnum">
      <summary>Mormal モードまたは AddItem モードを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DataModeEnum.Normal">
      <summary>コントロールには、連結された DataSource にあるデータが表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.DataModeEnum.AddItem">
      <summary>コントロールのリスト部分には、AddItem メソッドを使用してデータが挿入されます。 最初に追加される項目は 0 で始まります。AddItem モードの場合、 DataSource プロパティと DataMember プロパティは無視されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.SortDirEnum">
      <summary>列ヘッダーのソート方向を示すために使用するグリフを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.SortDirEnum.None">
      <summary>列はソートされていません。</summary>
    </member>
    <member name="F:C1.Win.C1List.SortDirEnum.ASC">
      <summary>列は昇順にソートされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.SortDirEnum.DESC">
      <summary>列は降順にソートされます。</summary>
    </member>
    <member name="T:C1.Win.C1List.SelectionModeEnum">
      <summary>行と列を選択する場合の UI 動作を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.SelectionModeEnum.None">
      <summary>ユーザーは行を選択できません。</summary>
    </member>
    <member name="F:C1.Win.C1List.SelectionModeEnum.One">
      <summary>リスト内で 1 つの項目だけを選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1List.SelectionModeEnum.MultiSimple">
      <summary>ユーザーが 1 つの行をクリックした場合は、その行が選択され、SelectedIndex プロパティはその行のブックマークを返します。 複数の行が選択された場合、SelectedIndex プロパティは最後に選択された行の ブックマークを返し、SelectedIndices コレクションには、選択された すべての行のブックマークが含められます。ユーザーは 1 つの行を選択解除することもできます。</summary>
    </member>
    <member name="F:C1.Win.C1List.SelectionModeEnum.MultiExtended">
      <summary>［Shift］キーを押しながらマウスをクリックするか、［Shift］キーを押しながら矢印キー （［↑］、［↓］、［←］、［→］）を押すと、 直前の選択項目から現在の項目まで選択範囲が広がります。［Ctrl］キーを押しながら マウスをクリックすることで、リストの 1 つの項目を選択または選択解除できます。選択する行は隣り合っている 必要がないため、必要に応じて垂直スクロールバーを操作して、 他の行を表示範囲に入れることもできます。</summary>
    </member>
    <member name="F:C1.Win.C1List.SelectionModeEnum.CheckBox">
      <summary>チェックボックスをクリックして、行を選択または選択解除できます。</summary>
    </member>
    <member name="T:C1.Win.C1List.FlatModeEnum">
      <summary>3D 要素をレンダリングする方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.FlatModeEnum.Standard">
      <summary>グリッドの列ヘッダーとレコードセレクタは、くぼんだ 3D でレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.FlatModeEnum.Flat">
      <summary>3D 要素はフラットに表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.FlatModeEnum.Popup">
      <summary>3D 要素はフラットですが、マウスポインタを列ヘッダーやレコードセレクタ上にドラッグすると、3D で強調表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.FlatModeEnum.System">
      <summary>XP テーマが使用できる場合は、3D 要素に使用します。</summary>
    </member>
    <member name="T:C1.Win.C1List.SizeModeEnum">
      <summary>スプリットのサイズ変更モードを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.SizeModeEnum.Scalable">
      <summary>
        <see cref="P:C1.Win.C1List.Split.SplitSize" />は、他のスケーラブルなスプリットとの相対的なスプリットのサイズを示します。
      </summary>
    </member>
    <member name="F:C1.Win.C1List.SizeModeEnum.Exact">
      <summary>
        <see cref="P:C1.Win.C1List.Split.SplitSize" />はスプリットのサイズをピクセルで示します。
      </summary>
    </member>
    <member name="F:C1.Win.C1List.SizeModeEnum.NumberOfColumns">
      <summary>
        <see cref="P:C1.Win.C1List.Split.SplitSize" />は、スプリットに表示される列の数を示します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.AlignVertEnum">
      <summary>セル内のテキストまたは画像の垂直方向の配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignVertEnum.Top">
      <summary>テキストはセルの上にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignVertEnum.Center">
      <summary>テキストはセルの中央にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignVertEnum.Bottom">
      <summary>テキストはセルの下にレンダリングされます。</summary>
    </member>
    <member name="T:C1.Win.C1List.AlignHorzEnum">
      <summary>セル内のテキストまたは画像の水平方向の配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignHorzEnum.General">
      <summary>テキストは Near、数値は Far に配置されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignHorzEnum.Near">
      <summary>テキストは左に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignHorzEnum.Center">
      <summary>テキストは中央に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignHorzEnum.Far">
      <summary>テキストは右に揃えられます。</summary>
    </member>
    <member name="F:C1.Win.C1List.AlignHorzEnum.Justify">
      <summary>テキストは、セルの境界線に揃えられます。</summary>
    </member>
    <member name="T:C1.Win.C1List.ScrollBarStyleEnum">
      <summary>ScrollBars の表示方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.ScrollBarStyleEnum.None">
      <summary>ScrollBars は表示されません。</summary>
    </member>
    <member name="F:C1.Win.C1List.ScrollBarStyleEnum.Always">
      <summary>ScrollBars は常に表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ScrollBarStyleEnum.Automatic">
      <summary>オブジェクトの内容が境界線内に入りきらない場合にのみ、スクロールバーが表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.LineStyleEnum">
      <summary>行と列の分割線の行スタイルを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.LineStyleEnum.None">
      <summary>線なし。</summary>
    </member>
    <member name="F:C1.Win.C1List.LineStyleEnum.Single">
      <summary>実線。</summary>
    </member>
    <member name="F:C1.Win.C1List.LineStyleEnum.Double">
      <summary>二重線。</summary>
    </member>
    <member name="F:C1.Win.C1List.LineStyleEnum.Raised">
      <summary>浮き出た 3D の線。</summary>
    </member>
    <member name="F:C1.Win.C1List.LineStyleEnum.Inset">
      <summary>内部がくぼんだ 3D の線。</summary>
    </member>
    <member name="T:C1.Win.C1List.DataViewEnum">
      <summary>グリッドのデータの表示方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.DataViewEnum.Normal">
      <summary>グリッドにはフラットファイルだけが表示され、階層ビューはサポートされません。データソースが階層化データセットの場合、グリッドにはマスターテーブルのデータだけが表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.DataViewEnum.MultipleLines">
      <summary>グリッドには、複数ラインを使用して現在のグリッド領域にすべてのフィールドが表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.CellTipEnum">
      <summary>カーソルがグリッドに置かれたままになっている場合のポップアップウィンドウの動作を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellTipEnum.NoCellTips">
      <summary>セルチップは表示されません。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellTipEnum.Anchored">
      <summary>セルチップはセルの境界の四角形に表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellTipEnum.Floating">
      <summary>セルチップはマウスカーソルの位置に表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.ExposeCellModeEnum">
      <summary>グリッドの右端の列がフォーカスされたときに、その列を表示する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.ExposeCellModeEnum.ScrollOnSelect">
      <summary>グリッドが左にスクロールされ、右端の列全体が表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ExposeCellModeEnum.ScrollOnEdit">
      <summary>右端の列が最初にクリックされてもグリッドは移動しません。ただし、そのセルを編集しようとすると、グリッドが左にスクロールして右端の列全体が表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ExposeCellModeEnum.ScrollNever">
      <summary>グリッドの右端の列が常にクリップされたままになります。</summary>
    </member>
    <member name="T:C1.Win.C1List.ForeGroundPicturePositionEnum">
      <summary>前景画像のセル内の位置を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.Near">
      <summary>画像はセルの近い側にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.Far">
      <summary>画像はセルの遠い側にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.LeftOfText">
      <summary>画像はセルのテキストの左にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.RightOfText">
      <summary>画像はセルのテキストの右にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.TopOfText">
      <summary>画像はセルのテキストの上にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.BottomOfText">
      <summary>画像はセルのテキストの下にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.PictureOnly">
      <summary>テキストは表示されません。</summary>
    </member>
    <member name="F:C1.Win.C1List.ForeGroundPicturePositionEnum.TextOnly">
      <summary>画像は表示されません。</summary>
    </member>
    <member name="T:C1.Win.C1List.BackgroundPictureDrawModeEnum">
      <summary>背景画像のレンダリング方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.BackgroundPictureDrawModeEnum.Center">
      <summary>画像はセルの中央にレンダリングされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.BackgroundPictureDrawModeEnum.Tile">
      <summary>画像はセル内に並べられます。</summary>
    </member>
    <member name="F:C1.Win.C1List.BackgroundPictureDrawModeEnum.Stretch">
      <summary>画像はセルに合わせて拡大されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.RowSizingEnum">
      <summary>行サイズを変更する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.RowSizingEnum.None">
      <summary>行サイズは変更できません。</summary>
    </member>
    <member name="F:C1.Win.C1List.RowSizingEnum.AllRows">
      <summary>すべての行のサイズが同じ高さと幅になります。</summary>
    </member>
    <member name="F:C1.Win.C1List.RowSizingEnum.IndividualRows">
      <summary>行のサイズは個別に変更できます。</summary>
    </member>
    <member name="T:C1.Win.C1List.RowSelectorEnum">
      <summary>プレビュー/印刷する行を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.RowSelectorEnum.AllRows">
      <summary>すべての行をプレビュー/印刷します。</summary>
    </member>
    <member name="F:C1.Win.C1List.RowSelectorEnum.SelectedRows">
      <summary>選択した行だけがプレビュー/印刷されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.RowSelectorEnum.CurrentRow">
      <summary>現在の行だけがプレビュー/印刷されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.PointAtEnum">
      <summary>座標上の UI 要素のタイプを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.NotInList">
      <summary>座標がリスト内にありません。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtCaption">
      <summary>座標がキャプション領域にあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtSplitHeader">
      <summary>座標がスプリットのヘッダーにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtSplitSizeBox">
      <summary>座標がスプリットのサイズ変更ボックスにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtRowSelect">
      <summary>座標が行セレクタにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtRowSize">
      <summary>座標が行のサイズ変更ボックスにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtColumnHeader">
      <summary>座標が列ヘッダーにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtColumnFooter">
      <summary>座標が列フッターにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtColumnSize">
      <summary>座標が列のサイズ変更ボックスにあります。</summary>
    </member>
    <member name="F:C1.Win.C1List.PointAtEnum.AtDataArea">
      <summary>座標がデータ領域にあります。</summary>
    </member>
    <member name="T:C1.Win.C1List.PresentationEnum">
      <summary>ValueItem をレンダリングする方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.PresentationEnum.Normal">
      <summary>値はテキストまたはグラフィックとして表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PresentationEnum.RadioButton">
      <summary>値はラジオボタンのグループとして表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.PresentationEnum.CheckBox">
      <summary>値はチェックボックスとして表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1List.TabActionEnum">
      <summary>［Tab］キーが押下されたときに、フォーカスを処理する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.TabActionEnum.ControlNavigation">
      <summary>［Tab］キーはフォーム上の次または直前のコントロールに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1List.TabActionEnum.ColumnNavigation">
      <summary>［Tab］キーは現在のセルを次または直前の列に移動します。ただし、この操作によって現在の行が変更される場合、フォーム上の次または直前のコントロールがフォーカスされます。</summary>
    </member>
    <member name="F:C1.Win.C1List.TabActionEnum.GridNavigation">
      <summary>［Tab］キーは現在のセルを次または直前の列に移動します。</summary>
    </member>
    <member name="T:C1.Win.C1List.BorderTypeEnum">
      <summary>
        <see cref="T:C1.Win.C1List.Style" />の境界線を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.None">
      <summary>境界線なし。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.Flat">
      <summary>境界線の外観はフラットになります。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.Raised">
      <summary>境界線の外観は浮き出た 3D になります。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.Inset">
      <summary>境界線の外観は内部がくぼんだ 3D になります。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.Groove">
      <summary>境界線の内側の線。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.Fillet">
      <summary>フィレットタイプの境界線。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.RaisedBevel">
      <summary>境界線は、斜影付きの浮き出た 3D です。</summary>
    </member>
    <member name="F:C1.Win.C1List.BorderTypeEnum.InsetBevel">
      <summary>境界線は、斜影付きの内部がくぼんだ 3D です。</summary>
    </member>
    <member name="T:C1.Win.C1List.CellStyleFlag">
      <summary>
        セルの特性を表します。
        <para>この列挙型には FlagsAttribute 属性があります。この属性を使用して、そのメンバ値をビット単位で組み合わせることができます。</para></summary>
    </member>
    <member name="F:C1.Win.C1List.CellStyleFlag.NormalCell">
      <summary>セルはどの条件も満たしません。グループ化された行の場合、このセルスタイルだけを適用できます。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellStyleFlag.CurrentCell">
      <summary>セルとは現在フォーカスを持つセルです。この状態にあるセルは、一度に 1 つだけです。MarqueeStyle プロパティが Floating Editor に設定されている場合、この条件は無視されます。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellStyleFlag.MarqueeRow">
      <summary>セルは、強調表示された行マーキーの一部です。MarqueeStyle プロパティが現在の行全体を強調表示することを示している場合、現在の行に表示されているすべてのセルには、この条件セットが追加されています。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellStyleFlag.SelectedRow">
      <summary>セルは、ユーザーまたはコードによって選択された行の一部です。SelectedRowCollection には、選択された各行のインデックスが含まれます。</summary>
    </member>
    <member name="F:C1.Win.C1List.CellStyleFlag.AllCells">
      <summary>すべてのセル。</summary>
    </member>
    <member name="T:C1.Win.C1List.ScrollBarEnum">
      <summary>スクロールバーのタイプを識別します。</summary>
    </member>
    <member name="F:C1.Win.C1List.ScrollBarEnum.Horizontal">
      <summary>水平スクロールバーです。</summary>
    </member>
    <member name="F:C1.Win.C1List.ScrollBarEnum.Vertical">
      <summary>垂直スクロールバーです。</summary>
    </member>
    <member name="T:C1.Win.C1List.BeforeColUpdateEventHandler">
      <summary>列が編集モードに入る前に発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.BeforeColUpdateEventArgs">
      <summary>BeforeColEdit イベントのデータを提供します。</summary>
    </member>
    <member name="P:C1.Win.C1List.BeforeColUpdateEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.BeforeColUpdateEventArgs.OldValue">
      <summary>元のセルデータの値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.BeforeColUpdateEventArgs.Cancel">
      <summary>ユーザーがフォーカスを別のセルに移動できないようにする値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.BeforeColUpdateEventArgs.Column">
      <summary>編集列の C1DisplayColumn を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ColResizeEventHandler">
      <summary>列がサイズ変更された後に発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ColResizeEventArgs">
      <summary>ColReisize イベントのデータを提供します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ColResizeEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ColResizeEventArgs.Cancel">
      <summary>サイズの設定を無視することを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ColEventHandler">
      <summary>列を操作すると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ColEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.ColHeadClick" />および
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.ColFootClick" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ColEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける位置を示します。</summary>
    </member>
    <member name="T:C1.Win.C1List.OwnerDrawCellEventHandler">
      <summary>セルがイベントコードでレンダリングされると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.OwnerDrawCellEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.OwnerDrawCell" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.CellRect">
      <summary>レンダリングが必要なセルの境界四角形。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Row">
      <summary>レンダリングされるセルの行のインデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Split">
      <summary>レンダリングされるセルのスプリットのインデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Col">
      <summary>DisplayColumns コレクションの列のインデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Graphics">
      <summary>レンダリングする GDI+ グラフィックオブジェクト。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Text">
      <summary>セルのテキストです。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Style">
      <summary>セルのレンダリングに使用する Style です。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Handled">
      <summary>イベントコードでセルをレンダリングするかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.Column">
      <summary>レンダリングされる C1DisplayColumn です。</summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawCellEventArgs.DrawCellFlags">
      <summary>カスタムレンダラーが背景、境界線、コンテンツのどれを処理するかを示します。</summary>
    </member>
    <member name="T:C1.Win.C1List.RowColChangeEventHandler">
      <summary>現在の行または列を変更すると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.RowColChangeEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.RowColChange" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.RowColChangeEventArgs.LastRow">
      <summary>前の行インデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.RowColChangeEventArgs.LastCol">
      <summary>前の列インデックス。</summary>
    </member>
    <member name="T:C1.Win.C1List.UnboundColumnFetchEventHandler">
      <summary>非連結列をレンダリングする必要がある場合に発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.UnboundColumnFetchEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.UnboundColumnFetch" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.UnboundColumnFetchEventArgs.Row">
      <summary>行のインデックスです。</summary>
    </member>
    <member name="P:C1.Win.C1List.UnboundColumnFetchEventArgs.Col">
      <summary>列コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.UnboundColumnFetchEventArgs.Value">
      <summary>列の値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.BeforeColEditEventHandler">
      <summary>列が編集モードに入る前に発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.BeforeColEditEventArgs">
      <summary>BeforeColEdit イベントのデータを提供します。</summary>
    </member>
    <member name="P:C1.Win.C1List.BeforeColEditEventArgs.Cancel">
      <summary>編集を許可しないことを示す値を取得または設定します。</summary>
      <remarks>イベントプロシージャが Cancel 引数を True に設定すると、セルは編集モードに入りません。そうでない場合、ColEdit イベントが直ちに発生し、KeyChar プロパティが 0 以外の場合、その Change イベントが続いて発生します。</remarks>
    </member>
    <member name="P:C1.Win.C1List.BeforeColEditEventArgs.KeyChar">
      <summary>編集操作を開始した文字を示します。</summary>
      <remarks>BeforeColEdit イベントは、文字を入力することによってユーザーが編集モードに入る直前に発生します。フローティングエディタマーキーを使用しない場合、このイベントはユーザーが現在のセルをクリックするか、別のセルをダブルクリックしても発生します。</remarks>
    </member>
    <member name="P:C1.Win.C1List.BeforeColEditEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける位置を示します。</summary>
    </member>
    <member name="T:C1.Win.C1List.SplitEventHandler">
      <summary>スプリット固有の操作を実行すると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.SplitEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.TopIndexChange" />および
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.LeftColChange" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.SplitEventArgs.SplitIndex">
      <summary>Splits コレクション内のスプリットの位置を示します。</summary>
    </member>
    <member name="T:C1.Win.C1List.FormatTextEventHandler">
      <summary>セルがカスタム書式を必要とするときに発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.FormatTextEventArgs">
      <summary>FromatText イベントのデータを提供します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FormatTextEventArgs.ColIndex">
      <summary>列コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FormatTextEventArgs.Row">
      <summary>書式を設定するセルの行インデックスです。</summary>
    </member>
    <member name="P:C1.Win.C1List.FormatTextEventArgs.Value">
      <summary>書式設定する値です。</summary>
    </member>
    <member name="T:C1.Win.C1List.FetchCellStyleEventHandler">
      <summary>
        セルのレンダリングに使用する
        <see cref="T:C1.Win.C1List.Style" />をカスタマイズする必要がある場合に発生します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.FetchCellStyleEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchCellStyle" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellStyleEventArgs.Condition">
      <summary>
        レンダリングされるセルの特性を表す 1 つ以上の
        <see cref="T:C1.Win.C1List.CellStyleFlag" />定数の集合。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellStyleEventArgs.Split">
      <summary>Splits コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellStyleEventArgs.Row">
      <summary>レンダリングされるセルの行のインデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellStyleEventArgs.Col">
      <summary>DisplayColumns コレクションの列のインデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellStyleEventArgs.CellStyle">
      <summary>セルのレンダリングに使用する Style です。</summary>
    </member>
    <member name="T:C1.Win.C1List.FetchRowStyleEventHandler">
      <summary>
        行のレンダリングに使用する
        <see cref="T:C1.Win.C1List.Style" />をカスタマイズする必要がある場合に発生します。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.FetchRowStyleEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchRowStyle" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.FetchRowStyleEventArgs.Split">
      <summary>Splits コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchRowStyleEventArgs.Row">
      <summary>レンダリングされるセルの行のインデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchRowStyleEventArgs.CellStyle">
      <summary>行のレンダリングに使用する Style です。</summary>
    </member>
    <member name="T:C1.Win.C1List.ColMoveEventHandler">
      <summary>列の位置を変更すると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ColMoveEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.ColMove" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ColMoveEventArgs.Position">
      <summary>移動する列の移動先のインデックスを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ColMoveEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける開始位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.ColMoveEventArgs.Cancel">
      <summary>列移動アクションをキャンセルするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.FetchCellTipsEventHandler">
      <summary>セルチップを表示する必要があるときに発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.FetchCellTipsEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchCellTips" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellTipsEventArgs.SplitIndex">
      <summary>Splits コレクション内のスプリットの位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellTipsEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellTipsEventArgs.Row">
      <summary>セルチップの行インデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellTipsEventArgs.FullyDisplayed">
      <summary>セルの内容をすべて表示するかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellTipsEventArgs.TipStyle">
      <summary>セルチップのレンダリングに使用する Style です。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchCellTipsEventArgs.CellTip">
      <summary>セルチップに表示されるテキスト。</summary>
    </member>
    <member name="T:C1.Win.C1List.FetchScrollTipsEventHandler">
      <summary>スクロールチップを表示する必要があるときに発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.FetchScrollTipsEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.FetchScrollTips" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.FetchScrollTipsEventArgs.SplitIndex">
      <summary>Splits コレクション内のスプリットの位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchScrollTipsEventArgs.ColIndex">
      <summary>DisplayColumns コレクションにおける位置を示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchScrollTipsEventArgs.Row">
      <summary>スクロールチップの一番上の行インデックス。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchScrollTipsEventArgs.ScrollBar">
      <summary>移動されたスクロールバーを示します。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchScrollTipsEventArgs.ScrollTip">
      <summary>スクロールチップに表示されるテキスト。</summary>
    </member>
    <member name="P:C1.Win.C1List.FetchScrollTipsEventArgs.TipStyle">
      <summary>スクロールチップのレンダリングに使用する Style です。</summary>
    </member>
    <member name="T:C1.Win.C1List.FilterEventHandler">
      <summary>グリッドがソートされるときに発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.FilterEventArgs">
      <summary>
        <see cref="M:C1.Win.C1List.ListBase.C1ListBase.Sort(System.Int32,C1.Win.C1List.SortDirEnum)" />と
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.AfterSort" />のデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.FilterEventArgs.Condition">
      <summary>ソート条件。</summary>
    </member>
    <member name="T:C1.Win.C1List.ErrorEventHandler">
      <summary>UI から例外が生成されると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.ErrorEventArgs">
      <summary>
        <see cref="E:C1.Win.C1List.ListBase.C1ListBase.Error" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.ErrorEventArgs.Exception">
      <summary>イベントを発生させた例外。</summary>
    </member>
    <member name="P:C1.Win.C1List.ErrorEventArgs.Handled">
      <summary>例外が処理された場合は True。</summary>
    </member>
    <member name="T:C1.Win.C1List.OwnerDrawPageEventHandler">
      <summary>カスタムページヘッダーとフッターをレンダリングする必要があるとき発生します。</summary>
    </member>
    <member name="T:C1.Win.C1List.OwnerDrawPageEventArgs">
      <summary>
        <see cref="!:C1List.OwnerDrawPageHeader" />および
        <see cref="!:C1List.OwnerDrawPageHeader" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.OwnerDrawPageEventArgs.OwnerDrawPrint">
      <summary>
        カスタムヘッダーまたはフッターのレンダリングに使用する
        <see cref="T:C1.Win.C1List.C1OwnerDrawPrint" />オブジェクトです。
      </summary>
    </member>
    <member name="T:C1.Win.C1List.Styles.DrawCellFlags">
      <summary>グリッドによって描画されるセルの要素を指定します。</summary>
      <remarks>
        <para>この列挙型は、オーナー描画セルをレンダリングするときに使用されます。</para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1List.Styles.DrawCellFlags.None">
      <summary>何も描画しません。</summary>
    </member>
    <member name="F:C1.Win.C1List.Styles.DrawCellFlags.Background">
      <summary>セルの背景を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1List.Styles.DrawCellFlags.Border">
      <summary>セル境界線を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1List.Styles.DrawCellFlags.Content">
      <summary>セルの内容（テキスト、画像、チェックボックスなど）を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1List.Styles.DrawCellFlags.All">
      <summary>すべてのセル要素（背景、境界線、内容）を描画します。</summary>
    </member>
    <member name="T:C1.Win.C1List.CellBorders">
      <summary>
        <see cref="T:C1.Win.C1List.Style" />の境界線を表します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.CellBorders.BorderType">
      <summary>境界線の種類を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.CellBorders.Left">
      <summary>左の境界線の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.CellBorders.Right">
      <summary>右の境界線の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.CellBorders.Top">
      <summary>上の境界線の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.CellBorders.Bottom">
      <summary>下の境界線の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.CellBorders.Color">
      <summary>境界線の色を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.Style">
      <summary>グリッド要素のレンダリングに使用するオブジェクトを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.#ctor">
      <summary>このオブジェクトの新しいインスタンスを作成します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.Dispose">
      <summary>クラスが破棄されるときに呼び出されます。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.Dispose(System.Boolean)">
      <summary>クラスが破棄されるときに呼び出されます。</summary>
      <param name="disposing">True でクリーンアップします。</param>
    </member>
    <member name="M:C1.Win.C1List.Style.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetBackColor">
      <summary>BackColor をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetForeColor">
      <summary>ForeColor をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetFont">
      <summary>Font をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetHorizontalAlignment">
      <summary>HorizontalAlignment をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetVerticalAlignment">
      <summary>VerticalAlignment をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetBackgroundPictureDrawMode">
      <summary>BackgroundPictureDrawMode をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetBackgroundImage">
      <summary>BackgroundImage をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetForeGroundPicturePosition">
      <summary>ForGroundImagePosition をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetForegroundImage">
      <summary>ForegroundImage をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetLocked">
      <summary>Locked をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetWrapText">
      <summary>WrapText をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.ResetTrimming">
      <summary>Trimming をデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1List.Style.Reset">
      <summary>専用の属性をすべてリセットします。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.Borders">
      <summary>
        このスタイルに関連する
        <see cref="T:C1.Win.C1List.CellBorders" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Style.BackColor">
      <summary>スタイルに関連する背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.BackColor2">
      <summary>スタイルに関連する背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.ForeColor">
      <summary>スタイルに関連する前景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.Font">
      <summary>スタイルに関連するフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.HorizontalAlignment">
      <summary>水平方向のテキスト配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.VerticalAlignment">
      <summary>垂直方向のテキスト配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.BackgroundPictureDrawMode">
      <summary>
        <see cref="P:C1.Win.C1List.Style.BackgroundImage" />のレンダリングメソッドを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Style.BackgroundImage">
      <summary>スタイルに関連する背景画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.ForeGroundPicturePosition">
      <summary>ForGroupImage をレンダリングする位置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.ForegroundImage">
      <summary>スタイルに関連する前景画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.WrapText">
      <summary>テキストがレイアウトの形状に収まらない場合にテキストを折り返すかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.Name">
      <summary>スタイルの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.Trimming">
      <summary>レイアウトの形状に完全に収まらない文字列の削除文字を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Style.Padding">
      <summary>セルの内容とその端の間のスペーシングを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1List.Util.HBar">
      <summary>水平スクロールバーを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.HBar.#ctor(C1.Win.C1List.ListBase.View)">
      <summary>HBar クラスの新しいインスタンスを作成します。</summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.HBar.Dispose(System.Boolean)">
      <summary>オブジェクトによって使用されるアンマネージリソースを解放し、オプションでマネージリソースも解放します。</summary>
      <param name="disposing">マネージリソースとアンマネージリソースの両方を解放する場合は、true。アンマネージリソースだけを解放する場合は、false。</param>
    </member>
    <member name="M:C1.Win.C1List.Util.HBar.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns>現在のオブジェクトを表す文字列</returns>
    </member>
    <member name="P:C1.Win.C1List.Util.HBar.Height">
      <summary>水平スクロールバーの高さを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.HBar.Style">
      <summary>
        水平スクロールバーの
        <see cref="T:C1.Win.C1List.ScrollBarEnum" />値を指定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1List.Util.HBar.Visible">
      <summary>スクロールバーが表示されるかどうかを示す値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.Util.NumberFormatTypeEditor">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Util.NumberFormatTypeEditor.#ctor">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.Util.NumberFormatTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary></summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.Util.NumberFormatTypeEditor.OnListBoxClick(System.Object,System.EventArgs)">
      <summary></summary>
      <param name="sender"></param>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.NumberFormatTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary></summary>
      <param name="context"></param>
      <param name="provider"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.Util.VBar">
      <summary>垂直スクロールバーを表します。</summary>
    </member>
    <member name="M:C1.Win.C1List.Util.VBar.#ctor(C1.Win.C1List.ListBase.View)">
      <summary>VBar クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1List.Util.VBar.Dispose(System.Boolean)">
      <summary>オブジェクトによって使用されるアンマネージリソースを解放し、オプションでマネージリソースも解放します。</summary>
      <param name="disposing">マネージリソースとアンマネージリソースの両方を解放する場合は、true。アンマネージリソースだけを解放する場合は、false。</param>
    </member>
    <member name="M:C1.Win.C1List.Util.VBar.ToString">
      <summary>現在のオブジェクトを表す文字列を返します。</summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1List.Util.VBar.Width">
      <summary>垂直スクロールバーの幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.VBar.Style">
      <summary>スクロールバーの表示状態を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.Util.VBar.Visible">
      <summary>スクロールバーが表示されるかどうかを示す値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1List.VisualStyle">
      <summary>コントロールのレンダリング時に使用するビジュアルスタイルを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Custom">
      <summary>ビジュアルスタイルを使用しません。スタイルとプロパティだけを使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.System">
      <summary>現在のシステム設定に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Office2007Blue">
      <summary>Office 2007 の青の配色に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Office2007Silver">
      <summary>Office 2007 のシルバーの配色に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Office2007Black">
      <summary>Office 2007 の黒の配色に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Office2010Blue">
      <summary>Office 2010 の青の配色に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Office2010Silver">
      <summary>Office 2010 のシルバーの配色に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1List.VisualStyle.Office2010Black">
      <summary>Office 2010 の黒の配色に基づく外観を使用してコントロールをレンダリングします。</summary>
    </member>
    <member name="T:C1.Win.C1List.GridRenderer">
      <summary>グリッドレンダラの基本クラス。</summary>
    </member>
    <member name="M:C1.Win.C1List.GridRenderer.#ctor">
      <summary>
        <see cref="T:C1.Win.C1List.GridRenderer" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1List.GridRenderer.OnDrawCell(C1.Win.C1List.ListBase.Frame,C1.Win.C1List.OwnerDrawCellEventArgs,C1.Win.C1List.GridRenderer.CellType)">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.GridRenderer.GetBackgroundBrush(C1.Win.C1List.ListBase.Frame,C1.Win.C1List.GridRenderer.CellType,System.Drawing.Rectangle)">
      <summary>背景ブラシを取得します。</summary>
      <param name="grid">グリッド。</param>
      <param name="cellType">セルのタイプ。</param>
      <param name="r">四角形。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.GridRenderer.GetBorderPen(C1.Win.C1List.GridRenderer.CellType)">
      <summary>境界線ペンを取得します。</summary>
      <param name="cellType">セルのタイプ。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.GridRenderer.StyleHasCustomBackground(C1.Win.C1List.Style)">
      <summary>カスタム背景を持つスタイル。</summary>
      <param name="style">スタイル。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1List.GridRenderer.StyleHasCustomBorder(C1.Win.C1List.Style)">
      <summary>カスタム境界線を持つスタイル。</summary>
      <param name="style">スタイル。</param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1List.GridRenderer.CellType">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.Normal">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.Caption">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.TopLeft">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.BottomLeft">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.ColumnHeader">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.ColumnHeaderSelected">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.ColumnHeaderHot">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.ColumnFooter">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.ColumnFooterSelected">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.ColumnFooterHot">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.RecordSelector">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.RecordSelectorSelected">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.RecordSelectorHot">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.Highlight">
      <summary></summary>
    </member>
    <member name="F:C1.Win.C1List.GridRenderer.CellType.Cursor">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ComboBoxContainer.DefaultSize">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.Frame.CreateParams">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.C1TrueDBGridPrintOptionsFormDropDownEditor.BaseFormClassName">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.C1TrueDBGridPreviewFormDropDownEditor.BaseFormClassName">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ListBase.View.AllowAddNew">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.Level">
      <summary>階層化データソースでこの列のレベルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.Relation">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.C1DataColumn.RelationState">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.C1DisplayColumn.DCIdx">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItems.internalValues">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItem.ImgIdx">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1List.ValueItem.dispVal">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1List.ComboBoxContainer.OnRightToLeftChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1List.ListBase.C1ListBase.OnFontChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1List.ListBase.Frame.SelectionChanging">
      <summary>ユーザーが別の行または列範囲を選択するときに発生します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSelectionChanging(System.ComponentModel.CancelEventArgs)">
      <summary>選択が変更されるときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1List.ListBase.Frame.SelectionChanged">
      <summary>ユーザーが異なる範囲の行または列を選択したときに発生します。</summary>
    </member>
    <member name="M:C1.Win.C1List.ListBase.Frame.OnSelectionChanged(System.EventArgs)">
      <summary>選択が変更されたときに発生します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Add(System.Char[])">
      <summary></summary>
      <param name="chars"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Add(System.String)">
      <summary></summary>
      <param name="s"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Add(System.Char)">
      <summary></summary>
      <param name="c"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Add(C1.Util.CodeRange)">
      <summary></summary>
      <param name="cr"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Add(System.Char,System.Char)">
      <summary></summary>
      <param name="first"></param>
      <param name="last"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Add(System.Collections.Generic.IEnumerable{C1.Util.CodeRange})">
      <summary></summary>
      <param name="crs"></param>
    </member>
    <member name="M:C1.Util.CodeRanges.Clone">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Util.CodeRanges.AssignFrom(C1.Util.CodeRanges)">
      <summary></summary>
      <param name="source"></param>
    </member>
  </members>
</doc>