<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>C1.Win.C1Command.4</name>
  </assembly>
  <members>
    <member name="T:C1.Win.C1Command.UIStringsItemEventHandler">
      <summary>
        イベントに関連する
        <see cref="T:C1.Win.C1Command.UIStrings" />項目のハンドラを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Command.UIStringsItemEventArgs">
      <summary>
        イベントに関連する
        <see cref="T:C1.Win.C1Command.UIStrings" />項目のデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Command.UIStringsItemEventArgs.Key">
      <summary>追加または変更される項目のキーを取得します。</summary>
      <value>キー。</value>
    </member>
    <member name="P:C1.Win.C1Command.UIStringsItemEventArgs.Value">
      <summary>文字列値を取得します。</summary>
      <value>値。</value>
    </member>
    <member name="P:C1.Win.C1Command.UIStringsItemEventArgs.IsDefault">
      <summary>このインスタンスがデフォルトかどうかを示す値を取得します。</summary>
      <value>
        このインスタンスがデフォルトの場合は
        <c>true</c>、そうでない場合は
        <c>false</c>。
      </value>
    </member>
    <member name="P:C1.Win.C1Command.UIStringsItemEventArgs.Description">
      <summary>説明を取得します。</summary>
      <value>説明。</value>
    </member>
    <member name="T:C1.Win.C1Command.UIStrings">
      <summary>エンドユーザーが表示できる UI 文字列のコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.Add(System.Object,System.Int32,System.String,System.String)">
      <summary>コレクションに序数を指定して文字列を追加します。</summary>
      <param name="key">文字列のキー。</param>
      <param name="ordinal">文字列の序数。</param>
      <param name="value">文字列。</param>
      <param name="description">文字列の説明。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.Add(System.Object,System.String,System.String)">
      <summary>コレクションにアルファベット順で文字列を追加します。</summary>
      <param name="key">文字列のキー。</param>
      <param name="value">文字列。</param>
      <param name="description">文字列の説明。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.AddInOrder(System.Object,System.String,System.String)">
      <summary>順序を保持して、文字列をコレクションに追加します。</summary>
      <param name="key">文字列のキー。</param>
      <param name="value">文字列。</param>
      <param name="description">文字列の説明。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.Reset">
      <summary>コレクション内のすべての文字列をデフォルト値に設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.ShouldSerialize">
      <summary>現在のコレクション内の任意の文字列に非デフォルト値が含まれているかどうかを示します。</summary>
      <returns>
        任意の文字列に非デフォルト値が含まれている場合は
        <c>true</c>、 そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.IsDefault(System.Object)">
      <summary>コレクション内の文字列がデフォルト値を持つかどうかをテストします。</summary>
      <param name="key">テストする文字列のキー。</param>
      <returns>
        文字列にデフォルト値が含まれている場合は
        <c>true</c>、 そうでない場合は
        <c>false</c>。
      </returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.GetDescription(System.Object)">
      <summary>文字列の説明を返します。</summary>
      <param name="key">説明を取得する文字列のキー。</param>
      <returns>文字列の説明</returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.Reset(System.Object)">
      <summary>文字列をデフォルト値にリセットします。</summary>
      <param name="key">リセットする文字列のキー。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.GetKeyAt(System.Int32)">
      <summary>指定されたインデックスを持つ項目のキーを返します。</summary>
      <param name="index">項目のインデックス。</param>
      <returns>項目のキー。</returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.GetValueAt(System.Int32)">
      <summary>インデックスによって、文字列を取得します。</summary>
      <param name="index">文字列のインデックス。</param>
      <returns>文字列。</returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.SetValueAt(System.Int32,System.String)">
      <summary>指定したインデックスを持つ文字列の値を設定します。</summary>
      <param name="index">文字列のインデックス。</param>
      <param name="value">新しい文字列値。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.OnItemAdded(C1.Win.C1Command.UIStringsItemEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1Command.UIStrings.ItemAdded" />イベントを発生します。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.OnItemChanged(C1.Win.C1Command.UIStringsItemEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1Command.UIStrings.ItemChanged" />イベントを発生します。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.OnCollectionChanged(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1Command.UIStrings.CollectionChanged" />イベントを発生します。
      </summary>
      <param name="e">イベントのデータ。</param>
    </member>
    <member name="P:C1.Win.C1Command.UIStrings.Count">
      <summary>コレクションに含まれる要素の数を取得します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.UIStrings.ItemAdded">
      <summary>新しい項目がコレクションに追加されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.UIStrings.ItemChanged">
      <summary>コレクション内の項目が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.UIStrings.CollectionChanged">
      <summary>コレクションが変更されたときに発生します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.UIStrings.TypeConverter">
      <summary>
        <see cref="T:C1.Win.C1Command.UIStrings" />タイプのタイプ変換を提供します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>内部使用。</summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>内部使用。</summary>
      <param name="context"></param>
      <param name="value"></param>
      <param name="attrFilter"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.UIStrings.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>内部使用。</summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.BorderStyleEnum">
      <summary>この列挙型のメンバを使用して、Style プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.BorderStyleEnum.None">
      <summary>境界線なし。</summary>
    </member>
    <member name="F:C1.Win.C1Command.BorderStyleEnum.Flat">
      <summary>暗い色のフラットな境界線。</summary>
    </member>
    <member name="F:C1.Win.C1Command.BorderStyleEnum.Groove">
      <summary>溝付きの境界線。</summary>
    </member>
    <member name="F:C1.Win.C1Command.BorderStyleEnum.Ridge">
      <summary>浮き出し境界線。</summary>
    </member>
    <member name="F:C1.Win.C1Command.BorderStyleEnum.Inset">
      <summary>内部がくぼんだ境界線。</summary>
    </member>
    <member name="F:C1.Win.C1Command.BorderStyleEnum.Outset">
      <summary>内部が浮き出た境界線。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1Border">
      <summary>このクラスを使用して、C1ToolBar オブジェクトに境界線を追加できます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.#ctor">
      <summary>C1Border クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.#ctor(System.Windows.Forms.Control)">
      <summary>C1Border クラスの新しいインスタンスを初期化します。</summary>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.FrameIt(System.Boolean)">
      <summary>ツールバーのすべての周囲に境界線を設定するか、境界線を削除します。</summary>
      <param name="framed">True の場合は、すべての境界線を設定します。そうでない場合は、境界線を削除します。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.IsFrameOn">
      <summary>境界線をすべて表示する場合にチェックします。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.IsFrameOff">
      <summary>境界線を表示しない場合にチェックします。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.Draw(System.Drawing.Rectangle,System.Drawing.Graphics)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="r"></param>
      <param name="g"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.Style">
      <summary>境界線のスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.Width">
      <summary>境界線の幅をピクセル単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.LeftEdge">
      <summary>境界線に左端があるかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.TopEdge">
      <summary>境界線に上端があるかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.RightEdge">
      <summary>境界線に右端があるかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.BottomEdge">
      <summary>境界線に下端があるかどうかを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.LightColor">
      <summary>境界線の色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.DarkColor">
      <summary>境界線の色を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1Border.BorderTypeConverter">
      <summary>C1Border のオブジェクトと他の表現の間で変換を行うための型コンバータを提供します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.BorderTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートするかどうかを返します。</summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Border.BorderTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>所定の値オブジェクトを指定した型に変換します。</summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1Border.BorderTypeConverter.Text">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1Command">
      <summary>ボタン（アクション起動するだけの単純なボタン）、サブメニュー（メニューまたはツールバーをポイントする）、テキストボックス（テキスト入力）、リスト、コンボボックスなどに専用のコマンドの基本クラスです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1Command.Empty">
      <summary>空のコマンドです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.#ctor">
      <summary>C1Command クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.Dispose(System.Boolean)">
      <summary>C1Command によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.AddCommandLink(C1.Win.C1Command.C1CommandLink)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="cl"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.RemoveCommandLink(C1.Win.C1Command.C1CommandLink)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="cl"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.ShouldSerializeIcon">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.ResetIcon">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.Invoke(C1.Win.C1Command.ClickEventArgs)">
      <summary>コマンドを起動します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.PerformClick">
      <summary>C1Command のクリックイベントを生成します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.PerformSelect">
      <summary>C1Command の Select イベントを発生します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.StateQuery">
      <summary>CommandStateQuery イベントを発生し、変更されたプロパティを更新します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnClick(C1.Win.C1Command.ClickEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnSelect(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnEnabledChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnVisibleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnCategoryChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnToolTipChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnShowShortcutChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnShowTextAsToolTipChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnCheckedChanged(C1.Win.C1Command.CheckedChangedEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnPressedChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnCommandStateQuery(C1.Win.C1Command.CommandStateQueryEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnCommandLinkAdded(C1.Win.C1Command.CommandLinkEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnCommandLinkRemoved(C1.Win.C1Command.CommandLinkEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnDropDown(C1.Win.C1Command.DropDownEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.OnBarPopDown">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.LinkReceiveFocus(C1.Win.C1Command.C1CommandLink)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="cl"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.RefreshBars(System.Boolean)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="measure"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.InvalidateBars">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.CheckNonEmpty">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.AssignFrom(C1.Win.C1Command.C1Command)">
      <summary>このコマンドに別のコマンドプロパティをコピーします。</summary>
      <param name="cmd"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.SetBoolean(System.Boolean@,System.Boolean)">
      <summary>実際に変更が行われ、コントロールが初期化されていない（変更イベントを発生する必要がある）場合に、true を返します。</summary>
      <param name="oldValue"></param>
      <param name="newValue"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Owner">
      <summary>このコマンドを含む C1CommandHolder です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Text">
      <summary>コマンドのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Name">
      <summary>コマンドの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.ToolTipText">
      <summary>ツールチップのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Category">
      <summary>コマンドのカテゴリを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Visible">
      <summary>コマンドの表示状態を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Enabled">
      <summary>コマンドが有効にされているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Checked">
      <summary>コマンドがチェックされているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Pressed">
      <summary>コマンドが押されているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.DropDown">
      <summary>ツールバーにあるコマンドにドロップダウン矢印があるかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.CheckAutoToggle">
      <summary>true の場合は、このコマンドが呼び出されると、Checked プロパティの値が自動的に切り替わります。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Shortcut">
      <summary>コマンドに関連付けられたキーボードショートカットを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.ShortcutText">
      <summary>コマンドに関連付けられたショートカットテキストを取得または設定します。</summary>
      <remarks>
        <para>&gt;このプロパティを使用してショートカットをローカライズします。</para>
        <para>
          <see cref="P:C1.Win.C1Command.C1Command.Shortcut" />プロパティが空または
          <see cref="P:C1.Win.C1Command.C1Command.ShowShortcut" />False の場合、
          <see cref="P:C1.Win.C1Command.C1Command.ShortcutText" />は無効です。
        </para>
        <para>
          <see cref="P:C1.Win.C1Command.C1Command.ShortcutText" />プロパティが空の場合、ショートカットにはデフォルト値が使用されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.ShowShortcut">
      <summary>このコマンドのショートカットが表示されるかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.ShowTextAsToolTip">
      <summary>このコマンドのテキストをツールチップとして表示するかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Icon">
      <summary>コマンドのアイコンを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.ImageIndex">
      <summary>（C1CommandHolder.ImageList 内の）コマンド画像のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Image">
      <summary>コマンド画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.UserData">
      <summary>コマンドに関連付けることができる任意のテキストです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.IsParent">
      <summary>このコマンドが空でないサブメニューかどうかを判定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.Mnemonic">
      <summary>ニーモニック文字の値を返します。ニーモニック文字はアクセスキーとして使用される文字で、前にアンパサンドが付きます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.C1ContextMenu">
      <summary>このコマンドの関連付けられている C1ContextMenu コンポーネントを取得または設定します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.Click">
      <summary>ユーザーがコマンドを起動したときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.Select">
      <summary>ユーザーがコマンドを選択したときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.CheckedChanged">
      <summary>Checked プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.PressedChanged">
      <summary>Pressed プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.CommandStateQuery">
      <summary>コマンドの状態を検証する必要があるときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.CommandLinkAdded">
      <summary>このコマンドにコマンドリンクがリンクされたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.CommandLinkRemoved">
      <summary>このコマンドからコマンドリンクがリンク解除されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.TextChanged">
      <summary>コマンドの Text プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.ImageChanged">
      <summary>コマンドの Image、ImageIndex、または Icon プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.EnabledChanged">
      <summary>コマンドの Enabled プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.VisibleChanged">
      <summary>コマンドの Visible プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.CategoryChanged">
      <summary>コマンドの Category プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.ToolTipChanged">
      <summary>コマンドの ToolTip プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.ShowShortcutChanged">
      <summary>コマンドの ShowShortcut プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.ShowTextAsToolTipChanged">
      <summary>コマンドの ShowTextAsToolTip プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1Command.DropDownClicked">
      <summary>ツールバーのボタンのドロップダウン矢印がクリックされたときに発生するイベントです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1Command.HasInputFocus">
      <summary>コマンドがフォーカスを持ち、そのフォーカスを「確実に」保持している場合 （たとえば C1CommandControl ならば、このコントロール内をユーザーがクリックした場合）は、true を返します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1Command.TypeConverter">
      <summary>C1Command と他の表現の間で変換を行うための型コンバータを提供します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.TypeConverter.#ctor(System.Type)">
      <summary>TypeConverter クラスの新しいインスタンスを初期化します。</summary>
      <param name="type"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートするかどうかを返します。</summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Command.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>所定の値オブジェクトを指定した型に変換します。</summary>
      <param name="context">書式コンテキストを提供する ITypeDescriptorContext。</param>
      <param name="cinfo">CultureInfo オブジェクト。</param>
      <param name="o">変換するオブジェクト。</param>
      <param name="type">値パラメータの変換先の型。</param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.C1Commands">
      <summary>C1Command オブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.#ctor(C1.Win.C1Command.C1CommandHolder)">
      <summary>C1Commands クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.IndexOfKey(System.String)">
      <summary>指定されたキーを持つ C1Command が最初に見つかったインデックスを返します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.Clear">
      <summary>すべての要素を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.Add(System.Object)">
      <summary>末尾にオブジェクトを追加します。</summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.AddRange(System.Collections.ICollection)">
      <summary>末尾に ICollection の要素を追加します。</summary>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.Insert(System.Int32,System.Object)">
      <summary>指定されたインデックスにある C1Commands に要素を挿入します。</summary>
      <param name="index"></param>
      <param name="o"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>コレクションの要素を C1Commands の指定されたインデックスに挿入します。</summary>
      <param name="index"></param>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある要素を削除します。</summary>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.RemoveRange(System.Int32,System.Int32)">
      <summary>要素の範囲を削除します。</summary>
      <param name="index"></param>
      <param name="count"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1Commands.SetRange(System.Int32,System.Collections.ICollection)">
      <summary>コレクションの要素を要素の範囲にコピーします。</summary>
      <param name="index"></param>
      <param name="c"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1Commands.Item(System.Int32)">
      <summary>指定されたインデックスにある要素を取得または設定します。</summary>
      <param name="idx"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1Commands.Item(System.String)">
      <summary>指定されたキーを持つコマンドをコレクションから取得します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandControl">
      <summary>ツールバーには任意のコントロールを配置できます。この機能は、C1Command から派生した C1CommandControl クラスによって提供されます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandControl.#ctor">
      <summary>C1CommandControl クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandControl.Invoke(C1.Win.C1Command.ClickEventArgs)">
      <summary>コマンドを起動します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandControl.OnBarPopDown">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandControl.LinkReceiveFocus(C1.Win.C1Command.C1CommandLink)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="cl"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandControl.AddCommandLink(C1.Win.C1Command.C1CommandLink)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="cl"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandControl.RemoveCommandLink(C1.Win.C1Command.C1CommandLink)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="cl"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandControl.ControlChanged">
      <summary>コマンドの Control プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandControl.CommandActiveChanged">
      <summary>コマンドの CommandActive プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandControl.Control">
      <summary>コマンドにアタッチされている任意のコントロールを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandControl.Enabled">
      <summary>コマンドが有効にされているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandControl.CommandActive">
      <summary>コマンドリンクをクリックできるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandControl.AcceptsReturn">
      <summary>埋め込まれたコントロールが［Enter］キーを受け取るかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandControl.HotFrame">
      <summary>リンクの周囲のホットフレームが描画される方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandControl.HasInputFocus">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandDock">
      <summary>C1CommandDock コントロールは、C1Command ツールバー（クラス C1ToolBar）とタブコントロール（クラス C1DockingTab）にドッキング/フローティング機能を提供します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.#ctor">
      <summary>C1CommandDock クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.Dispose(System.Boolean)">
      <summary>C1CommandDock によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.DockOrFloatChild(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>指定されたコントロールをドッキング表示または浮動表示します。</summary>
      <param name="child">子コントロール。</param>
      <param name="screenPt">子コントロールの移動先の X 座標と Y 座標。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="pe"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.InitLayout">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnDockChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnFontChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnStyleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnEnabledChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnResize(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDock.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.Dock">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AutoDockLeft">
      <summary>左のドッキング領域を自動的に作成するかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AutoDockTop">
      <summary>上のドッキング領域を自動的に作成するかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AutoDockRight">
      <summary>右のドッキング領域を自動的に作成するかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AutoDockBottom">
      <summary>下のドッキング領域を自動的に作成するかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AllowFloat">
      <summary>フローティングツールバーとドッキングタブを許可するかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AutoSize">
      <summary>ドッキングの際に自動的にサイズ調整するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.Horizontal">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.AutoCreated">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.DockingStyle">
      <summary>C1DockingTab コントロールのドッキング動作を指定します。</summary>
      <remarks>
        <para>DockingStyle プロパティがデフォルトに設定されている場合、ドッキングはセレクタなしで動作します。 フローティングパネルを別のパネル上にドラッグすると、 パネルを離したときに C1DockingTab インスタンスが持つ位置を示す灰色のフレームが表示されます。</para>
        <para>VS2005 ドッキングスタイルのフィードバックは、 ドッキングゾーンセレクタを使用して、 パネルを離したときにドラッグするビューがドッキングされる場所を指定する Visual Studio 2005 に類似しています。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDock.FloatHide">
      <summary>アプリケーションがフォーカスを失ったときのフローティングウィンドウの動作を定義します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandException">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandException.#ctor">
      <summary>C1CommandException クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandException.#ctor(System.String)">
      <summary>C1CommandException クラスの新しいインスタンスを初期化します。</summary>
      <param name="description"></param>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandHolder">
      <summary>フォーム内で定義された C1Command オブジェクトを保持します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.#ctor">
      <summary>C1CommandHolder クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.Dispose(System.Boolean)">
      <summary>C1CommandHolder によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.CreateCommandHolder(System.Windows.Forms.Control)">
      <summary>コマンドホルダを作成して初期化します。</summary>
      <param name="form">コマンドホルダが作成されるフォーム。</param>
      <returns>作成されたコマンドホルダ。</returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.CommandHolderByForm(System.Windows.Forms.Control)">
      <summary>指定されたフォームのコマンドホルダがある場合は、それを返します。</summary>
      <param name="form">返されるコマンドホルダが存在するフォーム。</param>
      <returns>指定されたフォームのコマンドホルダ、または null。</returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.GetC1ContextMenu(System.Object)">
      <summary>C1CommandHolder 内に含まれたコンテキストメニューを取得します。</summary>
      <param name="control">コンテキストメニューを取得するコントロールまたは NotifyIcon。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.SetC1ContextMenu(System.Object,C1.Win.C1Command.C1ContextMenu)">
      <summary>C1CommandHolder 内に含まれたコンテキストメニューを設定します。</summary>
      <param name="control">コンテキストメニューを設定するコントロールまたは NotifyIcon。</param>
      <param name="value">コントロールにアタッチするコンテキストメニュー。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeC1ContextMenu(System.Object)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetC1ContextMenu(System.Object)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="control"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.GetC1Command(System.Object)">
      <summary>コントロールのデフォルト（ない場合は Click）イベントが発生するときに呼び出されるコマンド（C1Command 型または継承）を決定します。</summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.SetC1Command(System.Object,C1.Win.C1Command.C1Command)">
      <summary>コントロールのデフォルト（ない場合は Click）イベントが発生するときに呼び出されるコマンド（C1Command 型または継承）を設定します。</summary>
      <param name="control"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeC1Command(System.Object)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="control"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetC1Command(System.Object)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="control"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeImageTransparentColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeUIStrings">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetUIStrings">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeCustomizerFormClassName">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetCustomizerFormClassName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeNewToolbarFormClassName">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetNewToolbarFormClassName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ShouldSerializeSelectMdiChildFormClassName">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetSelectMdiChildFormClassName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.FindCommand(System.Windows.Forms.Shortcut)">
      <summary>ショートカットに関連付けられる C1Command を取得します。</summary>
      <param name="shortcut">コマンドに関連付けられているショートカットキー。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.CreateCommand">
      <summary>新しいコマンドを作成し、それを Commands コレクションに追加します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.CreateCommand(System.Type)">
      <summary>新しいコマンドを作成し、それを Commands コレクションに追加します。</summary>
      <param name="commandType"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.Customize">
      <summary>ツールバーカスタマイザを呼び出します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.MergeCommandLinks(C1.Win.C1Command.C1CommandLinks,C1.Win.C1Command.C1CommandLinks,C1.Win.C1Command.C1CommandLinks)">
      <summary>リンクに指定されているリンク規則を使用して、links1 と links2 のコマンドリンクを result にマージします。MDI のマージと同様です。</summary>
      <param name="result"></param>
      <param name="links1"></param>
      <param name="links2"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.MergeCommandLinks(C1.Win.C1Command.C1CommandLinks,C1.Win.C1Command.C1CommandLinks,C1.Win.C1Command.C1CommandLinks,System.Boolean)">
      <summary>リンクに指定されているリンク規則を使用して、links1 と links2 のコマンドリンクを result にマージします。MDI のマージと同様です。</summary>
      <param name="result"></param>
      <param name="links1"></param>
      <param name="links2"></param>
      <param name="restore"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.UnmergeCommandLinks(C1.Win.C1Command.C1CommandLinks)">
      <summary>MergeCommandLinks によって以前にマージされた２つのリンクコレクションをアンマージします。</summary>
      <param name="result"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.UnmergeCommandLinks(C1.Win.C1Command.C1CommandLinks,C1.Win.C1Command.C1CommandLinks,C1.Win.C1Command.C1CommandLinks)">
      <summary>MergeCommandLinks によって以前にマージされた２つのリンクコレクションをアンマージします。</summary>
      <param name="result"></param>
      <param name="links1"></param>
      <param name="links2"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnLookAndFeelChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnRecentLinksRunCountChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnRecentLinksThresholdChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnShowNonRecentLinksHoverDelayChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnCustomizationStarted(System.EventArgs)">
      <summary>単一ツールバーのレイアウトを復元するために呼び出されます。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnCustomizationFinished(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnCustomizeToolBarAdded(C1.Win.C1Command.CustomizeToolBarEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnCustomizeToolBarRemoved(C1.Win.C1Command.CustomizeToolBarEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnCustomizeLinkAdded(C1.Win.C1Command.CustomizeLinkEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.OnCustomizeLinkRemoved(C1.Win.C1Command.CustomizeLinkEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.SaveDefaultLayout">
      <summary>現在のレイアウトをデフォルト（カスタマイザのリセットボタンによって戻される状態）に設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.LayoutSaveInAppConfig">
      <summary>レイアウトデータをアプリケーション構成ファイルに保存します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.LayoutLoadFromAppConfig">
      <summary>アプリケーション構成ファイルからレイアウトデータを読み込みます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.LayoutReset">
      <summary>レイアウトをリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandHolder.ResetToolbar(System.String)">
      <summary>単一ツールバーのレイアウトを復元するために呼び出されます。</summary>
      <param name="name"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.UseIdleTimer">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.Commands">
      <summary>コマンドのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.MainMenu">
      <summary>フォームのメインメニューを返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.ImageList">
      <summary>コマンド画像の画像リストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.ImageTransparentColor">
      <summary>画像リストにないイメージの透過色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.Layout">
      <summary>ツールバーのレイアウトを取得または設定します。レイアウトの自動永続化を有効にするには、このプロパティを動的プロパティに追加します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.LayoutKeyName">
      <summary>アプリケーション構成ファイル内のレイアウトダイナミックキーの名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.AutoSaveLayout">
      <summary>ツールバーのレイアウトを自動的に保存するかどうかを示す値を取得または設定します。この機能が動作するには、レイアウトを動的プロパティに追加する必要があります。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.StateUpdateOnIdle">
      <summary>アイドル状態のときにコマンドの状態を更新するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.SmoothImages">
      <summary>現在選択されていないイメージをスムースイメージで描画します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.SkipDisabledMenuItems">
      <summary>Gets or sets a value indicating whether the user can give the focus to the CommandLink using keys when the Command is disabled.</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.VisualStyle">
      <summary>フォーム上のすべての C1Command コントロールの表示スタイルを取得または設定します（個別のコントロールにて上書きできます）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.UIStrings">
      <summary>ユーザーインタフェース文字列の配列を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.CustomizerFormClassName">
      <summary>Customizer フォームのクラス名を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.NewToolbarFormClassName">
      <summary>Customizer の新しいツールバーダイアログフォームのクラス名を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.SelectMdiChildFormClassName">
      <summary>MDI 子選択ダイアログフォームのクラス名を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.RecentLinksRunCount">
      <summary>アプリケーションを何回実行する間に使用されなかったメニュー項目を非表示にするかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.RecentLinksThreshold">
      <summary>あまり使用されないとみなされる項目の閾値（パーセント）を取得または設定します。値が大きくなるほど、多くの項目が非表示になります。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.ShowNonRecentLinksHoverDelay">
      <summary>マウスポインタが親メニュー項目に何秒置かれたら、あまり使用されない項目をすべて表示するかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.ShowInvisibleItems">
      <summary>非表示のメニュー項目とツールバー項目を設計時に表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.Animation">
      <summary>メニュー内でアニメーションを使用するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.LayoutLoad">
      <summary>レイアウト文字列をアプリケーション構成ファイルからロードする必要がある場合に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.LayoutSave">
      <summary>レイアウト文字列をアプリケーション構成ファイルに保存する必要がある場合に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CustomizationStarted">
      <summary>カスタマイズモードを開始するときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CustomizationFinished">
      <summary>カスタマイズモードを終了するときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CustomizeToolBarAdded">
      <summary>カスタマイズ時に、新しいツールバーを追加するか、非表示のツールバーを表示すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CustomizeToolBarRemoved">
      <summary>カスタマイズ時に、表示されているツールバーを非表示にすると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CustomizeLinkAdded">
      <summary>カスタマイズ時に、新しいコマンドリンクを既存のツールバーに追加すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CustomizeLinkRemoved">
      <summary>カスタマイズ時に、ツールバーからコマンドリンクを削除すると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.CommandClick">
      <summary>ユーザーがコマンドを起動したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.VisualStyleChanged">
      <summary>VisualStyle プロパティの値がコントロールで変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.RecentLinksRunCountChanged">
      <summary>RecentLinksRunCount プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.RecentLinksThresholdChanged">
      <summary>RecentLinksRunCount プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandHolder.ShowNonRecentLinksHoverDelayChanged">
      <summary>ShowNonRecentLinksHoverDelay プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandLink">
      <summary>C1CommandLink は、C1Command コンポーネントへのリンクとして機能します。C1CommandLink は、必要に応じてメニューまたはツールバーに追加したりカスタマイズすることができます。実際のアクションは、C1Command プロキシによって実行されます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.#ctor">
      <summary>C1CommandLink クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.#ctor(C1.Win.C1Command.C1Command)">
      <summary>C1CommandLink クラスの新しいインスタンスを初期化します。</summary>
      <param name="command"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.Dispose(System.Boolean)">
      <summary>C1CommandLink によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnInvoke(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.ShouldSerializeText">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.ResetText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.ShouldSerializeToolTipText">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.ResetToolTipText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnCommandChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnDelimiterChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnButtonLookChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnAlwaysRecentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnToolTipChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnMergeTypeChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnMergeOrderChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OnNewColumnChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.CommandChanged">
      <summary>コマンドリンクの Command プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.ToolTipChanged">
      <summary>コマンドリンクの ToolTip プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.TextChanged">
      <summary>コマンドリンクの Text プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.DelimiterChanged">
      <summary>コマンドリンクの Delimiter プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.ButtonLookChanged">
      <summary>コマンドリンクの ButtonLook プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.AlwaysRecentChanged">
      <summary>コマンドリンクの AlwaysRecent プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.MergeTypeChanged">
      <summary>コマンドリンクの MergeType プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.MergeOrderChanged">
      <summary>コマンドリンクの MergeOrder プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandLink.NewColumnChanged">
      <summary>コマンドリンクの NewColumn プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Bounds">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.ImageRect">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.TextRect">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.CheckRect">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Command">
      <summary>リンクされているコマンドを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Text">
      <summary>設定すると、Command のテキストを上書きします。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.ToolTipText">
      <summary>設定すると、Command のツールチップのテキストを上書きします。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.DefaultItem">
      <summary>この項目をドロップダウンメニューまたはコンテキストメニューのデフォルトにするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.OwnerDraw">
      <summary>この項目がオーナー描画であるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Delimiter">
      <summary>この項目の前に区切り入れるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.NewColumn">
      <summary>このリンクがメニューの新しい列の先頭になるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.ButtonLook">
      <summary>項目の表示方法を制御する値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.MergeType">
      <summary>このメニュー項目を含むメニューが別のメニューとマージされた場合、このメニュー項目の動作を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.MergeOrder">
      <summary>別のメニュー項目とマージされた場合のメニュー項目の相対的な位置を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.SortOrder">
      <summary>項目の相対位置を決定する値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.AlwaysRecent">
      <summary>項目が常に最新である（最新でないリンクが非表示状態のときに非表示にならない）かどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Enabled">
      <summary>リンクされているコマンドの Enabled プロパティのショートカットです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Visible">
      <summary>リンクされているコマンドの Visible プロパティのショートカットです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.IsEnabledParent">
      <summary>リンクされているコマンドが有効でサブメニューを含む場合は、true を返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Owner">
      <summary>このコマンドリンクを含むオブジェクト（メニュー、ツールバーなど）を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.State">
      <summary>コマンドリンクの現在の状態（normal、hot、pressed、open）を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.Index">
      <summary>最新のリンクの CommandLinks コレクション内の現在のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.IsServiceLink">
      <summary>このリンクがサービスリンク（《more》、《customize》、《scroll》ボタン）かどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLink.IsMoreLink">
      <summary>このリンクが［More］リンクかどうかを示します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandLinks">
      <summary>C1CommandLinks です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.Clear">
      <summary>すべての要素を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.Add(System.Object)">
      <summary>末尾にオブジェクトを追加します。</summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.AddRange(System.Collections.ICollection)">
      <summary>末尾に ICollection の要素を追加します。</summary>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.AddRange(C1.Win.C1Command.C1CommandLink[])">
      <summary>末尾に ICollection の要素を追加します。</summary>
      <param name="links"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.Insert(System.Int32,System.Object)">
      <summary>指定されたインデックスにある C1CommandLinks に要素を挿入します。</summary>
      <param name="index"></param>
      <param name="o"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.InsertRange(System.Int32,System.Collections.ICollection)">
      <summary>コレクションの要素を C1CommandLinks の指定されたインデックスに挿入します。</summary>
      <param name="index"></param>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.SetRange(System.Int32,System.Collections.ICollection)">
      <summary>コレクションの要素を要素の範囲にコピーします。</summary>
      <param name="index"></param>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.Remove(System.Object)">
      <summary>要素を削除します。</summary>
      <param name="o"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある要素を削除します。</summary>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.RemoveRange(System.Int32,System.Int32)">
      <summary>要素の範囲を削除します。</summary>
      <param name="index"></param>
      <param name="count"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.MoveTo(C1.Win.C1Command.C1CommandLink,System.Int32)">
      <summary>指定されたインデックスに要素を移動します。</summary>
      <param name="cl"></param>
      <param name="newindex"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.BeginUpdate">
      <summary>このメソッドは、EndUpdate メソッドが呼び出されるまでコントロールが描画されないようにします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.EndUpdate">
      <summary>BeginUpdate メソッドによって一時停止された描画を再開します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLinks.ResetLinksUsage">
      <summary>表示中の最新リンクに対して格納されているすべてのカウンタをリセットします。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandLinks.Item(System.Int32)">
      <summary>指定されたインデックスにある要素を取得または設定します。</summary>
      <param name="idx"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandMdiList">
      <summary>C1CommandMdiList です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.#ctor">
      <summary>C1CommandMdiList クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.Dispose(System.Boolean)">
      <summary>C1CommandMdiList によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.OnBeforeSelectWindow(C1.Win.C1Command.BeforeSelectWindowEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.OnCommandStateQuery(C1.Win.C1Command.CommandStateQueryEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.OnCommandLinkAdded(C1.Win.C1Command.CommandLinkEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.OnCommandLinkRemoved(C1.Win.C1Command.CommandLinkEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.Invoke(C1.Win.C1Command.ClickEventArgs)">
      <summary>実際には適宜作成されるコマンドのプレースホルダであるコマンドを呼び出すことに明確な意味はないため、このメソッドは直接呼び出さないでください。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.ShowSelectorWindow">
      <summary>現在使用できる MDI 子ウィンドウのすべてのリストが表示されるポップアップウィンドウを作成して表示します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMdiList.IsEmpty">
      <summary>現在リストに項目が含まれていない場合は、true を返します。</summary>
      <returns></returns>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMdiList.BeforeSelectWindow">
      <summary>ウィンドウの選択ダイアログが表示される前に発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMdiList.Text">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMdiList.DefaultText">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMdiList.MaxItems">
      <summary>作成されるメニュー項目の最大数を設定または返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMdiList.ListHidden">
      <summary>非表示のウィンドウを一覧表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandMenu">
      <summary>C1CommandMenu の概要を説明します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CommandMenu.m_foreColor">
      <summary>このメンバは内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CommandMenu.m_backColor">
      <summary>このメンバは内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CommandMenu.m_foreHiColor">
      <summary>このメンバは内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CommandMenu.m_backHiColor">
      <summary>このメンバは内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CommandMenu.m_backgroundImage">
      <summary>このメンバは内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CommandMenu.m_masterForm">
      <summary>このメンバは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.#ctor">
      <summary>C1CommandMenu クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.Dispose(System.Boolean)">
      <summary>C1CommandMenu によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.Invoke(C1.Win.C1Command.ClickEventArgs)">
      <summary>コマンドを起動します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnPopup(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnClosed(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnLargeMenuDisplayChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnFontChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnWidthChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnBackHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnForeHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnShowToolTipsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnHideNonRecentLinksChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnSideCaptionChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ResetBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ResetForeColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ShouldSerializeForeColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ResetBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ShouldSerializeBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ResetForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ShouldSerializeForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ResetFont">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ShouldSerializeFont">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ResetSideCaption">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMenu.ShouldSerializeSideCaption">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.IsParent">
      <summary>このコマンドが空でないサブメニューかどうかを判定します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.Popup">
      <summary>コマンドのサブメニューが表示される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.Closed">
      <summary>コマンドのサブメニューを終了した後で発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.LargeMenuDisplayChanged">
      <summary>メニューの LargeMenuDisplay プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.FontChanged">
      <summary>メニューの Font プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.WidthChanged">
      <summary>メニューの Width プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.SideCaptionChanged">
      <summary>メニューの SideCaption プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.ShowToolTipsChanged">
      <summary>メニューの ShowToolTips プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.BackColorChanged">
      <summary>BackColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.ForeColorChanged">
      <summary>ForeColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.BackHiColorChanged">
      <summary>BackHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.ForeHiColorChanged">
      <summary>ForeHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.BackgroundImageChanged">
      <summary>BackgroundImage プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.HideNonRecentLinksChanged">
      <summary>HideNonRecentLinks プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.MeasureLink">
      <summary>オーナー描画のリンクを測定する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.DrawLink">
      <summary>オーナー描画のリンクを描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.DrawBar">
      <summary>オーナー描画のメニューまたはツールバーを描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.CurrentLinkChanged">
      <summary>現在のコマンドリンクが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.LayoutLink">
      <summary>オーナー描画のリンクがリンク境界内のテキスト、画像、およびコントロールをレイアウトする必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1CommandMenu.VisualStyleChanged">
      <summary>VisualStyle プロパティの値がコントロールで変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.VisualStyle">
      <summary>コントロールの表示スタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.BackColor">
      <summary>メニューの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.ForeColor">
      <summary>メニューのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.BackHiColor">
      <summary>強調表示された項目の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.ForeHiColor">
      <summary>強調表示された項目のテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.BackgroundImage">
      <summary>メニューに表示される背景画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.BackgroundImageLayout">
      <summary>メニュー内の背景イメージのレイアウトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.Width">
      <summary>メニューの最小幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.HideFirstDelimiter">
      <summary>コントロールに最初の区切り文字を非表示にするかどうかを示す値を取得または設定します。</summary>
      <remarks>C1CommandLink.Delimiter プロパティは、C1ContextMenu 上で C1CommandLink の前の区切り文字を表示します。HideFirstDelimiter プロパティは、C1CommandLink の Delimiter プロパティが True の場合でも、最初に表示される C1CommandLink に対しては区切り文字を表示しません。</remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.ImageBarWidth">
      <summary>メニュー内の画像/チェックボックスバーの幅を取得または設定します。０に設定すると、幅は自動的に計算されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.DefaultText">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.LargeMenuDisplay">
      <summary>大きなメニュー（１つの列にすべての項目が収まらない場合）を表示する方法を決定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.HideNonRecentLinks">
      <summary>あまり使用されないメニュー項目を非表示にするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.Font">
      <summary>メニューのフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.CommandLinks">
      <summary>コマンドリンクのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.ShowToolTips">
      <summary>メニュー項目にマウスポインタが置かれたときにツールチップテキストを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.SeparateCheckBar">
      <summary>画像またはセパレートバーの代わりにチェックマークを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.SideCaption">
      <summary>メニューの左端に沿って表示されるキャプション（テキストまたは画像）を指定できます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandMenu.CloseOnItemClick">
      <summary>項目がクリックされたときにメニューを閉じるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandMsgHook">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.LocalWindowsHook">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LocalWindowsHook.m_hhook">
      <summary>フックコード。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LocalWindowsHook.m_filterFunc">
      <summary>FilterFunc 値。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LocalWindowsHook.m_hookType">
      <summary>HookType 値。</summary>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.OnHookInvoked(C1.Win.C1Command.HookEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.#ctor(C1.Win.C1Command.HookType)">
      <summary>LocalWindowsHook クラスの新しいインスタンスを初期化します。</summary>
      <param name="hook"></param>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.#ctor(C1.Win.C1Command.HookType,C1.Win.C1Command.LocalWindowsHook.HookProc)">
      <summary>LocalWindowsHook クラスの新しいインスタンスを初期化します。</summary>
      <param name="hook"></param>
      <param name="func"></param>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.CoreHookProc(System.Int32,System.IntPtr,System.IntPtr)">
      <summary>デフォルトのフィルタ関数。</summary>
      <param name="code">フックコード。</param>
      <param name="wParam">WPARAM 引数。</param>
      <param name="lParam">LPARAM 引数。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.Install">
      <summary>フックをインストールします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.Uninstall">
      <summary>フックをアンインストールします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.SetWindowsHookEx(C1.Win.C1Command.HookType,C1.Win.C1Command.LocalWindowsHook.HookProc,System.IntPtr,System.Int32)">
      <summary>Win32: SetWindowsHookEx()</summary>
      <param name="code"></param>
      <param name="func"></param>
      <param name="hInstance"></param>
      <param name="threadID"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.UnhookWindowsHookEx(System.IntPtr)">
      <summary>Win32: UnhookWindowsHookEx()</summary>
      <param name="hhook"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.LocalWindowsHook.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>Win32: CallNextHookEx()</summary>
      <param name="hhook"></param>
      <param name="code"></param>
      <param name="wParam"></param>
      <param name="lParam"></param>
      <returns></returns>
    </member>
    <member name="E:C1.Win.C1Command.LocalWindowsHook.HookInvoked">
      <summary>HookInvoked イベント。</summary>
    </member>
    <member name="P:C1.Win.C1Command.LocalWindowsHook.FilterFunc">
      <summary>FilterFunc 値。</summary>
    </member>
    <member name="T:C1.Win.C1Command.LocalWindowsHook.HookProc">
      <summary>フィルタ関数のデリゲートです。</summary>
      <param name="code">フックコード。</param>
      <param name="wParam">WPARAM 引数。</param>
      <param name="lParam">LPARAM 引数。</param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.LocalWindowsHook.HookEventHandler">
      <summary>Hook イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む HookEventArgs。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMsgHook.C1CommandMsgHookProc(System.Int32,System.IntPtr,System.IntPtr)">
      <summary>C1CommandMsgHookProc クラスの新しいインスタンスを初期化します。</summary>
      <param name="code"></param>
      <param name="wParam"></param>
      <param name="lParam"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandMsgHook.#ctor">
      <summary>C1CommandMsgHookProc クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1ContextMenu">
      <summary>コンテキストメニューです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.ShowContextMenu(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>特定の場所にメニューを表示します。</summary>
      <param name="control">コンテキストメニューが表示されるコントロール。</param>
      <param name="pt">コントロールのクライアント領域内でコンテキストメニューが表示される位置。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.CloseContextMenu">
      <summary>現在コンテキストメニューが開いている場合、それを閉じます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.OnBackHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.OnForeHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ContextMenu.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1ContextMenu.SourceControl">
      <summary>ショートカットメニューを表示しているコントロールを取得します。</summary>
      <remarks>
        このプロパティを使用して、
        <see cref="T:C1.Win.C1Command.C1ContextMenu" />で定義されたショートカットメニューを現在表示しているコントロールを判定できます。 現在ショートカットメニューが表示されていない場合、このプロパティを使用して直前にショートカットメニューを表示したコントロールを判定できます。
        <see cref="E:C1.Win.C1Command.C1CommandMenu.Popup" />イベントでこのプロパティを使用して、コントロールが正しいメニュー項目を表示していることを確認します。 このプロパティを使用して、ショートカットメニューに表示されたメニューコマンドに関連付けられたタスクを実行するメソッドに、コントロールへの参照を渡すこともできます。
      </remarks>
      <example>
        <para>
          次のコード例では、
          <see cref="T:C1.Win.C1Command.C1ContextMenu" />の
          <see cref="E:C1.Win.C1Command.C1CommandMenu.Popup" />イベントのイベントハンドラを作成します。 イベントハンドラのコードは、pictureBox1 という名前の PictureBox と textBox1 という名前の TextBox の２つのコントロールのどれがショートカットメニューを表示するコントロールであるかを判定します。
        </para>
        <para>
          どのコントロールによって
          <see cref="T:C1.Win.C1Command.C1ContextMenu" />がそのショートカットメニューを表示するかに応じて、 そのコントロールは
          <see cref="T:C1.Win.C1Command.C1Command" />の該当するメニュー項目を表示または非表示にします。
        </para>
        <para>
          この例では、c1ContextMenu1 という名前の
          <see cref="T:C1.Win.C1Command.C1ContextMenu" />クラスのインスタンスがフォーム内に定義されている必要があります。 c1ContextMenu には、［コピー］、［検索］、［画像の変更］メニュー項目が必要です。 この例では、TextBox と PictureBox がフォームに追加され、これらのコントロールの C1ContextMenu プロパティが c1ContextMenu1 に設定されている必要もあります。
        </para>
        <code>private void c1ContextMenu1_Popup(object sender, EventArgs e) { Control c = c1ContextMenu1.SourceControl; // Copy and Find is dispayed for textBox1 c1CommandCopy.Visible = (c == textBox1); c1CommandFind.Visible = (c == textBox1); // Change Picture is dispayed for pictureBox1 c1CommandChangePicture.Visible = (c == pictureBox1); }</code>
      </example>
    </member>
    <member name="E:C1.Win.C1Command.C1ContextMenu.Select">
      <summary>このイベントは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1DockingTab">
      <summary>このクラスは、おなじみのタブコントロールインタフェースを実装します。このインタフェースは、コントロールの端にある複数のタブを介してアクセスできる重なり合った複数のページから成り、各ページに任意のコントロールを置くことができます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.#ctor">
      <summary>C1DockingTab クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ShouldSerializePadding">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ResetPadding">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ShouldSerializeItemSize">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ResetItemSize">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ResetBackColor">
      <summary>BackColor プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ResetTabAreaBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ShouldSerializeTabAreaBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ShouldSerializeUIStrings">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ResetUIStrings">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Dispose(System.Boolean)">
      <summary>C1DockingTab によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnVisibleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Refresh">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.CreateControlsInstance">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnMouseLeave(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="msg"></param>
      <param name="keyData"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnResize(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnRightToLeftChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnFontChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnSystemColorsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.WndProc(System.Windows.Forms.Message@)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="m"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.IsHot(C1.Win.C1Command.C1DockingTabPage)">
      <summary>指定されたタブが Hot 状態の場合は true、その他の場合は false を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.BeginUpdate">
      <summary>コントロールのレイアウトロジックを一時停止します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.EndUpdate">
      <summary>通常のレイアウトロジックを再開します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Close(C1.Win.C1Command.C1DockingTabPage)">
      <summary>指定されたタブページを閉じます。</summary>
      <param name="page"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.SlideHidePage">
      <summary>ページを横にスライドすることによって非表示にします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.SlideShowPage(C1.Win.C1Command.C1DockingTabPage)">
      <summary>ページをスライドアウトすることによって表示します。</summary>
      <param name="page"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.SlideShowPage(System.Int32)">
      <summary>ページをスライドアウトすることによって表示します。</summary>
      <param name="pageIndex"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.FindPage(System.String)">
      <summary>指定されたタブテキストを含むページを返します。</summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.ScrollToSelectedTab">
      <summary>現在選択されているページのタブが表示されるように、必要に応じてタブをスクロールします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.GetTabRowCol(System.Int32,System.Int32@,System.Int32@)">
      <summary>C1DockingTab のタブのうち、指定されたタブの行と列を返します。</summary>
      <param name="tabIdx"></param>
      <param name="row"></param>
      <param name="col"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.GetCreatedDockingTabs">
      <summary>現在の DockingTab へのユーザー操作の結果（例えばページをフォーム外へドラッグした場合）として自動的に作成されたすべての DockingTab コンポーネントのコレクションを返します。</summary>
      <returns>自動的に作成された C1DockingTab コントロールの配列。</returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnSelectedIndexChanging(C1.Win.C1Command.SelectedIndexChangingEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnSelectedTabChanged(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1Command.C1DockingTab.SelectedIndexChanged" />イベントを発生させます。
      </summary>
      <param name="e">イベントデータを含む EventArgs。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnSelectedIndexChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnPaddingChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnAlignmentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabSizeModeChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnCanMoveTabsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnHotTrackChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnMultiLineChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnIndentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnItemSizeChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabLookChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabLayoutChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnAlignTabsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnShowToolTipsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnShowSingleTabChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnShowCaptionChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnCanCloseTabsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnShowTabsChanged(System.EventArgs)">
      <summary>
        <see cref="P:C1.Win.C1Command.C1DockingTab.ShowTabs" />プロパティ値が変更されたときに発生します。
      </summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnShowTabListChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnCanAutoHideChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnAutoHidingChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnRightToLeftLayoutChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnFloatingChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabPageClosing(C1.Win.C1Command.TabPageCancelEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabPageClosed(C1.Win.C1Command.TabPageEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabStyleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnAutoCreatedDockingTab(C1.Win.C1Command.AutoCreatedDockingTabEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.SaveLayout(System.Windows.Forms.Form,System.IO.Stream)">
      <summary>フォーム上のすべての C1DockingTab コントロールのレイアウトをストリームに保存します。</summary>
      <param name="form"></param>
      <param name="stream"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.SaveLayout(System.Windows.Forms.Form,System.String)">
      <summary>フォーム上のすべての C1DockingTab コントロールのレイアウトを指定されたファイルに保存します。</summary>
      <param name="form"></param>
      <param name="filename"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.RestoreLayout(System.Windows.Forms.Form,System.IO.Stream)">
      <summary>フォーム上のすべての C1DockingTab コントロールのレイアウトをストリームから復元します。</summary>
      <param name="form"></param>
      <param name="stream"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.RestoreLayout(System.Windows.Forms.Form,System.String)">
      <summary>フォーム上のすべての C1DockingTab コントロールのレイアウトを指定されたファイルから復元します。</summary>
      <param name="form"></param>
      <param name="filename"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Float(C1.Win.C1Command.C1DockingTabPage)">
      <summary>ページをフォームからフローティング状態にします。</summary>
      <param name="tabPage">フローティング状態にするタブページ。</param>
      <remarks>ページをデフォルト位置にフローティング状態にする。</remarks>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Float(C1.Win.C1Command.C1DockingTabPage,System.Drawing.Point)">
      <summary>指定されたタブページをフォームからフローティング状態にします。</summary>
      <param name="tabPage">フローティング状態にするタブページ。</param>
      <param name="position">位置。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Float(C1.Win.C1Command.C1DockingTabPage,System.Int32,System.Int32)">
      <summary>指定されたタブページをフォームからフローティング状態にします。</summary>
      <param name="tabPage">フローティング状態にするタブページ。</param>
      <param name="x">フローティング状態にする画面ポイントの x 座標。</param>
      <param name="y">フローティング状態にする画面ポイントの y 座標。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Float(System.Drawing.Point)">
      <summary>内部使用。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Float(System.Int32,System.Int32)">
      <summary>内部使用。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.Float">
      <summary>内部使用。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.LayoutExclude">
      <summary>SaveLayout/RestoreLayout から子が除外されるコントロールのリスト。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.AutoCreatedDockingTab">
      <summary>ユーザー操作（タブの削除、任意の場所へのドロップなど）によって新しい C1DockingTab が自動的に作成されるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.AlignmentChanged">
      <summary>Alignment プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.AutoHidingChanged">
      <summary>AutoHiding プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.CanAutoHideChanged">
      <summary>CanAutoHide プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.CanCloseTabsChanged">
      <summary>CanCloseTabs プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.ShowTabsChanged">
      <summary>ShowTabs プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.ShowTablistChanged">
      <summary>ShowTabList プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.CanMoveTabsChanged">
      <summary>CanMoveTabs プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.DrawTab">
      <summary>タブの標準の描画方法をカスタムの描画方法で上書きできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.HotTrackChanged">
      <summary>HotTrack プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.IndentChanged">
      <summary>Indent プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.ItemSizeChanged">
      <summary>ItemSize プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.MeasureTab">
      <summary>タブのサイズを任意に変更できます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.MultiLineChanged">
      <summary>MultiLine プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.PaddingChanged">
      <summary>Padding プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.SelectedIndexChanging">
      <summary>現在選択されているページのインデックスが変更されようとしているときに発生するイベントです。その変更をキャンセルできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.SelectedIndexChanged">
      <summary>SelectedIndex プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.SelectedTabChanged">
      <summary>SelectedTab が変更されたときに発生するイベント。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.ShowToolTipsChanged">
      <summary>ShowToolTips プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.ShowSingleTabChanged">
      <summary>ShowSingleTab プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.ShowCaptionChanged">
      <summary>ShowCaption プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabLookChanged">
      <summary>TabLook プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabLayoutChanged">
      <summary>TabLayout プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabPageClosing">
      <summary>現在選択されているページがユーザーによって閉じられようとするときに発生するイベントです。ページを閉じる動作をキャンセルできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabPageClosed">
      <summary>ページが閉じられた後に発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabSizeModeChanged">
      <summary>TabSizeMode プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.AlignTabsChanged">
      <summary>AlignTabs プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabStyleChanged">
      <summary>TabStyle プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.FloatingChanged">
      <summary>Floating プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.RightToLeftLayoutChanged">
      <summary>RightToLeftLayout プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.VisualStyleChanged">
      <summary>VisualStyle プロパティの値がコントロールで変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabsShowFocusCues">
      <summary>タブがフォーカス矩形を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.CloseBox">
      <summary>クローズボックスの位置を取得または設定します。</summary>
      <remarks>
        このプロパティは、
        <see cref="P:C1.Win.C1Command.C1DockingTab.CanCloseTabs" />が True の場合にのみ有効です。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.DockPreventModifierKey">
      <summary>実行時にフロート状態のコントロールを移動する際、押下中はドッキング状態になるのを抑制するための修飾キーを取得または設定します。</summary>
      <remarks>いくつかの修飾キーが指定された場合、そのいずれかが押されていれば動作します。</remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.OutlineMode">
      <summary>ウィンドウの移動中にウィンドウの輪郭を描画するために使用するモードを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabPages">
      <summary>このコントロール内のタブページのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.SelectedTab">
      <summary>現在選択されているページを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.SelectedIndex">
      <summary>現在選択されているページのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ImageList">
      <summary>コントロールのタブに表示する画像を提供する画像リストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabLook">
      <summary>タブの外観（テキスト、画像、または両方を表示するか）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabLayout">
      <summary>タブ上のテキストと画像のレイアウトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Padding">
      <summary>タブに表示される画像やテキストの周囲のスペースの量を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Alignment">
      <summary>タブが配置されるコントロールの領域（上部、下部、左側、右側）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabSizeMode">
      <summary>タブのサイズを変更する方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.CanMoveTabs">
      <summary>実行時にエンドユーザーがタブをドラッグすることによってタブをソートすることができるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.CanRenameTabs">
      <summary>エンドユーザーがタブのテキストをダブルクリックすることでタブ名を変更できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.HotTrack">
      <summary>コントロールのタブの上をマウスが通過するときにタブの外観が変化するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.AlignTabs">
      <summary>ページのコンテンツ領域の側面に沿ってタブを配置する方法を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Animate">
      <summary>コントロールを表示または非表示にするときにアニメーション表示を使用するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.MultiLine">
      <summary>複数行のタブを表示できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Text">
      <summary>現在選択されているタブのテキストを取得します（実行時のみ）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabCount">
      <summary>コントロール内のページ数を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.RowCount">
      <summary>タブの行数を取得します（実行時のみ）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Indent">
      <summary>コントロールの端からの最初のタブのインデントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ItemSize">
      <summary>タブのサイズを取得または設定します。このプロパティが空の場合、サイズは内容に基づいて自動的に計算されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ScrollActive">
      <summary>タブのスクロール矢印が現在表示されているかどうかを示す値を取得します（実行時のみ）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.AutoHiding">
      <summary>タブコントロールのページが自動非表示モードであるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ShowToolTips">
      <summary>マウスがタブの上にあるときにツールチップが表示されるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ShowSingleTab">
      <summary>コントロール内にページが１ページだけ存在する場合に、タブを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.CanCloseTabs">
      <summary>エンドユーザーが個別のタブページを閉じることができるかどうかを示す値を取得または設定します。CanCloseTabs が true の場合は、キャプション領域（ShowCaption が true の場合）またはタブ領域（そうでない場合）に閉じるアイコンが表示されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.KeepClosedPages">
      <summary>エンドユーザーによってタブページが閉じられた際、内部の配列に保持したままにする（以前保存したタブレイアウトを復帰させるときに使用します）かどうかを示す値を取得または設定します。デフォルト値は true です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ShowCaption">
      <summary>キャプションがページ上に表示されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.CanAutoHide">
      <summary>ページを自動的に非表示にできるかどうかを示す値を取得または設定します（CanAutoHide と ShowCaption の両方が true の場合は、画びょうアイコンがキャプション領域に表示される）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.SplitterWidth">
      <summary>ページのドッキングが有効な場合に、コントロールのページ間に描画される自動スプリッタの幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TextDirection">
      <summary>タブ上に描画されたテキストの方向を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Dock">
      <summary>親コンテナ内のコントロールのドッキングを取得または設定します。C1CommandDock 内で親が指定されていないコントロールにのみ指定できます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.BorderStyle">
      <summary>DockingTab の境界線のスタイルを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabStyle">
      <summary>DockingTab のタブのスタイルを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabsCanFocus">
      <summary>マウスがクリックされたときにタブがフォーカスを受け取ることができるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.AcceptsCtrlTab">
      <summary>コントロールが［Ctrl］+［Tab］キーと［Ctrl］+［Shift］+［Tab］キーを処理するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.CreatorDockingTab">
      <summary>ユーザー操作に基づいてこのインスタンスを自動的に作成した C1DockingTab を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabAreaBackColor">
      <summary>タブ領域の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.Floating">
      <summary>C1DockingTab が現在浮動しているかどうかを示す値を取得します（実行時のみ）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.UIStrings">
      <summary>ユーザーインタフェース文字列の配列を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabAreaBorder">
      <summary>タブ領域の周囲に境界線を描画するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabsSpacing">
      <summary>タブ間の距離を取得または設定します（タブを重ねる場合は負の値を指定できます）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.TabAreaSpacing">
      <summary>タブ領域の端からタブまでのスペースを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.SelectedTabBold">
      <summary>選択されているタブのテキストを太字表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ShowTabList">
      <summary>すべてのタブのドロップダウンリストを持つボタンを表示するかどうかを示す値を取得または設定します（複数行モードのときは無効です）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.ShowTabs">
      <summary>
        <see cref="T:C1.Win.C1Command.C1DockingTab" />内にタブ領域を表示するかどうかを取得または設定します。
      </summary>
      <remarks>ShowTabs プロパティを使用してタブの表示を制御します。 このプロパティが false に設定されている場合、タブ領域は表示されません。</remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.RightToLeftLayout">
      <summary>右から左へのミラーの配置が ON になっているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.DefaultSize">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.DisplayRectangle">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTab.VisualStyle">
      <summary>コントロールの表示スタイルを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.TabStyleEnumConverter">
      <summary>さまざまな表現から TabStyleEnum オブジェクトへ変換するための型コンバータを提供します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1DockingTabPage">
      <summary>C1DockingTab 内の１つのタブページを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.#ctor">
      <summary>C1DockingTabPage クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeCaptionText">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetCaptionText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetBackColor">
      <summary>BackColor プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetTabBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeTabBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetTabBackColorSelected">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeTabBackColorSelected">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetTabForeColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeTabForeColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ResetTabForeColorSelected">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.ShouldSerializeTabForeColorSelected">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.Float">
      <summary>を使用して、ページをフォームからデフォルト位置にフローティング状態にする。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.Float(System.Drawing.Point)">
      <summary>ページをフォームから指定された位置にフローティング状態にします。</summary>
      <param name="position">位置。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.Float(System.Int32,System.Int32)">
      <summary>ページをフォームから指定された座標にフローティング状態にします。</summary>
      <param name="x">フローティング状態にする画面ポイントの x 座標。</param>
      <param name="y">フローティング状態にする画面ポイントの y 座標。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.DockTo(C1.Win.C1Command.C1DockingTabPage)">
      <summary>ページを別のターゲットページにドッキングします。</summary>
      <param name="targetPage">ターゲットページ。</param>
      <remarks>ページはターゲットページの次のページになります。 このページをドッキングする場合は、まず DockTo(C1DockingTab)/&gt;</remarks>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.DockTo(C1.Win.C1Command.C1DockingTab)">
      <summary>ページをターゲット DockingTab にドッキングします。</summary>
      <param name="targetDockingTab">ターゲットドッキングタブ。</param>
      <remarks>ページはターゲット DockingTab の最初のページになります。</remarks>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.Dispose(System.Boolean)">
      <summary>C1DockingTabPage によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.CreateControlsInstance">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnFontChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnHandleCreated(System.EventArgs)">
      <summary>HandleCreated イベントを発生させます。</summary>
      <param name="e">イベントデータを含む EventArgs。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.IsInputKey(System.Windows.Forms.Keys)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="keyData"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnMouseLeave(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnLeave(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnEnter(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnGotFocus(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnLostFocus(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.SetVisibleCore(System.Boolean)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnClosing(System.ComponentModel.CancelEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnClosed(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnToolTipTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnCaptionTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnTabVisibleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTabPage.CaptionTextChanged">
      <summary>キャプションテキストが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTabPage.ToolTipTextChanged">
      <summary>ツールチップテキストが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTabPage.TabVisibleChanged">
      <summary>タブの表示状態が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTabPage.Closing">
      <summary>ページがユーザーによって閉じられようとするときに発生するイベントです。ページを閉じる動作をキャンセルできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTabPage.Closed">
      <summary>ページが閉じられた後に発生するイベントです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.ImageIndex">
      <summary>タブコントロールの ImageList 内のタブの画像のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.Image">
      <summary>タブの画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.Text">
      <summary>タブに表示されるテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.CaptionText">
      <summary>ページのキャプション領域内のテキストを取得または設定します。指定されていない場合は、Text プロパティの値になります。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.ToolTipText">
      <summary>タブのツールチップテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.IsSelected">
      <summary>このページが現在選択されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.TabVisible">
      <summary>タブが表示されるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.CloseTabBehavior">
      <summary>C1DockingTabPage の CloseBox クリックに関する動作を定義します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.TabBounds">
      <summary>ページのタブの境界を返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.TabBackColor">
      <summary>タブの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.TabBackColorSelected">
      <summary>選択されたタブの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.TabForeColor">
      <summary>非選択タブのテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.TabForeColorSelected">
      <summary>選択されたタブのテキストの色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.IsHot">
      <summary>マウスポインタがページのタブ領域に置かれているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPage.DisplayRectangle">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1DockingTabPages">
      <summary>C1DockingTabPage 要素のコレクションを表します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.PagedControlsCollectionBase">
      <summary>ページ形式のコントロールのページコレクションの基本クラスを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.#ctor(System.Windows.Forms.Control)">
      <summary>PagedControlsCollectionBase クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.check_page(System.Object)">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.OnPageAdded(System.Windows.Forms.Control)">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
      <param name="page"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.OnPageRemoved(System.Windows.Forms.Control,System.Int32)">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
      <param name="page"></param>
      <param name="pageIdx"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.BeginUpdate">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.EndUpdate">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.set_page(System.Windows.Forms.Control,System.Int32)">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
      <param name="value"></param>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.get_page(System.Int32)">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Remove(System.Object)">
      <summary>最初に見つかった特定のオブジェクトを IList から削除します。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Contains(System.Object)">
      <summary>IList に特定の値が含まれるかどうかを判定します。</summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.IndexOf(System.Object)">
      <summary>IList 内の特定の項目のインデックスを判定します。</summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Add(System.Object)">
      <summary>IList に項目を１つ追加します。</summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Clear">
      <summary>IList からすべての項目を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Insert(System.Int32,System.Object)">
      <summary>IList の指定された位置に項目を１つ挿入します。</summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある IList 項目を削除します。</summary>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.CopyTo(System.Array,System.Int32)">
      <summary>ICollection の要素を特定の配列インデックス位置から順に配列にコピーします。</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.GetEnumerator">
      <summary>PagedControlsCollectionBase を反復処理するための列挙子を返します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.CopyTo(System.Array)">
      <summary>PagedControlsCollectionBase を１次元配列にコピーします。</summary>
      <param name="array"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>ArrayList または ArrayList の一部を１次元配列にコピーします。</summary>
      <param name="index"></param>
      <param name="array"></param>
      <param name="arrayIndex"></param>
      <param name="count"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.AddRange(System.Collections.ICollection)">
      <summary>末尾に ICollection の要素を追加します。</summary>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.RemoveRange(System.Int32,System.Int32)">
      <summary>要素の範囲を削除します。</summary>
      <param name="index"></param>
      <param name="count"></param>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.Owner">
      <summary>このメソッド/プロパティ/クラスは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.IsReadOnly">
      <summary>IList が読み取り専用かどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.IsFixedSize">
      <summary>IList が固定サイズかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.IsSynchronized">
      <summary>ICollection へのアクセスが同期されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.Count">
      <summary>ICollection に含まれる要素の数を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.SyncRoot">
      <summary>ICollection へのアクセスを同期させるために使用できるオブジェクトを取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.PagedControlsCollectionBase.Enumerator">
      <summary>コレクションに対する単純な反復処理をサポートします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Enumerator.Reset">
      <summary>列挙子を初期位置に設定します。初期位置は、コレクション内の最初の要素の前です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PagedControlsCollectionBase.Enumerator.MoveNext">
      <summary>列挙子をコレクション内の次の要素に移動します。</summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.PagedControlsCollectionBase.Enumerator.Current">
      <summary>コレクション内の現在の要素を取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.check_page(System.Object)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.OnPageAdded(System.Windows.Forms.Control)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="apage"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.OnPageRemoved(System.Windows.Forms.Control,System.Int32)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="apage"></param>
      <param name="pageIdx"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.BeginUpdate">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.EndUpdate">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.IndexOfKey(System.String)">
      <summary>指定されたキーを持つ C1DockingTabPage が最初に見つかったインデックスを返します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPages.VisibleCount">
      <summary>TabVisible プロパティが True の場合のページ数を返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPages.Item(System.Int32)">
      <summary>指定されたインデックスにある要素を取得または設定します。</summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPages.Item(System.String)">
      <summary>指定されたキーを持つドッキングタブページをコレクションから取得します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.C1MainMenu">
      <summary>C1MainMenu です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.#ctor">
      <summary>C1MainMenu クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.Dispose(System.Boolean)">
      <summary>C1MainMenu によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnWrapChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnCanMergeChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnBackHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnForeHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnResize(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnLocationChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnSystemColorsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.InitLayout">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseEnter(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseHover(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnMouseLeave(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnBackgroundImageLayoutChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnShowToolTipsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.OnRightToLeftChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ResetBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ShouldSerializeBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ResetForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ShouldSerializeForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ResetFont">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ShouldSerializeFont">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ResetBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1MainMenu.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.WrapChanged">
      <summary>Wrap プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.HideFirstDelimiter">
      <summary>コントロールに最初の区切り文字を非表示にするかどうかを示す値を取得または設定します。</summary>
      <remarks>C1CommandLink.Delimiter プロパティは、C1MainMenu 上で C1CommandLink の前の区切り文字を表示します。HideFirstDelimiter プロパティは、C1CommandLink の Delimiter プロパティが True の場合でも、最初に表示される C1CommandLink に対しては区切り文字を表示しません。</remarks>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.ShowToolTipsChanged">
      <summary>ShowToolTips プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.CanMergeChanged">
      <summary>CanMerge プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.BackHiColorChanged">
      <summary>BackHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.ForeHiColorChanged">
      <summary>ForeHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.CurrentLinkChanged">
      <summary>現在のコマンドリンクが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.MeasureLink">
      <summary>オーナー描画のリンクのサイズを測定する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.DrawLink">
      <summary>オーナー描画の C1CommandLink を再描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.DrawBar">
      <summary>オーナー描画のメニューを再描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.LayoutLink">
      <summary>オーナー描画のコマンドリンクがリンク境界内でテキスト、画像、およびコントロールをレイアウトする必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1MainMenu.VisualStyleChanged">
      <summary>VisualStyle プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.VisualStyle">
      <summary>コントロールの表示スタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.BackHiColor">
      <summary>強調表示された項目の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.ForeHiColor">
      <summary>強調表示された項目のテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.CommandLinks">
      <summary>コマンドリンクのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.BackImageInImageBar">
      <summary>ドロップダウンメニューのイメージバーに背景画像を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.Wrap">
      <summary>すべての項目を１行で表示できない場合に、メニューを折り返すか、《More》ボタンを表示するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.CanMerge">
      <summary>MDI 子メニューを MDI 親メニューとマージするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.Font">
      <summary>C1MainMenu のフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.BackColor">
      <summary>C1MainMenu の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.ShowToolTips">
      <summary>メニュー項目にマウスポインタが置かれたときにツールチップテキストを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1MainMenu.CloseMoreOnItemClick">
      <summary>いくつかの項目がツールバーに収まりきらない時に自動的に作成したメニューで、そのメニューの項目がクリックされた際に閉じるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.#ctor">
      <summary>C1NavBar クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.ResetBackColor">
      <summary>このメソッドは内部専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.ShouldSerializeBackColor">
      <summary>このメソッドは内部専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.ShouldSerializeUIStrings">
      <summary>このメソッドは内部専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.ResetUIStrings">
      <summary>このメソッドは内部専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.SaveDefaultArrangement">
      <summary>現在の順序と表示状態のオプションをデフォルトのボタン配置として保存します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.OnSelectedPanelChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.OnShowOptionsMenuChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.OnAllowCollapseChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.OnCollapseDirectionChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.OnCloseButtonChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを呼び出します。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.Buttons">
      <summary>このナビゲーションバー内のボタンのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.Panels">
      <summary>このナビゲーションバー内のパネルのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.SelectedPanel">
      <summary>このナビゲーションバー内で現在表示されているパネルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.ButtonArrangement">
      <summary>このナビゲーションバー内のボタンの順序と表示状態を定義する文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.DefaultArrangement">
      <summary>ボタンのデフォルトの順序と表示状態のオプションを含む文字列を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.StackButtonCount">
      <summary>スタック内に表示するボタンの数を取得または設定します（-1 はすべてのボタンを示します）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.MaxStackButtons">
      <summary>スタック内のボタンの最大数を取得または設定します（-1 の場合、無制限）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.SelectedButtonIndex">
      <summary>Buttons コレクション内の選択されたボタンのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.SelectedButton">
      <summary>C1NavBar 内で現在選択されているボタンを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.DefaultButtonIndex">
      <summary>フォームが開いたときに選択されるボタンのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.VisibleButtonCount">
      <summary>C1NavBar 内に表示するボタンの数を返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.CloseButton">
      <summary>パネルキャプションに〈閉じる〉ボタンを表示するかどうか、およびボタンをクリックしたときに何を閉じるかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.ShowOptionsMenu">
      <summary>実行時のオプションメニューが表示されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.ShowVerticalTextOnCollapse">
      <summary>縮小された C1NavBar コントロールに縦書きテキストを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.AllowCollapse">
      <summary>〈縮小〉ボタンを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.CollapseDirection">
      <summary>コントロールが縮小する方向を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.Collapsed">
      <summary>現在コントロールが縮小された状態にあるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.VisualStyle">
      <summary>コントロールの視覚スタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.ImageScalingSize">
      <summary>スタックボタン上に表示する画像のサイズを取得または設定します（デフォルトでは 24 x 24 ピクセル）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.ImageIndent">
      <summary>スタックボタン上の画像の前のスペースを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.TextImageGap">
      <summary>スタックボタン上の画像とテクスト間のスペースを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.StripHeight">
      <summary>ナビゲーションバーの下部のボタンストリップの高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.UIStrings">
      <summary>ユーザーインタフェースの文字列の配列を取得します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.ButtonClick">
      <summary>ユーザーが C1NavBar 上でボタンを押したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.CloseButtonClick">
      <summary>パネルヘッダー上の〈閉じる〉ボタンがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.CollapseButtonClick">
      <summary>パネルヘッダー上の〈縮小〉ボタンがクリックされたときに発生します。 縮小をキャンセルできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.PanelClosing">
      <summary>現在選択されているパネルがユーザーによって閉じられようとするときに発生します。 パネルを閉じるのをキャンセルできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.PanelHeaderClick">
      <summary>パネルヘッダーがクリックされるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.PanelHeaderDoubleClick">
      <summary>パネルヘッダーがダブルクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.PanelHeaderImageClick">
      <summary>パネルヘッダーの画像がクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.PanelClosed">
      <summary>パネルが閉じられた後に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.ShowOptionsMenuChanged">
      <summary>ShowOptionsMenu プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.AllowCollapseChanged">
      <summary>AllowCollapse プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.CollapseDirectionChanged">
      <summary>CollapseDirection プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.CloseButtonChanged">
      <summary>CloseButton プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.SelectedPanelChanging">
      <summary>現在選択されているパネルが変更されると発生します。パネルの変更をキャンセルできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.SelectedPanelChanged">
      <summary>選択されたパネルが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1NavBar.VisualStyleChanged">
      <summary>VisualStyle プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ID">
      <summary>対応するボタンおよびパネルと同じである一意の識別子を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.Image">
      <summary>ボタン上に表示される画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.SmallImage">
      <summary>ボタンストリップ内に表示される小さい画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ImageTransparentColor">
      <summary>Image および SmallImage 画像内で透明として処理する色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.Text">
      <summary>スタックボタン上に表示されるテキスト、またはボタンがボタンストリップ内にあるときにツールチップ内に表示されるテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.PanelHeader">
      <summary>パネルヘッダーに表示されるテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.Visible">
      <summary>ボタンの表示状態を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.NavBarButtonTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートするかどうかを返します。</summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.NavBarButtonTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>特定の値オブジェクトを指定したタイプに変換します。</summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.NavBarButtonTypeConverter.Text">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.AddNewButton">
      <summary>新しいボタンを作成し、ボタンをコレクションに配置し、作成されたボタンを返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Contains(System.Object)">
      <summary>IList に特定の値が含まれるかどうかを判定します。</summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.IndexOf(System.Object)">
      <summary>IList 内の特定の項目のインデックスを判定します。</summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.IndexOfID(System.Int32)">
      <summary>ID プロパティの指定された値を含むコレクション内の 項目のインデックスを判定します。</summary>
      <param name="id">検索する ID プロパティの値。</param>
      <returns>指定された ID を持つボタンのインデックス。 このボタンが存在しない場合は -1。</returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Add(System.Object)">
      <summary>IList に項目を追加します。</summary>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Clear">
      <summary>IList からすべての項目を削除します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Insert(System.Int32,System.Object)">
      <summary>項目を指定された位置で IList に挿入します。</summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Remove(System.Object)">
      <summary>特定のオブジェクトの最初の発生を IList から削除します。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.RemoveAt(System.Int32)">
      <summary>指定されたインデックスの IList 項目を削除します。</summary>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.CopyTo(System.Array,System.Int32)">
      <summary>特定の配列インデックスから始め、ICollection コレクションの要素を配列にコピーします。</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.GetEnumerator">
      <summary>PagedControlsCollectionBase を通じて反復できる列挙体を返します。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.CopyTo(System.Array)">
      <summary>ButtonCollection を１次元配列にコピーします。</summary>
      <param name="array"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)">
      <summary>ArrayList またはその一部を１次元配列にコピーします。</summary>
      <param name="index"></param>
      <param name="array"></param>
      <param name="arrayIndex"></param>
      <param name="count"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.AddRange(System.Collections.ICollection)">
      <summary>ICollection の要素を末尾に追加します。</summary>
      <param name="c"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>一連の要素を削除します。</summary>
      <param name="index"></param>
      <param name="count"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.IsReadOnly">
      <summary>IList が読み取り専用かどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Item(System.Int32)">
      <summary>指定された位置の要素を取得または設定します。</summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.IsFixedSize">
      <summary>IList が固定サイズかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.IsSynchronized">
      <summary>ICollection へのアクセスが同期されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Count">
      <summary>ICollection に含まれる要素の数を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.SyncRoot">
      <summary>ICollection へのアクセスを同期させるために使用できるオブジェクトを取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Enumerator">
      <summary>ButtonCollection の繰り返し処理、および個々の C1NavBarButton オブジェクトの読み取りをサポートします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Enumerator.Reset">
      <summary>Enumerator を、最初の位置である、コレクションの先頭の要素の前に設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Enumerator.MoveNext">
      <summary>ButtonCollection 内の次の C1NavBarButton に移動します。</summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarButton.ButtonCollection.Enumerator.Current">
      <summary>ButtonCollection 内の現在の C1NavBarButton を取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarOptionsForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.#ctor">
      <summary>C1NavBarPanel クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.ResetButton">
      <summary>このメソッドは内部専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.ShouldSerializeButton">
      <summary>このメソッドは内部専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.ResetBackColor">
      <summary>BackColor プロパティをそのデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.ShouldSerializeBackColor">
      <summary>このメソッドは内部専用です。</summary>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarPanel.PanelVisible">
      <summary>パネルを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarPanel.Button">
      <summary>このパネルの対応するボタンを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarPanel.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.PanelCollection.FindID(System.Int32)">
      <summary>ID プロパティの指定された値を含むコレクション内のパネルを検索します。</summary>
      <param name="id">検索する ID プロパティの値。</param>
      <returns>指定された ID を持つパネル。このパネルが存在しない場合は null。</returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.PanelCollection.IndexOfID(System.Int32)">
      <summary>ID プロパティの指定された値を含むコレクション内の 項目のインデックスを判定します。</summary>
      <param name="id">検索する ID プロパティの値。</param>
      <returns>指定された ID を持つパネルのインデックス。 このパネルが存在しない場合は -1。</returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.PanelCollection.check_page(System.Object)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.PanelCollection.OnPageAdded(System.Windows.Forms.Control)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="page"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.PanelCollection.OnPageRemoved(System.Windows.Forms.Control,System.Int32)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="page"></param>
      <param name="pageIdx"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarPanel.PanelCollection.IndexOfKey(System.String)">
      <summary>指定されたキーを持つ C1NavBarPanel の最初の発生のインデックスを返します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarPanel.PanelCollection.Item(System.Int32)">
      <summary>指定されたインデックスの要素を取得または設定します。</summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarPanel.PanelCollection.Item(System.String)">
      <summary>指定されたキーを持つ C1NavBarPanel をコレクションから取得します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarSectionHeader.#ctor">
      <summary>C1NavBarSectionHeader クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarSectionHeader.Owner">
      <summary>オーナー C1NavBar コントロールを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBarHorizontalRule.#ctor">
      <summary>C1NavBarHorizontalRule クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarHorizontalRule.Owner">
      <summary>オーナー C1NavBar コントロールを取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1NavBarTheme">
      <summary>C1NavBar の外観をカスタマイズする色プロパティのセットを表します。</summary>
      <remarks>
        <para>テーマ色は、VisualStyle プロパティが新しい値に変更されるとリセットされます。</para>
        <para>一部のテーマ色は特定の視覚スタイルでのみ有効です。</para>
        <list type="table">
          <listheader>
            <description>
              Classic、OfficeXP、Office2003 の各視覚スタイルで有効な
              <see cref="T:C1.Win.C1Command.C1NavBarTheme" />プロパティのリスト：
            </description>
          </listheader>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.BorderColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonCheckedGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonCheckedGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonCheckedForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.GripGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.GripGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SeparatorNormalColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SeparatorLightColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderForeColor" />
            </description>
          </item>
        </list>
        <list type="table">
          <listheader>
            <description>
              WindowsXP 視覚スタイルで有効な
              <see cref="T:C1.Win.C1Command.C1NavBarTheme" />プロパティのリスト：
            </description>
          </listheader>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.BorderColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderForeColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedGradientBegin" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedGradientEnd" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SeparatorNormalColor" />
            </description>
          </item>
          <item>
            <description>
              <see cref="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderForeColor" />
            </description>
          </item>
        </list>注意：テーマは Office2007、Office2010 視覚スタイルでは有効でありません。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ClassicTheme">
      <summary>Windows Classic スタイルに対応するテーマを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.BlueTheme">
      <summary>デフォルトの青色のカラースキームに対応するテーマを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.OliveGreenTheme">
      <summary>Olive Green カラースキームに対応するテーマを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.SilverTheme">
      <summary>Silver カラースキームに対応するテーマを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.RoyaleTheme">
      <summary>Media Center スタイルに対応するテーマを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderForeColor">
      <summary>パネルヘッダーの前景色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderGradientBegin">
      <summary>パネルヘッダーの最初の背景のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.PanelHeaderGradientEnd">
      <summary>パネルヘッダーの２番目の背景のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderForeColor">
      <summary>セクションヘッダーの前景色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderGradientBegin">
      <summary>セクションヘッダーの最初の背景のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.SectionHeaderGradientEnd">
      <summary>セクションヘッダーの２番目の背景のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.SeparatorLightColor">
      <summary>C1NavBar セクションヘッダーの横線の色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.SeparatorNormalColor">
      <summary>C1NavBar セクション間の横線の色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.GripGradientBegin">
      <summary>グリップ線の最初のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.GripGradientEnd">
      <summary>グリップ線の２番目のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalForeColor">
      <summary>通常の状態のときにボタンの前景色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalGradientBegin">
      <summary>通常の状態のときにボタンの背景の最初のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonNormalGradientEnd">
      <summary>通常の状態のときにボタンの背景の２番目のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedForeColor">
      <summary>ハイライト表示されたときにボタンの前景色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedGradientBegin">
      <summary>ハイライト表示されたときにボタンの背景の最初のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonHighlightedGradientEnd">
      <summary>ハイライト表示されたときにボタンの背景の２番目のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedForeColor">
      <summary>押されたときにボタンの前景色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedGradientBegin">
      <summary>押されたときにボタンの背景の最初のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonPressedGradientEnd">
      <summary>押されたときにボタンの背景の２番目のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonCheckedForeColor">
      <summary>ON 状態のときにボタンの前景色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonCheckedGradientBegin">
      <summary>ON 状態のときにボタンの背景の最初のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.ButtonCheckedGradientEnd">
      <summary>ON 状態のときにボタンの背景の２番目のグラデーションの色を表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBarTheme.BorderColor">
      <summary>枠線の色。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1OutBar">
      <summary>Outlook スタイルのコンテナ/タブコントロールです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.#ctor">
      <summary>C1OutBar クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.FindPage(System.String)">
      <summary>指定されたテキストを含むページのインデックスを返します。そのようなページが存在しない場合は、-1 を返します。</summary>
      <param name="text"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.IsPressed(C1.Win.C1Command.C1OutPage)">
      <summary>指定されたページキャプションが押下状態の場合は true を返し、そうでない場合は false を返します。</summary>
      <param name="page"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.IsHot(C1.Win.C1Command.C1OutPage)">
      <summary>指定されたページキャプションがホット状態の場合は true を返し、そうでない場合は false を返します。</summary>
      <param name="page"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ScrollUp(System.Int32)">
      <summary>埋め込まれたツールバーを上にスクロールします。</summary>
      <param name="delta"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ScrollDown(System.Int32)">
      <summary>埋め込まれたツールバーを下にスクロールします。</summary>
      <param name="delta"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.BeginUpdate">
      <summary>コントロールのレイアウトロジックを一時的に停止します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.EndUpdate">
      <summary>コントロールのレイアウトロジックを通常に戻します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ResetBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ResetBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ShouldSerializeBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ResetForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.ShouldSerializeForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.Dispose(System.Boolean)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.CreateControlsInstance">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnMouseLeave(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnResize(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnFontChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnDockChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnSelectedPageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnSelectedIndexChanging(C1.Win.C1Command.SelectedIndexChangingEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnSelectedIndexChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnLookAndFeelChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnPageTitleHeightChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnShowToolTipsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnPageClick(C1.Win.C1Command.PageClickEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnPageLayoutChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnBackHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutBar.OnForeHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.VisualStyleChanged">
      <summary>VisualStyle プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.PageTitleHeightChanged">
      <summary>アウトバーの PageTitleHeight プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.DrawArrow">
      <summary>C1OutBar のページスクロール矢印のオーナー描画を許可します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.DrawPage">
      <summary>オーナー描画の C1OutPage を再描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.PageClick">
      <summary>ページタイトルがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.MeasurePage">
      <summary>C1OutBar のページキャプションを測定する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.SelectedIndexChanging">
      <summary>アウトバーの SelectedIndex プロパティが変更されているときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.SelectedIndexChanged">
      <summary>アウトバーの SelectedIndex プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.SelectedPageChanged">
      <summary>アウトバーの SelectedPage プロパティが変更されたときに発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.ShowToolTipsChanged">
      <summary>ShowToolTips プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.PageLayoutChanged">
      <summary>PageLayout プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.BackHiColorChanged">
      <summary>BackHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutBar.ForeHiColorChanged">
      <summary>ForeHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.BackHiColor">
      <summary>強調表示された項目の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.ForeHiColor">
      <summary>強調表示された項目のテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.Pages">
      <summary>アウトバーページのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.SelectedPage">
      <summary>選択されているページを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.SelectedIndex">
      <summary>選択されているページのインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.PageTitleHeight">
      <summary>各ページタイトルの高さを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.ShowScrollButtons">
      <summary>ツールバーのリンクをスクロールするスクロールボタンを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.Animate">
      <summary>選択されたページを変更するときにアニメーション表示を使用するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.ShowToolTips">
      <summary>マウスポインタがページのタイトルバー上にあるときにツールチップを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.ImageList">
      <summary>ページのタイトルバーに表示される画像を提供するために使用される画像リストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.PageLayout">
      <summary>ページのタイトルバーのテキストと画像のレイアウトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.Align">
      <summary>ページのタイトルバーのテキストと画像の配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.ShowInvisibleItems">
      <summary>非表示ページを設計時に表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutBar.VisualStyle">
      <summary>コントロールの表示スタイルを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1OutPage">
      <summary>C1OutBar 内の１つのページを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.#ctor">
      <summary>C1OutPage クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.ResetBackColor">
      <summary>BackColor プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.OnToolTipTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.OnEnabledChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.CreateControlsInstance">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.SetVisibleCore(System.Boolean)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.OnPageVisibleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1OutPage.PageVisibleChanged">
      <summary>PageVisible プロパティが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1OutPage.ToolTipTextChanged">
      <summary>ツールチップテキストが変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.PageVisible">
      <summary>ページが表示されるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.CaptionBounds">
      <summary>ページのキャプションの境界を返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.Text">
      <summary>ページのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.Pressed">
      <summary>ページキャプションの押下状態を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.OwnerDraw">
      <summary>このページのタイトルがオーナー描画かどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.IsSelected">
      <summary>ページが現在選択されている場合は、true を返します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.IsHot">
      <summary>マウスポインタがページのキャプション領域に置かれているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.ToolTipText">
      <summary>ページのツールチップテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.ImageIndex">
      <summary>アウトバーの ImageList 内のページ画像のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.Image">
      <summary>ページ画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPage.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1OutPage.C1OutPageControlCollection">
      <summary>コントロールオブジェクトのコレクションを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.C1OutPageControlCollection.#ctor(C1.Win.C1Command.C1OutPage)">
      <summary>C1OutPageControlCollection クラスの新しいインスタンスを初期化します。</summary>
      <param name="owner"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPage.C1OutPageControlCollection.Add(System.Windows.Forms.Control)">
      <summary>指定された Control オブジェクトをコレクションに追加します。</summary>
      <param name="value"></param>
    </member>
    <member name="T:C1.Win.C1Command.C1OutPages">
      <summary>アウトバーページのコレクションです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPages.check_page(System.Object)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPages.OnPageAdded(System.Windows.Forms.Control)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="page"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPages.OnPageRemoved(System.Windows.Forms.Control,System.Int32)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="page"></param>
      <param name="pageIdx"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPages.BeginUpdate">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPages.EndUpdate">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1OutPages.IndexOfKey(System.String)">
      <summary>指定されたキーを持つ C1OutPage が最初に見つかったインデックスを返します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPages.Item(System.Int32)">
      <summary>指定されたインデックスにある要素を取得または設定します。</summary>
      <param name="index"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1OutPages.Item(System.String)">
      <summary>指定されたキーを持つアウトページをコレクションから取得します。</summary>
      <param name="key"></param>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.C1SelectMdiChildForm">
      <summary>C1SelectMdiChildForm の概要を説明します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1SelectMdiChildForm.m_windowsList">
      <summary>既存のウィンドウのリスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1SelectMdiChildForm.m_btnOK">
      <summary>《OK》ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1SelectMdiChildForm.m_btnCancel">
      <summary>《Cancel》ボタン。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SelectMdiChildForm.#ctor">
      <summary>C1SelectMdiChildForm クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SelectMdiChildForm.Dispose(System.Boolean)">
      <summary>使用されたリソースをすべてクリーンアップします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SelectMdiChildForm.OnLoad(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1SelectMdiChildForm.ChildForms">
      <summary>使用可能なフォームのリスト。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SelectMdiChildForm.SelectedForm">
      <summary>選択されているフォーム。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SelectMdiChildForm.WindowsList">
      <summary>使用可能なウィンドウを表示するための ListBox コントロール。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SelectMdiChildForm.ButtonOk">
      <summary>《OK》ボタン。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SelectMdiChildForm.ButtonCancel">
      <summary>《Cancel》ボタン。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1SelectMdiChildForm.WindowItem">
      <summary>ウィンドウリスト内の１つのウィンドウを表します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1SelectMdiChildForm.WindowItem.Form">
      <summary>Form コントロール。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SelectMdiChildForm.WindowItem.#ctor(System.Windows.Forms.Form)">
      <summary>WindowItem クラスの新しいインスタンスを初期化します。</summary>
      <param name="f"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1SelectMdiChildForm.WindowItem.ToString">
      <summary>WindowItem を文字列表現に変換します。</summary>
      <returns></returns>
    </member>
    <member name="T:C1.Win.C1Command.C1ToolBar">
      <summary>C1ToolBar です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.#ctor">
      <summary>C1ToolBar クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.Dispose(System.Boolean)">
      <summary>C1ToolBar によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnDockChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnParentChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnLocationChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnFontChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnSystemColorsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.InitLayout">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseEnter(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseHover(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMouseLeave(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnBackgroundImageChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnBackgroundImageLayoutChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnBackColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnForeColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.SetVisibleCore(System.Boolean)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnCursorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnRightToLeftChanged(System.EventArgs)">
      <summary>このメソッドは内部専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ResetBackColor">
      <summary>BackColor プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ShouldSerializeBackColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ResetBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ShouldSerializeBackHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ResetForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ShouldSerializeForeHiColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ResetBorder">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.ShouldSerializeBorder">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnWrapChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnWrapTextChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnReset(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonAlignChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonWidthChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMinButtonSizeChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnCustomizeButtonChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnToolBarStyleChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnHorizontalChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnBorderChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnMeasureFloatingCaption(C1.Win.C1Command.MeasureFloatingCaptionEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnDrawFloatingCaption(C1.Win.C1Command.DrawFloatingCaptionEventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnBackHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnForeHiColorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonLookHorzChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonLookVertChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonLookEnforceHorzChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonLookEnforceVertChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonLayoutHorzChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnButtonLayoutVertChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnShowToolTipsChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.Reset">
      <summary>［Customize］ダイアログの［Reset］コマンドがクリックされると発生するイベントです。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonLookHorzChanged">
      <summary>ButtonLookHors プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonLookVertChanged">
      <summary>ButtonLookVert プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonLookEnforceHorzChanged">
      <summary>ButtonLookEnforceHors プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonLookEnforceVertChanged">
      <summary>ButtonLookEnforceVert プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonLayoutHorzChanged">
      <summary>ButtonLayoutHors プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonLayoutVertChanged">
      <summary>ButtonLayoutVert プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonAlignChanged">
      <summary>ButtonAlign プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ButtonWidthChanged">
      <summary>ButtonWidth プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.MinButtonSizeChanged">
      <summary>MinButtonSize プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.CustomizeButtonChanged">
      <summary>CustomizeButton プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.BorderChanged">
      <summary>Border プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ToolBarStyleChanged">
      <summary>ToolBarStyle プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.HorizontalChanged">
      <summary>Horizontal プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ShowToolTipsChanged">
      <summary>ShowToolTips プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.BackHiColorChanged">
      <summary>BackHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.ForeHiColorChanged">
      <summary>ForeHiColor プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.MeasureLink">
      <summary>オーナー描画のリンクを測定する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.LayoutLink">
      <summary>オーナー描画のリンクがリンク境界内のテキスト、画像、およびコントロールをレイアウトする必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.DrawLink">
      <summary>オーナー描画のリンクを描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.DrawBar">
      <summary>オーナー描画のメニューまたはツールバーを描画する必要があるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.MeasureFloatingCaption">
      <summary>浮動ツールバーのキャプションを測定する必要があるときに発生します。ツールバーのサイズをカスタマイズできます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.DrawFloatingCaption">
      <summary>浮動ツールバーのキャプションを描画する必要があるときに発生します。キャプションをオーナー描画できます。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.CurrentLinkChanged">
      <summary>現在のコマンドリンクが変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.WrapChanged">
      <summary>Wrap プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.WrapTextChanged">
      <summary>WrapText プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1ToolBar.VisualStyleChanged">
      <summary>VisualStyle プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.VisualStyle">
      <summary>コントロールの表示スタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.HideFirstDelimiter">
      <summary>コントロールに最初の区切り文字を非表示にするかどうかを示す値を取得または設定します。</summary>
      <remarks>C1CommandLink.Delimiter プロパティは、C1ToolBar 上で C1CommandLink の前の区切り文字を表示します。HideFirstDelimiter プロパティは、C1CommandLink の Delimiter プロパティが True の場合でも、最初に表示される C1CommandLink に対しては区切り文字を表示しません。</remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.BackHiColor">
      <summary>強調表示された項目の背景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ForeHiColor">
      <summary>強調表示された項目のテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.Floating">
      <summary>ツールバーが浮動状態かどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.Horizontal">
      <summary>ツールバーの方向を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.Movable">
      <summary>ツールバーをユーザーが移動できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLayoutHorz">
      <summary>ツールバーの方向が水平の場合のボタンのレイアウトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLayoutVert">
      <summary>ツールバーの方向が垂直の場合のボタンのレイアウトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLookHorz">
      <summary>ツールバーの方向が水平の場合のボタンのデフォルトの外観を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLookVert">
      <summary>ツールバーの方向が垂直の場合のボタンのデフォルトの外観を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.MinButtonSize">
      <summary>ツールバーのボタンの最小サイズ（幅および高さ）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonWidth">
      <summary>すべてのボタンの幅を取得または設定します（水平ツールバーにのみ適用されます。０の場合、ボタンは個々にサイズ指定されます）。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.CustomizeButton">
      <summary>カスタマイズボタンの表示状態を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLookEnforceHorz">
      <summary>すべてのボタンに ButtonLookHorz への準拠を強制するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLookEnforceVert">
      <summary>すべてのボタンに ButtonLookVert への準拠を強制するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.CommandLinks">
      <summary>コマンドリンクのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLayoutCurrent">
      <summary>ボタンの現在のレイアウトを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLookCurrent">
      <summary>ツールバーの現在の方向でのボタンのデフォルトの外観を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonLookEnforceCurrent">
      <summary>すべてのボタンに ButtonLookCurrent への準拠を強制するかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.BackImageInImageBar">
      <summary>ドロップダウンメニューのイメージバーに背景画像を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.Border">
      <summary>ツールバーの境界線の外観を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.AutoSize">
      <summary>ツールバーのサイズをすべての項目に合わせて自動的に調整するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ButtonAlign">
      <summary>垂直ツールバーのボタン配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ToolBarStyle">
      <summary>ツールバーのスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.ShowToolTips">
      <summary>ツールボタンにマウスポインタが置かれたときにツールチップテキストを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.CustomizeOptions">
      <summary>このツールバーでカスタマイズできる項目を示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.Wrap">
      <summary>すべての項目を１行で表示できない場合に、ツールバーを折り返すか、《More》ボタンを表示するかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.WrapText">
      <summary>ButtonWidth が０より大きく、テキストが収まらない場合に、リンク内のテキストを折り返すかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.CustomizeMode">
      <summary>ツールバーがカスタマイズモードであるかどうかを示します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1ToolBar.CloseMoreOnItemClick">
      <summary>いくつかの項目がツールバーに収まりきらない時に自動的に作成したメニューで、そのメニューの項目がクリックされた際に閉じるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1SideCaption">
      <summary>C1CommandMenu の SideCaption プロパティのクラスを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.#ctor">
      <summary>C1SideCaption クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ResetFont">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ShouldSerializeFont">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ResetForeColor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ShouldSerializeForeColor">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ResetBarGradientBegin">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ShouldSerializeBarGradientBegin">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ResetBarGradientEnd">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ShouldSerializeBarGradientEnd">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ShouldSerializeIcon">
      <summary>このメソッドは内部使用専用です。</summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.ResetIcon">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.Text">
      <summary>SideCaption に表示されるテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.Width">
      <summary>SideCaption の幅を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.GradientDirection">
      <summary>SideCaption のグラデーション方向（水平、垂直、左下斜め、右下斜め）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.TextDirection">
      <summary>SideCaption 内のテキストの方向を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.TextAlignment">
      <summary>SideCaption 内のテキスト配置（Near、Far、Center）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.CaptionLayout">
      <summary>SideCaption のテキストレイアウトを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.Font">
      <summary>SideCaption のフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.ForeColor">
      <summary>SideCaption のテキスト色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.BarGradientBegin">
      <summary>SideCaption のグラデーションの始まりの色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.BarGradientEnd">
      <summary>SideCaption のグラデーションの終わりの色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.Image">
      <summary>SideCaption 画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.ImageIndex">
      <summary>C1CommandHolder.ImageList の SideCaption の画像のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.Icon">
      <summary>SideCaption アイコンを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1SideCaption.SideCaptionTypeConverter">
      <summary>C1Command と他の表現の間で変換を行うための型コンバータを提供します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.SideCaptionTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>このオブジェクトがプロパティをサポートするかどうかを返します。</summary>
      <param name="context"></param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1SideCaption.SideCaptionTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>所定の値オブジェクトを指定した型に変換します。</summary>
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1SideCaption.SideCaptionTypeConverter.Text">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicBar">
      <summary>トピックバーコントロールです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.#ctor(System.Windows.Forms.ImageList)">
      <summary>C1TopicBar クラスの新しいインスタンスを初期化します。</summary>
      <param name="imageList"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.HitTest">
      <summary>現在のマウスの位置でのコントロールに関する情報を返します。</summary>
      <returns>
        ポイントに関する情報を含む
        <see cref="T:C1.Win.C1Command.C1TopicBarHitTestInfo" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.HitTest(System.Int32,System.Int32)">
      <summary>コントロールの表面上の指定された位置でのコントロールに関する情報を返します。</summary>
      <param name="x">クライアント座標の水平位置。</param>
      <param name="y">クライアント座標の垂直位置。</param>
      <returns>
        ポイントに関する情報を含む
        <see cref="T:C1.Win.C1Command.C1TopicBarHitTestInfo" />オブジェクト。
      </returns>
      <remarks>
        このメソッドは、
        <see cref="!:MouseMove" />、
        <see cref="!:MouseDown" />イベント、または類似のイベントを処理するときに便利です。 マウスが特定のリンク、ページタイトルなどの上にあるかどうかを判定できます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.HitTest(System.Drawing.Point)">
      <summary>コントロールの表面上の指定された位置でのコントロールに関する情報を返します。</summary>
      <param name="p">
        クライアント座標の
        <see cref="T:System.Drawing.Point" />。
      </param>
      <returns>
        ポイントに関する情報を含む
        <see cref="T:C1.Win.C1Command.C1TopicBarHitTestInfo" />オブジェクト。
      </returns>
      <remarks>
        このメソッドは、
        <see cref="!:MouseMove" />、
        <see cref="!:MouseDown" />イベント、または類似のイベントを処理するときに便利です。 マウスが特定のリンク、ページタイトルなどの上にあるかどうかを判定できます。
      </remarks>
      <example>
        以下のコードは、ユーザーがマウスを移動したときのヒットテスト情報を表示します。
        <code>Private Sub C1TopicBar1_MouseMove(ByVal sender As System.Object, ByVal e As System.Windows.Forms.MouseEventArgs) Handles C1TopicBar1.MouseMove Dim ht As C1.Win.C1Command.C1TopicBarHitTestInfo = C1TopicBar1.HitTest(e.Location) Label1.Text = ht.Type.ToString() If (Not IsNothing(ht.Page)) Then Label2.Text = ht.Page.Text Else Label2.Text = "" End If If (Not IsNothing(ht.Link)) Then Label3.Text = ht.Link.Text Else Label3.Text = "" End If End Sub</code></example>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.CollapseAll">
      <summary>すべてのページを折りたたみます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.ExpandAll">
      <summary>すべてのページを展開します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.FindPage(System.String)">
      <summary>指定した文字列を含む最初のページを返します。見つからなかった場合は null を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.FindPageByTag(System.Object)">
      <summary>指定した値を含む最初のページを返します。見つからなかった場合は null を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.FindLinkByTag(System.Object)">
      <summary>指定した値を含む最初のリンクを返します。見つからなかった場合は null を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.FindPageIndex(System.String)">
      <summary>指定した文字列を含む最初のページのインデックスを返します。見つからなかった場合は -1 を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.FindLink(System.String)">
      <summary>指定した文字列を含む最初のリンクを返します。見つからなかった場合は null を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.OnVisualStyleChanged(System.EventArgs)">
      <summary>VisualStyleChanged イベントを発生させます。</summary>
      <param name="e">イベント引数。</param>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.LinkStyle">
      <summary>ページ上のリンクのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.ResetLinkStyle">
      <summary>LinkStyle プロパティをデフォルト値にリセットします。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.Align">
      <summary>ページのタイトルバーの配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.Animation">
      <summary>ページを展開あるいは折りたたむときにアニメーションを利用するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.ImageList">
      <summary>ページのタイトルバーに表示される画像の ImageList を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.PagePadding">
      <summary>ページの境界線とリンクの間の余白を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.PageOffset">
      <summary>ページ間の間隔を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.Pages">
      <summary>トピックバーページのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.ShowToolTips">
      <summary>マウスカーソルがページのタイトルバーに移動されたときにツールチップを表示するかどうかを表す値を取得または設定します</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.ShowInvisibleItems">
      <summary>非表示のページおよびリンクを設計時に表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.VisualStyle">
      <summary>コントロールの表示スタイルを取得または設定します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1TopicBar.LinkClick">
      <summary>このトピックバーにあるリンクをクリックしたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1TopicBar.PageExpanded">
      <summary>ページが展開されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1TopicBar.PageCollapsed">
      <summary>ページが折りたたまれたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1TopicBar.VisualStyleChanged">
      <summary>VisualStyle プロパティの値が変更されると発生します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicLink">
      <summary>トピックリンクを表します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.ImageIndex">
      <summary>ページの ImageList 内のリンクの画像のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.Index">
      <summary>トピックページ内のこのリンクのインデックスです。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.Text">
      <summary>リンクのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.ToolTipText">
      <summary>リンクのツールチップテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.Visible">
      <summary>リンクが表示されているかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.TopicPage">
      <summary>このリンクが含まれるトピックページを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.TopicBar">
      <summary>このリンクが含まれるトピックバーを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.Tag">
      <summary>リンクに関連する任意データを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.Enabled">
      <summary>リンクが有効化されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicLinkCollection">
      <summary>C1TopicLink オブジェクトのコレクションです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicLinkCollection.Add(C1.Win.C1Command.C1TopicLink)">
      <summary>指定したリンクをコレクションに追加します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicLinkCollection.IndexOf(C1.Win.C1Command.C1TopicLink)">
      <summary>コレクション内の指定したリンクのインデックスを返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicLinkCollection.Insert(System.Int32,C1.Win.C1Command.C1TopicLink)">
      <summary>リンクを指定した位置に挿入します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicLinkCollection.Remove(C1.Win.C1Command.C1TopicLink)">
      <summary>指定したリンクをコレクションから削除します。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicLinkCollection.Contains(C1.Win.C1Command.C1TopicLink)">
      <summary>指定したリンクがコレクション内にあるかどうかを確認します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLinkCollection.Item(System.Int32)">
      <summary>指定されたインデックスのリンクを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicPage">
      <summary>トピックバー上のページを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPage.#ctor">
      <summary>Initializes a new instance of the C1TopicPage クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPage.FindLink(System.String)">
      <summary>指定した文字列を含む最初のリンクを返します。見つからなかった場合は null を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPage.FindLinkByTag(System.Object)">
      <summary>指定した値を含む最初のリンクを返します。見つからなかった場合は null を返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPage.Collapse">
      <summary>ページを折りたたみます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPage.Expand">
      <summary>ページを展開します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.Index">
      <summary>トピックバー内のこのページのインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.Align">
      <summary>ページ上のリンクの配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.Collapsed">
      <summary>ページが折りたたまれた状態かどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.SpecialStyle">
      <summary>ページタイトルに強調表示のスタイルを適応するかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.ShowButton">
      <summary>ページタイトルに展開/折りたたみボタンを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.ImageList">
      <summary>ページリンクに表示される画像を含む ImageList を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.ImageIndex">
      <summary>トピックバーの ImageList 内のページタイトルの画像のインデックスを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.Links">
      <summary>ページ上のリンクのコレクションを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.Text">
      <summary>ページのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.ToolTipText">
      <summary>ページのツールチップテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.PageVisible">
      <summary>ページが表示されているかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.WrapText">
      <summary>リンクテキストを折り返して表示するかどうかを表す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.Tag">
      <summary>ページに関連する任意データを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPage.TopicBar">
      <summary>このページが含まれるトピックバーを取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicPageCollection">
      <summary>C1TopicPage オブジェクトのコレクションです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPageCollection.Add(C1.Win.C1Command.C1TopicPage)">
      <summary>指定したページをコレクションに追加します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPageCollection.IndexOf(C1.Win.C1Command.C1TopicPage)">
      <summary>コレクション内の指定したページのインデックスを返します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPageCollection.Insert(System.Int32,C1.Win.C1Command.C1TopicPage)">
      <summary>指定した位置にページに挿入します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPageCollection.Remove(C1.Win.C1Command.C1TopicPage)">
      <summary>指定したページをコレクションから削除します。</summary>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicPageCollection.Contains(C1.Win.C1Command.C1TopicPage)">
      <summary>指定したページがコレクション内にあるかどうかを確認します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicPageCollection.Item(System.Int32)">
      <summary>指定されたインデックスのページを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CustomizerForm">
      <summary>メインのカスタマイズフォームを表します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_tabToolbars">
      <summary>ツールバーを記述する TabPage。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_tabCommands">
      <summary>使用可能なコマンドを記述する TabPage。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnOK">
      <summary>《OK》ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnCancel">
      <summary>《Cancel》ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnNew">
      <summary>新しいツールバーを追加するためのボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnDelete">
      <summary>ツールバーを削除するためのボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_categoriesList">
      <summary>すべてのコマンドカテゴリのリスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_lblCategories">
      <summary>Label コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_lblCommands">
      <summary>Label コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_lblDescription">
      <summary>Label コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_textAndImage">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_textOnly">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_imageOnly">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_textBelow">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_textAbove">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_textOnRight">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_textOnLeft">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnSave">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnRename">
      <summary>ツールバーのレイアウトを保存するためのボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnRestore">
      <summary>ツールバーのレイアウトを復元するボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_commandsParentPanel">
      <summary>Panel コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_commandsPanel">
      <summary>Panel コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_lblCommandsHelp">
      <summary>Label コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_statusBar">
      <summary>StatusBar コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_statusText">
      <summary>StatusBarPanel コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnReset">
      <summary>ツールバーのレイアウトをリセットするボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_toolbarsList">
      <summary>すべてのカスタマイズ可能なツールバーのリスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_grpButtonLook">
      <summary>GroupBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_grpButtonLayout">
      <summary>GroupBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_chkCustomizeButton">
      <summary>選択されたツールバーの［Customize］リンクの表示状態を切り替えるチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_tabPages">
      <summary>TabControl コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_grpDescription">
      <summary>GroupBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_grpButtonAlign">
      <summary>GroupBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_alignFar">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_alignCenter">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_alignNear">
      <summary>RadioButton コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_tabOptions">
      <summary>TabPage コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_grpVisualStyle">
      <summary>GroupBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_chkSmooth">
      <summary>CheckBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_grpColorFont">
      <summary>GroupBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnFont">
      <summary>［Font］ダイアログを呼び出すボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnBackColor">
      <summary>［Color］ダイアログを呼び出すボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_btnForeColor">
      <summary>［Color］ダイアログを呼び出すボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_fontDialog">
      <summary>［Font］ダイアログ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_colorDialog">
      <summary>［Color］ダイアログ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_updownThreshold">
      <summary>NumericUpDown コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_menuList">
      <summary>CheckedListBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_comboStyle">
      <summary>ComboBox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_lblRecentThreshold">
      <summary>Label コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1CustomizerForm.m_lblHideOldLinks">
      <summary>Label コントロール。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CustomizerForm.#ctor">
      <summary>C1CustomizerForm クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CustomizerForm.OnLoad(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CustomizerForm.OnClosed(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.C1CustomizerForm.FindFirst(System.String)">
      <summary>カテゴリに属する C1CommandHolder の最初のコマンドを検索します。</summary>
      <param name="catname">カテゴリ名。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Command.C1CustomizerForm.FindNext(System.String)">
      <summary>カテゴリに属する C1CommandHolder の次のコマンドを検索します。</summary>
      <param name="catname">カテゴリ名。</param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.C1CustomizerForm.OwnerForm">
      <summary>このフォームのオーナーであるフォーム。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1NewToolbarForm">
      <summary>新しいツールバー名を入力するためのダイアログを表します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NewToolbarForm.m_toolbarName">
      <summary>Textbox コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NewToolbarForm.m_prompt">
      <summary>Label コントロール。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NewToolbarForm.m_btnOK">
      <summary>《OK》ボタンです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NewToolbarForm.m_btnCancel">
      <summary>《キャンセル》ボタンです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NewToolbarForm.#ctor">
      <summary>C1NewToolbarForm クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NewToolbarForm.Dispose(System.Boolean)">
      <summary>C1NewToolbarForm によって使用されたリソースを解放します。</summary>
      <param name="disposing"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1NewToolbarForm.ToolbarName">
      <summary>新しいツールバーの名前。</summary>
    </member>
    <member name="T:C1.Win.C1Command.AllDockingTabs">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.AllDockingTabs.#ctor">
      <summary>AllDockingTabs クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.AllDockingTabs.Restore(System.Windows.Forms.Form)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="form"></param>
    </member>
    <member name="M:C1.Win.C1Command.AllDockingTabs.FindNamedControl(System.Windows.Forms.Control,System.String,System.Type)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="parent"></param>
      <param name="text"></param>
      <param name="type"></param>
      <returns></returns>
    </member>
    <member name="P:C1.Win.C1Command.AllDockingTabs.CommandDocks">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1CommandDockReflector">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDockReflector.#ctor">
      <summary>C1CommandDockReflector クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandDockReflector.Restore(C1.Win.C1Command.C1CommandDock)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="dock"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDockReflector.Id">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDockReflector.Name">
      <summary>このプロパティは内部専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDockReflector.Size">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDockReflector.DockingTabs">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandDockReflector.DragDockingTabs">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1DockingTabReflector">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabReflector.#ctor">
      <summary>C1DockingTabReflector クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabReflector.Restore(C1.Win.C1Command.C1CommandDock)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="dock"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.DockingTabPages">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.Name">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.CreatorDockingTab">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.Size">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.OldBounds">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.Location">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.ParentLocation">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.AutoHiding">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.Floating">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabReflector.SelectedIndex">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1DockingTabPageReflector">
      <summary>このクラスは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPageReflector.#ctor">
      <summary>C1DockingTabPageReflector クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPageReflector.Name">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPageReflector.TabVisible">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingTabPageReflector.ChildIndex">
      <summary>このプロパティは内部使用専用です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.ButtonLookFlags">
      <summary>この列挙型のメンバは、ビットごとの OR 演算を使用して組み合わせることができます。この列挙型のメンバを使用して、C1CommandLink クラスの ButtonLook、ButtonLookHorz、ButtonLookVert の各プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLookFlags.Default">
      <summary>ツールバーのデフォルト値を使用します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLookFlags.Text">
      <summary>ボタンのテキストを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLookFlags.Image">
      <summary>ボタンのイメージを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLookFlags.TextAndImage">
      <summary>ボタンのテキストとイメージを表示します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.ButtonLayoutEnum">
      <summary>この列挙型のメンバを使用して、C1Toolbar クラスの ButtonLayoutHorzand および ButtonLayoutVert プロパティを設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLayoutEnum.TextOnRight">
      <summary>テキストはイメージの右に置かれます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLayoutEnum.TextOnLeft">
      <summary>テキストはイメージの左に置かれます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLayoutEnum.TextBelow">
      <summary>テキストはイメージの下に置かれます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ButtonLayoutEnum.TextAbove">
      <summary>テキストはイメージの上に置かれます。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CloseBoxPositionEnum">
      <summary>クローズボックスの位置をロックモードで指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CloseBoxPositionEnum.Default">
      <summary>クローズボックスのデフォルト位置。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CloseBoxPositionEnum.ActivePage">
      <summary>アクティブなタブ上のクローズボックス。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CloseBoxPositionEnum.AllPages">
      <summary>すべてのタブ上のクローズボックス。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CloseTabBehavior">
      <summary>C1DockingTabPage の CloseBox クリックに関する動作を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CloseTabBehavior.Close">
      <summary>
        <see cref="T:C1.Win.C1Command.C1DockingTabPage" />を閉じて、
        <see cref="T:C1.Win.C1Command.C1DockingTabPages" />コレクションからそのタブページを削除します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Command.CloseTabBehavior.Hide">
      <summary>
        <see cref="P:C1.Win.C1Command.C1DockingTabPage.TabVisible" />プロパティを false に設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Command.ItemStateEnum">
      <summary>現在のメニュー/ツールバー項目の状態を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ItemStateEnum.Normal">
      <summary>標準（デフォルト）状態です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ItemStateEnum.Hot">
      <summary>項目の上にマウスポインタが置かれています。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ItemStateEnum.Pressed">
      <summary>項目が押されています（マウスの左ボタンまたはスペースキーで）。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ItemStateEnum.Open">
      <summary>項目にサブメニューが含まれ、それが現在開かれています。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ItemStateEnum.Dragged">
      <summary>カスタマイズ時または設計時に項目がドラッグされています。</summary>
    </member>
    <member name="T:C1.Win.C1Command.LargeMenuDisplayEnum">
      <summary>この列挙型のメンバを使用して、C1CommandMenu クラスの LargeMenuDisplay プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LargeMenuDisplayEnum.Wrap">
      <summary>メニューが画面に収まらない場合は、メニューが折り返されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LargeMenuDisplayEnum.Scroll">
      <summary>メニューが画面に収まらない場合は、メニューがスクロールします。</summary>
    </member>
    <member name="T:C1.Win.C1Command.UIStringsEnum">
      <summary>この列挙型の要素を使用して、カスタマイズ可能なユーザーインタフェース文字列の UIStrings 配列内の各文字列にインデックスを付けることができます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.More">
      <summary>「More...」コマンドのテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeToolbarOptions">
      <summary>「Toolbar Options」コマンドのテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeAddRemoveItems">
      <summary>［Add or Remove Buttons］コマンドのテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeReset">
      <summary>［Reset］コマンドのテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeCustomize">
      <summary>［Customize...］コマンドのテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeRenameToolbarDlg">
      <summary>［Rename］ツールバーダイアログコマンドのテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeDuplicateToolbarName">
      <summary>カスタマイザで「ツールバーの複製」メッセージを変換/カスタマイズできるようにします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.MoreMdiChildren">
      <summary>C1CommandMdiList によって作成される［More Windows］メニュー項目のテキスト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeDeleteToolbarFmt">
      <summary>カスタマイザで「ツールバーの削除確認」メッセージを変換/カスタマイズできるようにします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeStatusSaving">
      <summary>カスタマイザで状態文字列を変換/カスタマイズできるようにします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeStatusRestoring">
      <summary>カスタマイザで状態文字列を変換/カスタマイズできるようにします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeStatusResetting">
      <summary>カスタマイザで状態文字列を変換/カスタマイズできるようにします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.CustomizeStatusDone">
      <summary>カスタマイザで状態文字列を変換/カスタマイズできるようにします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.DockingTabCloseTooltip">
      <summary>C1DockingTab の閉じるボタンのツールチップ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.DockingTabPinTooltip">
      <summary>C1DockingTab の自動的に非表示ボタンのツールチップ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.DockingTabScrollNextTooltip">
      <summary>C1DockingTab の右にスクロールボタンのツールチップ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.DockingTabScrollPrevTooltip">
      <summary>C1DockingTab の左にスクロールボタンのツールチップ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.DockingTabListTooltip">
      <summary>タブリストの C1DockingTab ボタンのツールチップ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.NavBarShowButtonsMenuText">
      <summary>NavBar メニューの項目を表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.NavBarHideButtonsMenuText">
      <summary>NavBar メニューの項目を非表示にします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.NavBarOptionsMenuText">
      <summary>NavBar メニューのオプション項目。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.NavBarAddRemoveMenuText">
      <summary>NavBar メニューの項目を追加／削除します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.NavBarCustomizeButtonsToolTipText">
      <summary>NavBar メニューの項目をカスタマイズします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.UIStringsEnum.NavBarCollapsedBarText">
      <summary>NavBar の縮小されたバーのテキスト。</summary>
    </member>
    <member name="T:C1.Win.C1Command.LookAndFeelEnum">
      <summary>この列挙型のメンバを使用して、C1CommandHolder クラスと C1OutBar クラスの LookAndFeel プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LookAndFeelEnum.OfficeXP">
      <summary>Office XP スタイルの外観。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LookAndFeelEnum.Classic">
      <summary>Classic スタイルの外観。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LookAndFeelEnum.WindowsXP">
      <summary>Windows XP スタイルの外観。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LookAndFeelEnum.Office2003">
      <summary>Office 2003 スタイルの外観。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LookAndFeelEnum.Office2007">
      <summary>Office 2007 スタイルの外観。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LookAndFeelEnum.Office2010">
      <summary>Office 2010 ルック＆フィール。</summary>
    </member>
    <member name="T:C1.Win.C1Command.ToolBarStyleEnum">
      <summary>この列挙型のメンバを使用して、C1ToolBar クラスの ToolBarStyle プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ToolBarStyleEnum.Default">
      <summary>デフォルト状態のツールバーを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ToolBarStyleEnum.DropDownMenu">
      <summary>DropDownMenu のように描画されるツールバーを指定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CustomizeOptionsFlags">
      <summary>この列挙型のメンバを使用して、C1ToolBar クラスの CustomizeOptions プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.AllowNone">
      <summary>すべてのアクションを許可しません。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.AllowDelete">
      <summary>ツールバーを削除できます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.AllowAddItem">
      <summary>ツールバーに新しい C1CommandLink を追加できます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.AllowRemoveItem">
      <summary>ツールバーのコマンドリンクを削除できます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.AllowToggleCustomizeButton">
      <summary>カスタマイズボタンを有効または無効にできます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.HideCustomizeOption">
      <summary>[ボタンの追加と削除]メニューの[カスタマイズ]メニュー項目を非表示にします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.AllowAll">
      <summary>すべてのアクションを許可します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.TabTextDirectionEnum">
      <summary>この列挙型のメンバを使用して、C1DockingTab クラスの TabTextDirection プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabTextDirectionEnum.Default">
      <summary>デフォルトの方向は、タブが上部または下部にある場合は Horizontal、タブが左側にある場合は VerticalLeft、タブが右側にある場合は VerticalRight です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabTextDirectionEnum.Horizontal">
      <summary>テキストは水平方向に描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabTextDirectionEnum.VerticalLeft">
      <summary>テキストは垂直方向に描画され、反時計回りに 90 度回転されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabTextDirectionEnum.VerticalRight">
      <summary>テキストは垂直方向に描画され、時計回りに 90 度回転されます。</summary>
    </member>
    <member name="T:C1.Win.C1Command.TabSizeModeEnum">
      <summary>この列挙型のメンバを使用して、C1DockingTab クラスの TabSizeMode プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabSizeModeEnum.Normal">
      <summary>デフォルトのサイズ変更モードです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabSizeModeEnum.Fit">
      <summary>タブコントロールの幅に入るようにすべてのタブが縮小されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabSizeModeEnum.FillToEnd">
      <summary>タブは、タブコントロールの全幅になるように拡大されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabSizeModeEnum.User">
      <summary>ユーザーが MeasureTab イベントでタブのサイズを指定できます。</summary>
    </member>
    <member name="T:C1.Win.C1Command.TabStyleEnum">
      <summary>タブコントロールのタブの外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.VS2003">
      <summary>Visual Studio 2003 の外観です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Default">
      <summary>代わりに VS2003 を使用します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.WindowsXP">
      <summary>Windows XP の外観です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Classic">
      <summary>Classic の外観です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Sloping">
      <summary>片側が傾いたタブ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Rounded">
      <summary>角丸のタブ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Office2003">
      <summary>Office 2003 スタイルを使用して描画されるタブ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Office2007">
      <summary>Office 2007 スタイルを使用して描画されるタブ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabStyleEnum.Office2010">
      <summary>タブは Office 2010 スタイルを使用して表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1Command.OutlineModeEnum">
      <summary>ウィンドウの移動中にウィンドウの輪郭を描画する方法を列挙します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.OutlineModeEnum.Transparent">
      <summary>黒と透明のピクセルから成るチェックパターンの輪郭を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.OutlineModeEnum.Reversible">
      <summary>補色のリバーシブルラインを描画します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.HotFrameEnum">
      <summary>この列挙型のメンバを使用して、C1CommandControl クラスの HotFrame プロパティの値を設定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HotFrameEnum.Full">
      <summary>フレームはリンク全体を囲みます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HotFrameEnum.Control">
      <summary>フレームはコントロールだけを囲みます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HotFrameEnum.None">
      <summary>ホットフレーム/選択は描画されません。</summary>
    </member>
    <member name="T:C1.Win.C1Command.FloatHide">
      <summary>アプリケーションがフォーカスを失ったときのフローティングウィンドウの動作を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.FloatHide.Default">
      <summary>デフォルトのフローティング非表示動作。</summary>
      <remarks>
        <see cref="F:C1.Win.C1Command.FloatHide.Never" />フローティング非表示動作と同じ。
      </remarks>
    </member>
    <member name="F:C1.Win.C1Command.FloatHide.FocusLost">
      <summary>アプリケーションがフォーカスを失ったときにフローティングドッキングタブを非表示にします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.FloatHide.Never">
      <summary>フローティングドッキングタブを非表示にしません。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1NavBarOutlookButton">
      <summary>Outlook スタイルのナビゲーションバーボタンを列挙します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.None">
      <summary>「未定義」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Custom">
      <summary>「カスタム」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Mail">
      <summary>「メール」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Calendar">
      <summary>「予定表」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Contacts">
      <summary>「連絡先」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Tasks">
      <summary>「仕事」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Notes">
      <summary>「メモ」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Folder">
      <summary>「フォルダ一覧」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Shortcut">
      <summary>「ショートカット」ボタン。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarOutlookButton.Journal">
      <summary>「履歴」ボタン。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1NavBarCloseButtonEnum">
      <summary>ナビゲーションバーの閉じるボタンの表示と機能を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarCloseButtonEnum.None">
      <summary>閉じるボタンは表示しない。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarCloseButtonEnum.CloseCurrentPanel">
      <summary>閉じるボタンがクリックされたら現在選択中のパネルを閉じる。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1NavBarCloseButtonEnum.CloseWholeBar">
      <summary>閉じるボタンがクリックされたらナビゲーションバー全体を閉じる。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CollapseDirectionEnum">
      <summary>ナビゲーションバーを折りたたむ方向を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CollapseDirectionEnum.Auto">
      <summary>バーを折りたたむ方向はコントロールの Dock プロパティの値によって決定する。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CollapseDirectionEnum.ToLeft">
      <summary>バーは左側に折りたたまれる。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CollapseDirectionEnum.ToRight">
      <summary>バーは右側に折りたたまれる。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CollapseDirectionEnum.ToTop">
      <summary>バーは上側に折りたたまれる。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CollapseDirectionEnum.ToBottom">
      <summary>バーは下側に折りたたまれる。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1AnimationEnum">
      <summary>C1CommandHolder および C1TopicBar の　Animation プロパティの設定値です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1AnimationEnum.System">
      <summary>アニメーションはシステム設定によって決定。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1AnimationEnum.Off">
      <summary>アニメーションは OFF。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1AnimationEnum.On">
      <summary>アニメーションは ON。</summary>
    </member>
    <member name="T:C1.Win.C1Command.VisualStyle">
      <summary>コントロールの表示スタイルを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Custom">
      <summary>カスタムスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.System">
      <summary>システム標準スタイル。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2010Blue">
      <summary>MS Office 2010 Blue カラースキーム。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2010Black">
      <summary>MS Office 2010 Black カラースキーム。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2010Silver">
      <summary>MS Office 2010 Silver カラースキーム。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2007Blue">
      <summary>MS Office 2007 Blue カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2007Black">
      <summary>MS Office 2007 Black カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2007Silver">
      <summary>MS Office 2007 Silver カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2003Blue">
      <summary>MS Office 2003 Blue カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2003Olive">
      <summary>MS Office 2003 Olive カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Office2003Silver">
      <summary>MS Office 2003 Silver カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.OfficeXP">
      <summary>MS Office XP カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.Classic">
      <summary>Classic カラースキーマ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.VisualStyle.WindowsXP">
      <summary>Windows XP カラースキーマ。</summary>
    </member>
    <member name="T:C1.Win.C1Command.DockingStyle">
      <summary>C1DockingTab コントロールのドッキング動作を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DockingStyle.Default">
      <summary>デフォルトのドッキングスタイル。</summary>
      <remarks>DockingStyle プロパティがデフォルトに設定されている場合、 ドッキングはセレクタなしで動作します。 フローティングパネルを別のパネル上にドラッグすると、 パネルを離したときに C1DockingTab インスタンスが持つ位置を示す灰色のフレームが表示されます。</remarks>
    </member>
    <member name="F:C1.Win.C1Command.DockingStyle.VS2005">
      <summary>Visual Studio 2005 - ドッキングスタイルに類似。</summary>
      <remarks>VS2005 ドッキングスタイルのフィードバックは、ドッキングゾーンセレクタを使用して、 パネルを離したときにドラッグするビューがドッキングされる場所を指定する Visual Studio 2005 に類似しています。</remarks>
    </member>
    <member name="F:C1.Win.C1Command.DockingStyle.VS2008">
      <summary>Visual Studio 2008 - ドッキングスタイルに類似。</summary>
      <remarks>VS2008 ドッキングスタイルのフィードバックは、ドッキングゾーンセレクタを使用して、 パネルを離したときにドラッグするビューがドッキングされる場所を指定する Visual Studio 2008 に類似しています。</remarks>
    </member>
    <member name="F:C1.Win.C1Command.DockingStyle.VS2010">
      <summary>Visual Studio 2010 - ドッキングスタイルに類似。</summary>
      <remarks>VS2010 ドッキングスタイルのフィードバックは、ドッキングゾーンセレクタを使用して、 パネルを離したときにドラッグするビューがドッキングされる場所を指定する Visual Studio 2010 に類似しています。</remarks>
    </member>
    <member name="T:C1.Win.C1Command.ClickSourceEnum">
      <summary>この列挙型のメンバを使用して、ClickEventArgs クラスの ClickSource プロパティの値を決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickSourceEnum.None">
      <summary>クリックソースは未定義です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickSourceEnum.Menu">
      <summary>クリックソースはメニューです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickSourceEnum.Shortcut">
      <summary>クリックソースはショートカットキーです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickSourceEnum.External">
      <summary>クリックソースは外部です。</summary>
    </member>
    <member name="T:C1.Win.C1Command.ContextInfo">
      <summary>コンテキストメニューの起動に関するデータを記述します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.ContextInfo.#ctor(System.Windows.Forms.Control,System.Drawing.Point)">
      <summary>ContextInfo クラスの新しいインスタンスを初期化します。</summary>
      <param name="source">コンテキストメニューが表示されているコントロール。</param>
      <param name="location">ソースコントロール内でコンテキストメニューが表示されている場所。</param>
    </member>
    <member name="F:C1.Win.C1Command.ContextInfo.Source">
      <summary>コンテキストメニューが表示されているコントロールを返します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ContextInfo.Location">
      <summary>ソースコントロール内でコンテキストメニューが表示されている場所を返します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.ClickEventArgs">
      <summary>コマンドのクリックイベントハンドラの引数です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickEventArgs.Empty">
      <summary>空の引数を持つ ClickEventArgs。</summary>
    </member>
    <member name="M:C1.Win.C1Command.ClickEventArgs.#ctor(C1.Win.C1Command.ClickSourceEnum,C1.Win.C1Command.C1CommandLink,C1.Win.C1Command.ContextInfo)">
      <summary>ClickEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="clickSource">Click イベントが、メニュー選択、ショートカットキー、その他のどの方法によって発生したかを決定します。</param>
      <param name="callerLink">クリックイベントの発生源のコマンドリンクを取得します。</param>
      <param name="contextInfo">コンテキストメニューで発生したクリックのコンテキスト情報を取得します。</param>
    </member>
    <member name="F:C1.Win.C1Command.ClickEventArgs.ClickSource">
      <summary>Click イベントが、メニュー選択、ショートカットキー、その他のどの方法によって発生したかを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickEventArgs.CallerLink">
      <summary>クリックイベントの発生源のコマンドリンクを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.ClickEventArgs.ContextInfo">
      <summary>コンテキストメニューで発生したクリックのコンテキスト情報を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.ClickEventHandler">
      <summary>Click イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む ClickEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.CommandClickEventArgs">
      <summary>CommandClick イベントハンドラの引数。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CommandClickEventArgs.Empty">
      <summary>空の引数を持つ CommandClickEventArgs。</summary>
    </member>
    <member name="M:C1.Win.C1Command.CommandClickEventArgs.#ctor(C1.Win.C1Command.C1Command,C1.Win.C1Command.ClickSourceEnum,C1.Win.C1Command.C1CommandLink,C1.Win.C1Command.ContextInfo)">
      <summary>CommandClickEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="command">ユーザーによって呼び出されたコマンド。</param>
      <param name="clickSource">Click イベントの発生源を決定します。</param>
      <param name="callerLink">ユーザーによってクリックされたコマンドリンクを取得します。</param>
      <param name="contextInfo">コンテキストメニューで発生したイベントのコンテキスト情報を取得します。</param>
    </member>
    <member name="M:C1.Win.C1Command.CommandClickEventArgs.#ctor(C1.Win.C1Command.C1Command,C1.Win.C1Command.ClickEventArgs)">
      <summary>CommandClickEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="command">ユーザーによって呼び出されたコマンド。</param>
      <param name="e">イベントデータを含む BeforeSelectWindowEventArgs オブジェクト。</param>
    </member>
    <member name="F:C1.Win.C1Command.CommandClickEventArgs.Command">
      <summary>クリックされたコマンドを取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CommandClickEventHandler">
      <summary>CommandClick イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む CommandClickEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.CheckedChangedEventArgs">
      <summary>チェックの自動切り替えイベントハンドラの引数。</summary>
    </member>
    <member name="M:C1.Win.C1Command.CheckedChangedEventArgs.#ctor(System.Boolean)">
      <summary>CheckedChangedEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="newValue">Checked プロパティの新しい値。</param>
    </member>
    <member name="F:C1.Win.C1Command.CheckedChangedEventArgs.NewValue">
      <summary>Checked プロパティの新しい値を返します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CheckedChangedEventHandler">
      <summary>CheckedChanged イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む CheckedChangedEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.CommandStateQueryEventArgs">
      <summary>コマンドの状態クエリーイベントハンドラの引数です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CommandStateQueryEventArgs.Visible">
      <summary>コマンドが表示されているかどうかを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CommandStateQueryEventArgs.Enabled">
      <summary>コマンドが有効かどうかを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CommandStateQueryEventArgs.Checked">
      <summary>コマンドがチェックされているかどうかを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CommandStateQueryEventArgs.Pressed">
      <summary>コマンドが押されているかどうかを決定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CommandStateQueryEventHandler">
      <summary>CommandStateQuery イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む CommandStateQueryEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.BeforeSelectWindowEventArgs">
      <summary>MDI 子ウィンドウの選択前イベントハンドラの引数。</summary>
    </member>
    <member name="M:C1.Win.C1Command.BeforeSelectWindowEventArgs.#ctor(System.Windows.Forms.Form)">
      <summary>BeforeSelectWindowEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="selectWindowForm">選択されたウィンドウまたはダイアログボックス。</param>
    </member>
    <member name="F:C1.Win.C1Command.BeforeSelectWindowEventArgs.SelectWindowForm">
      <summary>選択されたウィンドウまたはダイアログボックス。</summary>
    </member>
    <member name="T:C1.Win.C1Command.BeforeSelectWindowEventHandler">
      <summary>BeforeSelectWindow イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む BeforeSelectWindowEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.CustomizeToolBarEventArgs">
      <summary>CustomizeToolBar イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeToolBarEventArgs.ToolBar">
      <summary>ツールバーを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.CustomizeToolBarEventArgs.#ctor(C1.Win.C1Command.C1ToolBar)">
      <summary>CustomizeToolBarEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="toolBar">カスタマイズしたツールバー。</param>
    </member>
    <member name="T:C1.Win.C1Command.CustomizeToolBarEventHandler">
      <summary>CustomizeToolBar イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む CustomizeToolBarEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.CustomizeLinkEventArgs">
      <summary>CustomizeLink イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeLinkEventArgs.ToolBar">
      <summary>コマンドリンクのツールバーを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeLinkEventArgs.CommandLink">
      <summary>コマンドリンクを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.CustomizeLinkEventArgs.#ctor(C1.Win.C1Command.C1ToolBar,C1.Win.C1Command.C1CommandLink)">
      <summary>CustomizeLinkEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="toolBar">コマンドリンクのツールバーを取得します。</param>
      <param name="commandLink">コマンドリンクを取得します。</param>
    </member>
    <member name="T:C1.Win.C1Command.CustomizeLinkEventHandler">
      <summary>CustomizeLink イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む CustomizeLinkEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DropDownEventArgs">
      <summary>DropDown イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DropDownEventArgs.CallerLink">
      <summary>ユーザーによって選択されたコマンドリンクを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DropDownEventArgs.LinkRect">
      <summary>コマンドリンクの画面座標を取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DropDownEventArgs.#ctor(C1.Win.C1Command.C1CommandLink,System.Drawing.Rectangle)">
      <summary>DropDownEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="callerLink">ユーザーによって選択されたコマンドリンクを取得します。</param>
      <param name="linkRect">コマンドリンクの画面座標を取得します。</param>
    </member>
    <member name="T:C1.Win.C1Command.DropDownEventHandler">
      <summary>DropDown イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DropDownEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasureLinkEventArgs">
      <summary>MeasureLink イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureLinkEventArgs.Link">
      <summary>測定する必要があるリンクを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureLinkEventArgs.Graphics">
      <summary>測定に使用する Graphics オブジェクトを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureLinkEventArgs.Width">
      <summary>リンクの幅を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureLinkEventArgs.Height">
      <summary>リンクの高さを指定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.MeasureLinkEventArgs.#ctor(System.Drawing.Graphics,C1.Win.C1Command.C1CommandLink,System.Int32,System.Int32)">
      <summary>MeasureLinkEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">測定に使用する Graphics オブジェクトを指定します。</param>
      <param name="link">測定する必要があるリンクを指定します。</param>
      <param name="width">リンクの幅を指定します。</param>
      <param name="height">リンクの高さを指定します。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasureLinkEventHandler">
      <summary>MeasureLink イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む MeasureLinkEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.LayoutLinkEventArgs">
      <summary>LayoutLink イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LayoutLinkEventArgs.Link">
      <summary>レイアウトのコマンドリンクを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LayoutLinkEventArgs.Bounds">
      <summary>コマンドリンクの境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LayoutLinkEventArgs.TextRect">
      <summary>テキスト四角形レイアウトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LayoutLinkEventArgs.ImageRect">
      <summary>画像四角形レイアウトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.LayoutLinkEventArgs.ControlLocation">
      <summary>ネストされたコントロールの位置です（コマンドが C1CommandControl の場合にのみ有効）。</summary>
    </member>
    <member name="M:C1.Win.C1Command.LayoutLinkEventArgs.#ctor(C1.Win.C1Command.C1CommandLink,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Point)">
      <summary>LayoutLinkEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="link">レイアウトのコマンドリンクを指定します。</param>
      <param name="bounds">コマンドリンクの境界四角形です。</param>
      <param name="textrect">テキスト四角形レイアウトです。</param>
      <param name="imagerect">画像四角形レイアウトです。</param>
      <param name="controllocation">ネストされたコントロールの場所。</param>
    </member>
    <member name="T:C1.Win.C1Command.LayoutLinkEventHandler">
      <summary>LayoutLink イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む LayoutLinkEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawLinkEventArgs">
      <summary>DrawLink イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawLinkEventArgs.Link">
      <summary>描画するコマンドリンクです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawLinkEventArgs.Graphics">
      <summary>描画するグラフィックオブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawLinkEventArgs.Bounds">
      <summary>リンクの境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawLinkEventArgs.Done">
      <summary>ユーザーが描画を完了したかどうかを示すフラグです。true に設定されている場合は、それ以上描画されません。そうでない場合は、デフォルトの描画が行われます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DrawLinkEventArgs.#ctor(System.Drawing.Graphics,C1.Win.C1Command.C1CommandLink,System.Drawing.Rectangle,System.Boolean)">
      <summary>DrawLinkEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">描画するグラフィックオブジェクトです。</param>
      <param name="link">描画するコマンドリンクです。</param>
      <param name="bounds">リンクの境界四角形です。</param>
      <param name="done">ユーザーが描画を完了したかどうかを示すフラグです。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawLinkEventHandler">
      <summary>DrawLink イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DrawLinkEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawBarEventArgs">
      <summary>DrawBar イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawBarEventArgs.Graphics">
      <summary>描画するグラフィックオブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawBarEventArgs.Bounds">
      <summary>バー（メニューまたはツールバー）の境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawBarEventArgs.Path">
      <summary>バー（メニューまたはツールバー）を囲むグラフィックパスです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawBarEventArgs.Done">
      <summary>ユーザーが描画を完了したかどうかを示すフラグです。true に設定されている場合は、それ以上描画されません。そうでない場合は、デフォルトの描画が行われます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DrawBarEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Drawing2D.GraphicsPath,System.Boolean)">
      <summary>DrawBarEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">描画するグラフィックオブジェクトです。</param>
      <param name="bounds">バーの境界四角形です。</param>
      <param name="path">バーを囲むグラフィックパスです。</param>
      <param name="done">ユーザーが描画を完了したかどうかを示すフラグです。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawBarEventHandler">
      <summary>DrawBar イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DrawBarEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasurePageEventArgs">
      <summary>MeasurePage イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasurePageEventArgs.Page">
      <summary>測定する C1OutPage オブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasurePageEventArgs.Graphics">
      <summary>測定に使用する Graphics オブジェクトを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasurePageEventArgs.Height">
      <summary>ページキャプションの高さです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.MeasurePageEventArgs.#ctor(System.Drawing.Graphics,C1.Win.C1Command.C1OutPage,System.Int32)">
      <summary>MeasurePageEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">測定に使用する Graphics オブジェクトを指定します。</param>
      <param name="page">測定する C1OutPage オブジェクトです。</param>
      <param name="height">ページキャプションの高さです。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasurePageEventHandler">
      <summary>MeasurePage イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む MeasurePageEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawPageEventArgs">
      <summary>DrawPage イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawPageEventArgs.Page">
      <summary>描画するページです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawPageEventArgs.Graphics">
      <summary>描画するグラフィックオブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawPageEventArgs.Bounds">
      <summary>ページの境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawPageEventArgs.Done">
      <summary>ユーザーが描画を完了したかどうかを示すフラグです。true に設定されている場合は、それ以上描画されません。そうでない場合は、デフォルトの描画が行われます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DrawPageEventArgs.#ctor(System.Drawing.Graphics,C1.Win.C1Command.C1OutPage,System.Drawing.Rectangle,System.Boolean)">
      <summary>DrawPageEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">描画するグラフィックオブジェクトです。</param>
      <param name="page">描画するページです。</param>
      <param name="bounds">ページの境界四角形です。</param>
      <param name="done">ユーザーが描画を完了したかどうかを示すフラグです。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawPageEventHandler">
      <summary>DrawPage イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DrawPageEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.PageClickEventArgs">
      <summary>PageClick イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.PageClickEventArgs.Page">
      <summary>クリックされたページです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PageClickEventArgs.#ctor(C1.Win.C1Command.C1OutPage)">
      <summary>DrawPageEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="page">クリックされたページです。</param>
    </member>
    <member name="T:C1.Win.C1Command.PageClickEventHandler">
      <summary>DrawPage イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む PageClickEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasureTabEventArgs">
      <summary>MeasureTab イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureTabEventArgs.Page">
      <summary>測定する C1DockingTabPage オブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureTabEventArgs.Graphics">
      <summary>測定に使用する Graphics オブジェクトを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureTabEventArgs.Width">
      <summary>タブの幅です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.MeasureTabEventArgs.#ctor(System.Drawing.Graphics,C1.Win.C1Command.C1DockingTabPage,System.Int32)">
      <summary>MeasureTabEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">測定に使用する Graphics オブジェクトを指定します。</param>
      <param name="page">測定する C1DockingTabPage オブジェクトです。</param>
      <param name="width">タブの幅です。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasureTabEventHandler">
      <summary>MeasureTab イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む MeasureTabEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.AutoCreatedDockingTabEventArgs">
      <summary>AutoCreatedDockingTab イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.AutoCreatedDockingTabEventArgs.NewDockingTab">
      <summary>新しい DockingTab を取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.AutoCreatedDockingTabEventArgs.#ctor(C1.Win.C1Command.C1DockingTab)">
      <summary>AutoCreatedDockingTabEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="newDockingTab">新しい DockingTab。</param>
    </member>
    <member name="T:C1.Win.C1Command.AutoCreatedDockingTabHandler">
      <summary>AutoCreatedDockingTab イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む AutoCreatedDockingTabEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawTabEventArgs">
      <summary>DrawTab イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawTabEventArgs.Page">
      <summary>描画するタブページです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawTabEventArgs.Graphics">
      <summary>描画するグラフィックオブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawTabEventArgs.Bounds">
      <summary>タブの境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawTabEventArgs.Done">
      <summary>ユーザーが描画を完了したかどうかを示すフラグです。true に設定されている場合は、それ以上描画されません。そうでない場合は、デフォルトの描画が行われます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DrawTabEventArgs.#ctor(System.Drawing.Graphics,C1.Win.C1Command.C1DockingTabPage,System.Drawing.Rectangle,System.Boolean)">
      <summary>DrawTabEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">描画するグラフィックオブジェクトです。</param>
      <param name="page">描画するタブページです。</param>
      <param name="bounds">タブの境界四角形です。</param>
      <param name="done">ユーザーが描画を完了したかどうかを示すフラグです。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawTabEventHandler">
      <summary>DrawTab イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DrawTabEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawArrowEventArgs">
      <summary>DrawArrow イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawArrowEventArgs.Graphics">
      <summary>描画するグラフィックオブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawArrowEventArgs.Bounds">
      <summary>矢印ボタンの境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawArrowEventArgs.Enabled">
      <summary>ボタンが有効にされたことを示す値を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawArrowEventArgs.Pressed">
      <summary>ボタンが押されたことを示す値を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawArrowEventArgs.Up">
      <summary>アップボタンを描画するかどうかを示します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawArrowEventArgs.Done">
      <summary>ユーザーが描画を完了したかどうかを示すフラグです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DrawArrowEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>DrawArrowEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">描画するグラフィックオブジェクトです。</param>
      <param name="bounds">矢印ボタンの境界四角形です。</param>
      <param name="enabled">ボタンが有効にされたことを示す値を取得します。</param>
      <param name="pressed">ボタンが押されたことを示す値を取得します。</param>
      <param name="up">アップボタンを描画するかどうかを示します。</param>
      <param name="done">ユーザーが描画を完了したかどうかを示すフラグです。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawArrowEventHandler">
      <summary>DrawArrow イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DrawArrowEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasureFloatingCaptionEventArgs">
      <summary>MeasureFloatingCaption イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureFloatingCaptionEventArgs.Graphics">
      <summary>測定に使用する Graphics オブジェクト。</summary>
    </member>
    <member name="F:C1.Win.C1Command.MeasureFloatingCaptionEventArgs.Height">
      <summary>浮動キャプションの高さです。</summary>
    </member>
    <member name="M:C1.Win.C1Command.MeasureFloatingCaptionEventArgs.#ctor(System.Drawing.Graphics,System.Int32)">
      <summary>MeasureFloatingCaptionEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">測定に使用する Graphics オブジェクト。</param>
      <param name="height">浮動キャプションの高さです。</param>
    </member>
    <member name="T:C1.Win.C1Command.MeasureFloatingCaptionEventHandler">
      <summary>MeasureFloatingCaption イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む MeasureFloatingCaptionEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawFloatingCaptionEventArgs">
      <summary>DrawFloatingCaption イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawFloatingCaptionEventArgs.Graphics">
      <summary>描画するグラフィックオブジェクトです。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawFloatingCaptionEventArgs.Bounds">
      <summary>浮動キャプションの境界四角形です。</summary>
    </member>
    <member name="F:C1.Win.C1Command.DrawFloatingCaptionEventArgs.Done">
      <summary>ユーザーが描画を完了したかどうかを示すフラグです。true に設定されている場合は、それ以上描画されません。そうでない場合は、デフォルトの描画が行われます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.DrawFloatingCaptionEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>DrawFloatingCaptionEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="graphics">描画するグラフィックオブジェクトです。</param>
      <param name="bounds">浮動キャプションの境界四角形です。</param>
      <param name="done">ユーザーが描画を完了したかどうかを示すフラグです。</param>
    </member>
    <member name="T:C1.Win.C1Command.DrawFloatingCaptionEventHandler">
      <summary>DrawFloatingCaption イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む DrawFloatingCaptionEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.CommandLinkEventArgs">
      <summary>CommandLinkAdded または CommandLinkRemoved イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CommandLinkEventArgs.CommandLink">
      <summary>コマンドリンクを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.CommandLinkEventArgs.#ctor(C1.Win.C1Command.C1CommandLink)">
      <summary>CommandLinkEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="commandLink"></param>
    </member>
    <member name="T:C1.Win.C1Command.CommandLinkEventHandler">
      <summary>CommandLinkAdded または CommandLinkRemoved イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む CommandLinkEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.SelectedIndexChangingEventArgs">
      <summary>SelectedIndexChanging イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.SelectedIndexChangingEventArgs.NewIndex">
      <summary>選択されたタブページの新しいインデックスを示します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.SelectedIndexChangingEventArgs.CanCancel">
      <summary>選択されたインデックスの変更をイベントハンドラによってキャンセルできるかどうかを示します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.SelectedIndexChangingEventArgs.#ctor(System.Int32,System.Boolean)">
      <summary>SelectedIndexChangingEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="newIndex">選択されたタブページの新しいインデックスを示します。</param>
      <param name="canCancel">選択されたインデックスの変更をイベントハンドラによってキャンセルできるかどうかを示します。</param>
    </member>
    <member name="T:C1.Win.C1Command.SelectedIndexChangingEventHandler">
      <summary>SelectedIndexChanging イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む SelectedIndexChanging オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.TabPageEventArgs">
      <summary>TabPageClosed イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabPageEventArgs.TabPage">
      <summary>タブページを示します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.TabPageEventArgs.#ctor(C1.Win.C1Command.C1DockingTabPage)">
      <summary>TabPageEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="tabPage">タブページを示します。</param>
    </member>
    <member name="T:C1.Win.C1Command.TabPageEventHandler">
      <summary>TabPageClosed イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む TabPageEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.TabPageCancelEventArgs">
      <summary>TabPageClosing イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TabPageCancelEventArgs.TabPage">
      <summary>タブページを示します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.TabPageCancelEventArgs.#ctor(C1.Win.C1Command.C1DockingTabPage)">
      <summary>TabPageCancelEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="tabPage">タブページを示します。</param>
    </member>
    <member name="T:C1.Win.C1Command.TabPageCancelEventHandler">
      <summary>TabPageClosing イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む TabPageCancelEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.PanelEventArgs">
      <summary>PanelClosed イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.PanelEventArgs.Panel">
      <summary>タブページを示します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PanelEventArgs.#ctor(C1.Win.C1Command.C1NavBarPanel)">
      <summary>PanelEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="panel">ナビゲーションバーパネル。</param>
    </member>
    <member name="T:C1.Win.C1Command.PanelEventHandler">
      <summary>PanelClosed イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントソース。</param>
      <param name="e">イベントデータを含む PanelEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.PanelCancelEventArgs">
      <summary>PanelClosing イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.PanelCancelEventArgs.Panel">
      <summary>ナビゲーションバーパネルを示します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.PanelCancelEventArgs.#ctor(C1.Win.C1Command.C1NavBarPanel)">
      <summary>PanelCancelEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="panel">ナビゲーションバーパネル。</param>
    </member>
    <member name="T:C1.Win.C1Command.PanelCancelEventHandler">
      <summary>PanelClosing イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントソース。</param>
      <param name="e">イベントデータを含む PanelCancelEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicBarHitTestTypeEnum">
      <summary>コントロール上の特定のポイントのトピックバー要素のタイプ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.None">
      <summary>ポイントは C1TopicBar の領域外にあります。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.Empty">
      <summary>ポイントは C1TopicBar の空の領域にあります。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.PageTitle">
      <summary>ポイントはページタイトル領域の空白部分にあります（テキスト、画像、または拡張／縮小インジケータの上にはありません）。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.PageTitleIndicator">
      <summary>ポイントはページタイトルの拡張／縮小インジケータの上にあります。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.PageTitleImage">
      <summary>ポイントはページタイトルの画像の上にあります。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.PageTitleText">
      <summary>ポイントはページタイトルのテキストの上にあります。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.PageBody">
      <summary>ポイントはページの本文の上にあります（ただし、リンクの上ではありません）。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.Link">
      <summary>ポイントはリンクの空白部分にあります（テキストまたは画像の上にはありません）。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.LinkImage">
      <summary>ポイントはリンクの画像の上にあります。</summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestTypeEnum.LinkText">
      <summary>ポイントはリンクのテキストの上にあります。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1TopicBarHitTestInfo">
      <summary>
        <see cref="T:C1.Win.C1Command.C1TopicBar" />コントロール内のページやリンクなどの情報を含みます。
      </summary>
      <remarks>
        <see cref="M:C1.Win.C1Command.C1TopicBar.HitTest" />メソッドを使用して、
        <see cref="!:HitTestInfo" />値を取得します。
      </remarks>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestInfo.Type">
      <summary>
        <see cref="T:C1.Win.C1Command.C1TopicBarHitTestInfo" />によって記述される要素のタイプを記述する
        <see cref="T:C1.Win.C1Command.C1TopicBarHitTestTypeEnum" />を取得します。
      </summary>
      <remarks>このプロパティを使用して、ポイントがトピックリンク、 またはタイトル画像やテキストなどの特殊な要素に対応するかどうかを判定できます。</remarks>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestInfo.Page">
      <summary>
        テストされるポイントで
        <see cref="T:C1.Win.C1Command.C1TopicPage" />を取得します（ポイントがページに対応していない場合は、null を返します）。
      </summary>
    </member>
    <member name="F:C1.Win.C1Command.C1TopicBarHitTestInfo.Link">
      <summary>
        テストされるポイントで
        <see cref="T:C1.Win.C1Command.C1TopicLink" />を取得します（ポイントがページに対応していない場合は、null を返します）。
      </summary>
    </member>
    <member name="T:C1.Win.C1Command.C1RadialMenu">
      <summary>ラジアルメニューを表します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1RadialMenu.#ctor">
      <summary>C1RadialMenu クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1RadialMenu.ShouldSerializeCursor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1RadialMenu.ResetCursor">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1RadialMenu.ShowMenu(System.Windows.Forms.Form,System.Drawing.Point,System.Boolean)">
      <summary>指定された画面上の点にラジアルメニューを表示します。 現在、メニューが別の位置に表示されている場合は、最初にそのメニューが非表示にされます。</summary>
      <param name="form">オーナーフォーム。</param>
      <param name="pt">ラジアルメニューの中心の画面座標。</param>
      <param name="expand">メニューを初期状態で展開して表示するかどうかを示します。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1RadialMenu.HideMenu">
      <summary>現在表示されているラジアルメニューを非表示にします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1RadialMenu.Move(System.Int32,System.Int32)">
      <summary>現在表示されているラジアルメニューを移動します。 表示されていない場合は何も実行しません。</summary>
      <param name="dx">X オフセット。</param>
      <param name="dy">Y オフセット。</param>
    </member>
    <member name="E:C1.Win.C1Command.C1RadialMenu.PropertyChanged">
      <summary>パブリックプロパティが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1RadialMenu.MenuClosed">
      <summary>メニューが閉じられるときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1RadialMenu.ItemClick">
      <summary>メニュー項目がクリックされたときに発生します。</summary>
      <remarks>クリックされた項目に独自の Click イベントが関連付けられている場合は、 そのイベントがこのイベントの直前に発生します。</remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Radius">
      <summary>
        展開された状態のメニュー半径を取得または設定します。
        <para>デフォルト値は 160 です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.ButtonRadius">
      <summary>
        中央ボタンの半径を取得または設定します。
        <para>デフォルト値は 28 です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.InnerRadius">
      <summary>
        外側にある項目の背景色で描かれた領域と、ラジアルメニュー自体の背景色で 描かれた内側の領域とを分ける半径を取得または設定します。
        <para>デフォルト値は 70 です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.BorderWidth">
      <summary>
        ラジアルメニューの外側境界線の幅を取得または設定します。
        <para>デフォルト値は 24 です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.TooltipPosition">
      <summary>
        ラジアルメニューに対するツールチップの位置を取得または設定します。
        <para>デフォルト値は "left" です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.UseAnimation">
      <summary>
        メニューでアニメーション効果を使用するかどうかを示す値を取得または設定します。
        <para>デフォルト値は true です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Items">
      <summary>このメニューに含まれる項目のコレクションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Image">
      <summary>ラジアルメニューの中央ボタンに表示される画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Cursor">
      <summary>
        ラジアルメニューで使用されるカーソルを取得または設定します。
        <para>デフォルト値は "hand" です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.AutoHide">
      <summary>
        ラジアルメニューを特定のイベント（フォーカス喪失など）で 自動的に非表示にするかどうかを示す値を取得または設定します。
        <para>デフォルトは true です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Enabled">
      <summary>
        ラジアルメニューを有効にするかどうかを示す値を取得または設定します。
        <para>デフォルトは true です。</para></summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Visible">
      <summary>現在、ラジアルメニューが表示されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.Expanded">
      <summary>現在、ラジアルメニューが展開されているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1RadialMenu.CenterOnScreen">
      <summary>
        メニューの中心の画面座標を取得または設定します。 現在、メニューが表示されていない場合（
        <see cref="P:C1.Win.C1Command.C1RadialMenu.Visible" />が false）は、 このプロパティを設定すると、例外が生成されます。
      </summary>
    </member>
    <member name="T:C1.Win.C1Command.RadialMenuItemClickEventArgs">
      <summary>RadialMenuItemClickEventHandler イベントハンドラの引数。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemClickEventArgs.#ctor(System.Object)">
      <summary>RadialMenuItemClickEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="item">クリックされた項目。</param>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemClickEventArgs.Item">
      <summary>
        クリックされた項目を取得します。 これは、
        <see cref="T:C1.Win.C1Command.RadialMenuItemBase" />または
        <see cref="T:C1.Win.C1Command.C1CommandLink" />から派生された型のオブジェクトです。
      </summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemClickEventArgs.RadialMenuItem">
      <summary>
        クリックされた項目が
        <see cref="P:C1.Win.C1Command.RadialMenuItemClickEventArgs.RadialMenuItem" />の場合は、その項目を返します。 そうでない場合は、null を返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemClickEventArgs.CommandLink">
      <summary>
        クリックされた項目が
        <see cref="T:C1.Win.C1Command.C1CommandLink" />の場合は、そのリンクを返します。 そうでない場合は、null を返します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Command.RadialMenuItemClickEventHandler">
      <summary>RadialMenuItemClick イベントを処理するメソッドを表します。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">イベントデータを含む RadialMenuItemClickEventArgs オブジェクト。</param>
    </member>
    <member name="T:C1.Win.C1Command.TooltipPosition">
      <summary>ラジアルメニューに対するメニューのツールチップの表示位置を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TooltipPosition.None">
      <summary>ツールチップは表示されません。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TooltipPosition.Left">
      <summary>ツールチップがメニューの左に表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TooltipPosition.Top">
      <summary>ツールチップがメニューの上に表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TooltipPosition.Right">
      <summary>ツールチップがメニューの右に表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1Command.TooltipPosition.Bottom">
      <summary>ツールチップがメニューの下に表示されます。</summary>
    </member>
    <member name="T:C1.Win.C1Command.RadialMenuItemBase">
      <summary>ラジアルメニューの項目の抽象基本クラス。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ShouldSerializeName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ResetName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ShouldSerializeText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ResetText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ShouldSerializeToolTip">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ResetToolTip">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ShouldSerializeChecked">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ResetChecked">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ShouldSerializeEnabled">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItemBase.ResetEnabled">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemBase.Name">
      <summary>項目の識別に使用される名前を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemBase.Text">
      <summary>メニュー項目に関連付けられたテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemBase.ToolTip">
      <summary>メニュー項目に関連付けられたツールチップを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemBase.Image">
      <summary>メニュー項目に関連付けられた画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemBase.Checked">
      <summary>メニュー項目がオンであるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItemBase.Enabled">
      <summary>メニュー項目が有効かどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.RadialMenuItem">
      <summary>ラジアルメニュー項目を表します。これには、サブメニューが含まれる場合があります。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.#ctor">
      <summary>RadialMenuItem クラスの新しいインスタンスを初期化します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.OnClick(System.EventArgs)">
      <summary>Click イベントを呼び出します。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ShouldSerializeName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ResetName">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ShouldSerializeText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ResetText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ShouldSerializeToolTip">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ResetToolTip">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ShouldSerializeChecked">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ResetChecked">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ShouldSerializeEnabled">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuItem.ResetEnabled">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.Items">
      <summary>このメニュー項目に含まれる項目のコレクションを取得または設定します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.RadialMenuItem.Click">
      <summary>メニュー項目がクリックされたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.Parent">
      <summary>
        このメニュー項目の親を取得します（これは
        <see cref="T:C1.Win.C1Command.C1RadialMenu" />または 別の
        <see cref="T:C1.Win.C1Command.RadialMenuItem" />です）。
      </summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.BackColor">
      <summary>このメニュー項目の背景色を取得または設定します。 空（デフォルト）にすると、メニュー全体に対して指定されている項目の背景色が使用されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.HighlightColor">
      <summary>このメニュー項目の強調表示の色を取得または設定します。 空（デフォルト）にすると、メニュー全体に対して指定されている項目の強調表示の色が使用されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.CheckColor">
      <summary>このメニュー項目のチェックマークの色を取得または設定します。 空（デフォルト）にすると、メニュー全体に対して指定されている項目のチェックマークの色が使用されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.BorderColor">
      <summary>このメニュー項目の拡張不可の境界線の色を取得または設定します。 空（デフォルト）にすると、メニュー全体に対して指定されている項目の拡張不可の境界線の色が使用されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.HotExpandableBorderColor">
      <summary>このメニュー項目のホット拡張可能な境界線の色を取得または設定します。 空（デフォルト）にすると、メニュー全体に対して指定されているスタイルが使用されます。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuItem.UserData">
      <summary>このメニュー項目に関連付けることができる任意のオブジェクトを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.RadialMenuCommandItem">
      <summary>
        <see cref="T:C1.Win.C1Command.C1Command" />に関連付けられているラジアルメニュー項目を表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ShouldSerializeCommand">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ResetCommand">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ShouldSerializeText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ResetText">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ShouldSerializeToolTip">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ResetToolTip">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ShouldSerializeImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ResetImage">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ShouldSerializeChecked">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ResetChecked">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ShouldSerializeEnabled">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.RadialMenuCommandItem.ResetEnabled">
      <summary>このメソッドは内部使用専用です。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuCommandItem.Command">
      <summary>
        このメニュー項目に関連付けられた
        <see cref="T:C1.Win.C1Command.C1Command" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuCommandItem.Text">
      <summary>オーバーライドされます。このメニュー項目に表示されるテキストを取得または設定します。 このプロパティを設定しても、関連付けられた C1Command のテキスト は変更されません。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuCommandItem.ToolTip">
      <summary>オーバーライドされます。このメニュー項目に表示されるツールチップを取得または設定します。 このプロパティを設定しても、関連付けられた C1Command のツールチップ は変更されません。</summary>
    </member>
    <member name="P:C1.Win.C1Command.RadialMenuCommandItem.Image">
      <summary>オーバーライドされます。このメニュー項目に表示される画像を取得または設定します。 このプロパティを設定しても、関連付けられた C1Command の画像 は変更されません。</summary>
    </member>
    <member name="T:C1.Win.C1Command.C1Stack">
      <summary>System.Collections.ArrayList に基づいたインデックスアクセスによる単純なスタックです。</summary>
    </member>
    <member name="T:C1.Win.C1Command.HookEventArgs">
      <summary>Hook イベントのデータを提供します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookEventArgs.HookCode">
      <summary>フックコード。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookEventArgs.wParam">
      <summary>WPARAM 引数。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookEventArgs.lParam">
      <summary>LPARAM 引数。</summary>
    </member>
    <member name="T:C1.Win.C1Command.HookType">
      <summary>フックのタイプ。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_MSGFILTER">
      <summary>ダイアログボックス、メッセージボックス、メニュー、またはスクロールバーの入力イベントの結果として生成されるメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_JOURNALRECORD">
      <summary>システムメッセージキューにポストされた入力メッセージを記録するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_JOURNALPLAYBACK">
      <summary>WH_JOURNALRECORD フックプロシージャによって以前に記録されたメッセージをポストするフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_KEYBOARD">
      <summary>キーストロークメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_GETMESSAGE">
      <summary>メッセージキューにポストされたメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_CALLWNDPROC">
      <summary>システムが目的のウィンドウプロシージャにメッセージを送る前にメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_CBT">
      <summary>コンピュータベースのトレーニング（CBT）アプリケーションに役立つ通知を受け取るフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_SYSMSGFILTER">
      <summary>ダイアログボックス、メッセージボックス、メニュー、またはスクロールバーの入力イベントの結果として生成されるメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_MOUSE">
      <summary>マウスメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_HARDWARE">
      <summary>このフックは、現在のところ Win32 に実装されていません。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_DEBUG">
      <summary>他のフックプロシージャのデバッグに役立つフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_SHELL">
      <summary>シェルアプリケーションに役立つ通知を受け取るフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_FOREGROUNDIDLE">
      <summary>アプリケーションのフォアグラウンドスレッドがアイドル状態なろうとしているときに呼び出されるフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_CALLWNDPROCRET">
      <summary>目的のウィンドウプロシージャによってメッセージが処理された後にメッセージを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_KEYBOARD_LL">
      <summary>低レベルのキーボード入力イベントを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="F:C1.Win.C1Command.HookType.WH_MOUSE_LL">
      <summary>低レベルのマウス入力イベントを監視するフックプロシージャをインストールします。</summary>
    </member>
    <member name="P:C1.Win.C1Command.MeasureLinkEventArgs.Link">
      <summary>計測する必要があるリンクを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.MeasureLinkEventArgs.Graphics">
      <summary>計測に使用される Graphics オブジェクトを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.MeasureLinkEventArgs.Width">
      <summary>リンクの幅を指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.MeasureLinkEventArgs.Height">
      <summary>リンクの高さを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1CommandHolder.SkipDisabledMenuItems">
      <summary>コマンドを無効にしたときに、ユーザーがキーを使用してそのコマンドリンクにフォーカスを移動できるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1ToolBar.OnParentCursorChanged(System.EventArgs)">
      <summary>このメソッドは内部使用専用です。</summary>
      <param name="e"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.LinkStyle">
      <summary>ページ上のリンクのスタイルを取得します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.ResetLinkStyle">
      <summary>デフォルトの LinkStyle プロパティ値を設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.ShowFocus">
      <summary>ページとリンクにフォーカス四角形を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1TopicBar.LinkStyleChanged">
      <summary>LinkStyle プロパティが変更されたときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicLinkStyle.ForeColor">
      <summary>リンクの前景色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicLinkStyle.Font">
      <summary>リンクのフォントを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicBarStyle.NormalPage">
      <summary>ページ上のリンクのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicBarStyle.SpecialPage">
      <summary>特殊なスタイル付きのページにあるリンクのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicLinkStatesStyle.NormalLink">
      <summary>リンクのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicLinkStatesStyle.MouseOverLink">
      <summary>マウスカーソルがリンクの上にあるときのリンクのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicLinkStatesStyle.DisabledLink">
      <summary>無効なリンクのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicLinkStatesStyle.PressedLink">
      <summary>押されたリンクのスタイルを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1Command.CustomizeOptionsFlags.HideCustomizeOption">
      <summary>［ボタンの追加と削除］メニューの［カスタマイズ］メニュー項目を非表示にします。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.GetCollapsedSize">
      <summary>折りたたまれた状態のコントロールからサイズの値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Command.CommandStrings">
      <summary>デザイナによって使用される UI 文字列を含む静的クラス。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPages.RemoveAt(System.Int32)">
      <summary>指定されたインデックスにある IList 項目を削除します。</summary>
      <param name="index"></param>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.TabClick">
      <summary>DockingTab のページヘッダがクリックされたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTab.AutoHidingChanging">
      <summary>AutoHiding プロパティの値が変更されると発生します。変更をキャンセルすることが可能です。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnAutoHidingChanging(System.ComponentModel.CancelEventArgs)">
      <summary>AutoHidingChanging イベントを発生させます。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTab.OnTabClick(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1Command.C1DockingTab.TabClick" />イベントを発生させます。
      </summary>
      <param name="e">イベントデータを含む EventArgs。</param>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingTabPage.TabClick">
      <summary>ページヘッダがクリックされたときに発生します。</summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingTabPage.OnTabClick(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1Command.C1DockingTabPage.TabClick" />イベントを発生させます。
      </summary>
      <param name="e">イベントデータを含む EventArgs。</param>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.OpenSubmenu(System.Boolean)">
      <summary>
        <see cref="T:C1.Win.C1Command.C1CommandMenu" />にリンクされているサブメニューを開きます。
      </summary>
      <param name="allTree">True のときはメニューのすべてのツリーを開きます。false のときは現在のサブメニューのみを開きます。</param>
      <remarks>
        リンクされたコマンドが
        <see cref="T:C1.Win.C1Command.C1CommandMenu" />のときはサブメニューを開きます。それ以外の場合は何もしません。
      </remarks>
    </member>
    <member name="M:C1.Win.C1Command.C1CommandLink.CloseSubmenu">
      <summary>
        <see cref="T:C1.Win.C1Command.C1CommandMenu" />にリンクされているサブメニューを閉じます。
      </summary>
    </member>
    <member name="F:C1.Win.C1Command.DockingStyle.VS2012">
      <summary>Visual Studio 2012 - ドッキングスタイルに類似。</summary>
      <remarks>VS2012 ドッキングスタイルのフィードバックは、ドッキングゾーンセレクタを使用して、 パネルを離したときにドラッグするビューがドッキングされる場所を指定する Visual Studio 2012 に類似しています。</remarks>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicLink.Pressed">
      <summary>リンクが押下されているかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarButtonStyle.ForeColor">
      <summary>
            Represents foreground color of button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarButtonStyle.Background">
      <summary>
            Represents background color or 1st background gradient color of button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarButtonStyle.BackgroundGradientEnd">
      <summary>
            Represents 2nd background gradient color of button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarButtonStyle.InnerBorder">
      <summary>
            Represents the inner border's color of button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarButtonStyle.OuterBorder">
      <summary>
            Represents the outer border's color of button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.C1TopicBar.PageStyle">
      <summary>
            Gets the style of the pages.
            </summary>
    </member>
    <member name="M:C1.Win.C1Command.C1TopicBar.ResetPageStyle">
      <summary>
            Resets the PageStyle property to its default value.
            </summary>
    </member>
    <member name="E:C1.Win.C1Command.C1TopicBar.PageStyleChanged">
      <summary>
            Occurs when the PageStyle property has changed.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicBarPagesStyle.NormalPage">
      <summary>
            Gets the style of page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicBarPagesStyle.SpecialPage">
      <summary>
            Gets the style of special page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageCaptionStyle.ForeColor">
      <summary>
            Gets or sets the foreground color of the page caption.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageCaptionStyle.Font">
      <summary>
            Gets or sets the font of the page caption.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageCaptionStyle.BackgroundColor">
      <summary>
            Gets or sets the background color of the page caption.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageCaptionStyle.ArrowColor">
      <summary>
            Gets or sets the color of the arrow.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageStyle.NormalCaption">
      <summary>
            Gets the style of caption page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageStyle.MouseOverCaption">
      <summary>
            Gets the style of caption page when mouse cursor is over caption of page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageStyle.PressedCaption">
      <summary>
            Gets the pressed style of caption page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageStyle.BackgroundColor">
      <summary>
            Gets the background color of page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.TopicPageStyle.BorderColor">
      <summary>
            Gets the border color of page.
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.C1DockingManager">
      <summary>
            Allows to disable certain docking actions or to hide docking anchors.
            </summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingManager.#ctor">
      <summary>
            Initializes new instance of <see cref="T:C1.Win.C1Command.C1DockingManager" /></summary>
    </member>
    <member name="M:C1.Win.C1Command.C1DockingManager.#ctor(System.ComponentModel.IContainer)">
      <summary>
            Initializes new instance of <see cref="T:C1.Win.C1Command.C1DockingManager" /></summary>
      <param name="container"></param>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingManager.ParentContainer">
      <summary>
            Gets of sets parent Form, associated with the docking manager.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.C1DockingManager.AllowFloat">
      <summary>
            Indicates whether to allow floating.
            </summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingManager.FloatingWindowCreated">
      <summary>
            Notifies that a <see cref="T:C1.Win.C1Command.C1DockingTab" /> or a <see cref="T:C1.Win.C1Command.C1DockingTabPage" /> changed state to floating.
            </summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingManager.Floating">
      <summary>
            Notifies that a <see cref="T:C1.Win.C1Command.C1DockingTab" /> or a <see cref="T:C1.Win.C1Command.C1DockingTabPage" /> is changing state to floating. Can be canceled.
            </summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingManager.QueryAllowDrop">
      <summary>
            Occurs during a docking operation and enables the source to determine whether it can be dropped into the target place.
            </summary>
    </member>
    <member name="E:C1.Win.C1Command.C1DockingManager.QueryEnabledAnchors">
      <summary>
            Occurs during a docking operation and enables the source to determine docking anchors that should be disabled.
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.FloatingWindowCreatedEventArgs">
      <summary>
            Provides data for the <see cref="E:FloatingWindowCreatedEventArgs" /> event.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.FloatingWindowCreatedEventArgs.Form">
      <summary>
            The created Form.
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.FloatingWindowCreatedEventHandler">
      <summary>
            A method template that is used to handle <see cref="E:C1.Win.C1Command.C1DockingManager.FloatingWindowCreated" /> event. 
            </summary>
      <param name="sender">The source of an event. </param>
      <param name="e"></param>
    </member>
    <member name="T:C1.Win.C1Command.FloatingEventArgs">
      <summary>
            Represents the arguments, associated with a <see cref="E:C1.Win.C1Command.C1DockingManager.Floating" /> event. 
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.FloatingEventArgs.DockingTab">
      <summary>
            The floated <see cref="T:C1.Win.C1Command.C1DockingTab" />.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.FloatingEventArgs.DockingTabPage">
      <summary>
            The floated <see cref="T:C1.Win.C1Command.C1DockingTabPage" />.
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.FloatingEventHandler">
      <summary>
            Defines method signature to handle the <see cref="E:C1.Win.C1Command.C1DockingManager.Floating" /> event. 
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.AllowDropEventArgs">
      <summary>
             Represents the arguments, associated with a <see cref="E:C1.Win.C1Command.C1DockingManager.QueryAllowDrop" /> event. 
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.AllowDropEventArgs.SourceDockingTab">
      <summary>
            Gets source docking tab.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.AllowDropEventArgs.SourceDockingTabPage">
      <summary>
            Gets source docking tab page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.AllowDropEventArgs.TagretCommandDock">
      <summary>
            Gets target command dock.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.AllowDropEventArgs.TagretDockingTab">
      <summary>
            Gets target docking tab.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.AllowDropEventArgs.TagretBounds">
      <summary>
            Gets target bounds.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.AllowDropEventArgs.TargetDockStyle">
      <summary>
            Gets target docking style.
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.AllowDropTargetEventHandler">
      <summary>
            Represents the method that will handle the <see cref="E:AllowDropEventArgs" /> event of a <see cref="T:C1DockingManager" />.
            </summary>
      <param name="sender">The source of an event. </param>
      <param name="e">A <see cref="T:AllowDropEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:C1.Win.C1Command.Anchors">
      <summary>
            Represents docking anchors.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.None">
      <summary>
            No anchors is selected.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.Left">
      <summary>
            Left anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.Top">
      <summary>
            Top anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.Right">
      <summary>
            Right anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.Bottom">
      <summary>
            Bottom anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.DiamondCenter">
      <summary>
            Diamond-center anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.DiamondLeft">
      <summary>
            Diamond-left anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.DiamondTop">
      <summary>
            Diamond-top anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.DiamondRight">
      <summary>
            Diamond-right anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.DiamondBottom">
      <summary>
            Diamond-bottom anchor.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.DiamondAll">
      <summary>
            All diamond anchors.
            </summary>
    </member>
    <member name="F:C1.Win.C1Command.Anchors.All">
      <summary>
            All anchors are selected.
            </summary>
    </member>
    <member name="T:C1.Win.C1Command.DockingAnchorsEventArgs">
      <summary>
             Represents the arguments, associated with a <see cref="E:C1.Win.C1Command.C1DockingManager.QueryEnabledAnchors" /> event. 
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.DockingAnchorsEventArgs.Anchors">
      <summary>
            Get or sets allowed anchors.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.DockingAnchorsEventArgs.SourceDockingTab">
      <summary>
            Gets source docking tab.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.DockingAnchorsEventArgs.SourceDockingTabPage">
      <summary>
            Gets source docking tab page.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.DockingAnchorsEventArgs.ScreenPoint">
      <summary>
            Gets the screen point.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.DockingAnchorsEventArgs.CommandDockUnderCursor">
      <summary>
            Returns a <see cref="T:C1.Win.C1Command.C1CommandDock" /> that is under the cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.DockingAnchorsEventArgs.DockingTabUnderCursor">
      <summary>
            Returns a <see cref="T:C1.Win.C1Command.C1DockingTab" /> that is under the cursor.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.C1NavBar.Style">
      <summary>
            Gets the style of C1NavBar.
            </summary>
    </member>
    <member name="M:C1.Win.C1Command.C1NavBar.ResetStyle">
      <summary>
            Resets the Style property to its default value.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarCommonButtonStyle.Font">
      <summary>
            Gets or sets the font used to render text on a stack button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarCommonButtonStyle.Height">
      <summary>
            Gets or sets the height of each stack button within the C1NavBar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarCommonButtonStyle.Normal">
      <summary>
            Represents style of normal button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarCommonButtonStyle.Highlighted">
      <summary>
            Represents style of highlighted button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarCommonButtonStyle.Checked">
      <summary>
            Represents style of checked button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarCommonButtonStyle.Pressed">
      <summary>
            Represents style of pressed button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarHeaderStyle.Font">
      <summary>
            Gets or sets the font used to render text on a stack button.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarHeaderStyle.Height">
      <summary>
            Gets or sets the height of each stack button within the C1NavBar.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarPanelHeaderStyle.Image">
      <summary>
            Gets or sets the image that is displayed on the header of the active panel.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarPanelHeaderStyle.ImageTransparentColor">
      <summary>
            Gets or sets the color to treat as transparent in PanelHeaderImage images.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarSectionHeaderStyle.Indent">
      <summary>
            Gets or sets the space before text caption in a section header.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarStyle.Grip">
      <summary>
            Represents style of grip.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarStyle.Button">
      <summary>
            Represents style of buttons.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarStyle.Panel">
      <summary>
            Represents style of panels.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarStyle.Section">
      <summary>
            Represents style of sections.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarStyle.Separator">
      <summary>
            Represents style of separator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarPanelStyle.Header">
      <summary>
            Represents style of panel header.
             </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarPanelStyle.Border">
      <summary>
            Gets style for the panel border.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarSectionStyle.Header">
      <summary>
            Represents style of section header.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarBorderStyle.Color">
      <summary>
            Represents color of border.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarSeparatorStyle.LightColor">
      <summary>
            Represents light color of separator.
            </summary>
    </member>
    <member name="P:C1.Win.C1Command.NavBarSeparatorStyle.NormalColor">
      <summary>
            Represents normal color of separator.
            </summary>
    </member>
  </members>
</doc>