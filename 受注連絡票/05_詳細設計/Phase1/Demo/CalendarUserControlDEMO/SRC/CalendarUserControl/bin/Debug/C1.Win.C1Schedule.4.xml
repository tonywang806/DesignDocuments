<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>C1.Win.C1Schedule.4</name>
  </assembly>
  <members>
    <member name="T:C1.C1Schedule.C1BindingSource">
      <summary>
        <see cref="T:C1.C1Schedule.C1BindingSource" />はデータソースをカプセル化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.C1BindingSource" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.#ctor(System.Object,System.String)">
      <summary>
        指定したデータソースとデータメンバ値を持つ
        <see cref="T:C1.C1Schedule.C1BindingSource" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="dataSource">
        データソースとして使用する
        <see cref="T:System.Object" />オブジェクト。
      </param>
      <param name="dataMember">データメンバ名。</param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Add(System.Object)">
      <summary>既存の項目を内部リストに追加します。</summary>
      <param name="value">
        追加する
        <see cref="T:System.Object" />。
      </param>
      <returns>新しい要素が無視されている位置。</returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.AddNew">
      <summary>新しい項目を基底のリストに追加します。</summary>
      <returns>リストに追加される項目。</returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.FinishAddNew">
      <summary>保留中の新しい項目をコレクションにコミットします。</summary>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.BeginEdit(System.Object)">
      <summary>指定したオブジェクトの編集処理を開始します。</summary>
      <param name="item">操作対象のオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.EndEdit(System.Object)">
      <summary>保留中の変更を基底のデータソースに適用します。</summary>
      <param name="item">保留中の変更の適用先のオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Clear">
      <summary>リストからすべての要素を削除します。</summary>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Contains(System.Object)">
      <summary>オブジェクトがリスト内の項目であるかどうかを決定します。</summary>
      <param name="value">
        検索する
        <see cref="T:System.Object" />。
      </param>
      <returns>
        <see cref="T:System.Object" />がリスト内で見つかる場合は true、 それ以外の場合は false。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.CopyTo(System.Array,System.Int32)">
      <summary>
        指定したインデックス値から開始して、指定した配列に
        <see cref="P:C1.C1Schedule.C1BindingSource.List" />の内容を コピーします。
      </summary>
      <param name="array">
        <see cref="T:System.Collections.ICollection" />から コピーされる要素の変換先である１次元
        <see cref="T:System.Array" />。
        <see cref="T:System.Array" />ゼロベースのインデックス処理を備えている必要があります。
      </param>
      <param name="index">コピーを開始する位置の０から始まる配列のインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Dispose(System.Boolean)">
      <summary>
        <see cref="T:C1.C1Schedule.C1BindingSource" />で使用されるすべてのリソースを解放します。
      </summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、 そうでない場合は false。</param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>指定したプロパティ記述子を持つ項目のインデックスを検索します。</summary>
      <param name="prop">
        検索対象の
        <see cref="T:System.ComponentModel.PropertyDescriptor" />。
      </param>
      <param name="key">検索するプロパティパラメータの値。</param>
      <returns>
        特定の
        <see cref="T:System.ComponentModel.PropertyDescriptor" />を持つ 項目のインデックス。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Find(System.String,System.Object)">
      <summary>指定したプロパティ名と値を持つリスト内の項目のインデックスを返します。</summary>
      <param name="propertyName">検索対象のプロパティ名。</param>
      <param name="key">検索するプロパティパラメータの値。</param>
      <returns>指定のされたプロパティ名と値を含むリスト内の項目のインデックス。</returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.GetEnumerator">
      <summary>
        <see cref="P:C1.C1Schedule.C1BindingSource.List" />の列挙子を取得します。
      </summary>
      <returns>
        コレクションを通じて繰り返すために使用できる
        <see cref="T:System.Collections.IEnumerable" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>データソースのリスト型の連結可能なプロパティを表す PropertyDescriptor オブジェクトの配列を 取得します。</summary>
      <param name="listAccessors">
        コレクション内で検索する連結可能な
        <see cref="T:System.ComponentModel.PropertyDescriptor" />オブジェクトの配列。これは null に設定できます。
      </param>
      <returns>
        データのバインドに使用される各項目のプロパティを表す
        <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>連結にデータを供給するリストの名前を取得します。</summary>
      <param name="listAccessors">
        リスト名が返される
        <see cref="T:System.ComponentModel.PropertyDescriptor" />オブジェクトの配列。これは null に設定できます。
      </param>
      <returns>リストの名前。</returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.IndexOf(System.Object)">
      <summary>指定したオブジェクトを検索し、リスト全体で最初に見つかった項目の インデックスを返します。</summary>
      <param name="value">
        インデックスを見つける
        <see cref="T:System.Object" />。
      </param>
      <returns>
        リスト内で見つかった場合は
        <i>値</i>のインデックス、それ以外の場合は -1。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Insert(System.Int32,System.Object)">
      <summary>項目をリストの指定したインデックスに挿入します。</summary>
      <param name="index">
        <i>value</i>を挿入する位置の０から始まるインデックス。
      </param>
      <param name="value">
        挿入する
        <see cref="T:System.Object" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.OnAddingNew(System.ComponentModel.AddingNewEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.OnDataMemberChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.OnDataSourceChanged(System.EventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.Remove(System.Object)">
      <summary>指定した項目をリストから削除します。</summary>
      <param name="value">
        削除する
        <see cref="T:System.Object" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.RemoveAt(System.Int32)">
      <summary>リストの指定したインデックスにある項目を削除します。</summary>
      <param name="index">削除する項目の０から始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.ResetBindings(System.Boolean)">
      <summary>
        <see cref="T:C1.C1Schedule.C1BindingSource" />に連結されたコントロールに、 リスト内のすべての項目を再度読み込ませ、表示値を更新させます。
      </summary>
      <param name="metadataChanged">
        メタデータが変更されているかどうかを示す
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1BindingSource.ResetItem(System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.C1BindingSource" />に連結されたコントロールに、 指定したインデックスにある項目を再度読み込ませ、表示値を更新させます。
      </summary>
      <param name="itemIndex">再度読み取る項目の０から始まるインデックス。</param>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.AllowEdit">
      <summary>基底のリスト内の項目が編集できるかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.AllowNew">
      <summary>
        <see cref="M:C1.C1Schedule.C1BindingSource.AddNew" />メソッドを使用して 項目をリストに追加できるかどうかを示す値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.AllowRemove">
      <summary>基底のリストから項目を削除できるかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.Count">
      <summary>基底のリスト内の項目の合計数を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.DataMember">
      <summary>コネクタが現在連結しているデータソース内の特定のリストを 取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.DataSource">
      <summary>コネクタが連結しているデータソースを取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.IsFixedSize">
      <summary>基底のリストが固定サイズを持っているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.IsReadOnly">
      <summary>基底のリストが読み取り専用かどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.IsSynchronized">
      <summary>コレクションへのアクセスを同期する（スレッドセーフ）かどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.Item(System.Int32)">
      <summary>指定したインデックスにあるリスト要素を取得または設定します。</summary>
      <param name="index">取得または設定する要素の０から始まるインデックス。</param>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.List">
      <summary>コネクタの連結先のリストを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.SupportsChangeNotification">
      <summary>データソースが変更通知をサポートするかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.SupportsSearching">
      <summary>データソースが Find メソッドによる検索をサポートするかどうかを示す値を 取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.SyncRoot">
      <summary>基底のリストへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.C1BindingSource.DataKeyNamesInternal">
      <summary></summary>
    </member>
    <member name="E:C1.C1Schedule.C1BindingSource.AddingNew">
      <summary>基底のリストに項目を追加する前に発生します。</summary>
    </member>
    <member name="E:C1.C1Schedule.C1BindingSource.DataMemberChanged">
      <summary>
        <see cref="P:C1.C1Schedule.C1BindingSource.DataMember" />プロパティが変更されたときに発生します。
      </summary>
    </member>
    <member name="E:C1.C1Schedule.C1BindingSource.DataSourceChanged">
      <summary>
        <see cref="P:C1.C1Schedule.C1BindingSource.DataSource" />プロパティが変更されたときに発生します。
      </summary>
    </member>
    <member name="E:C1.C1Schedule.C1BindingSource.ListChanged">
      <summary>基底のリストが変更されるか、リスト内の項目が変更されるときに発生します。</summary>
    </member>
    <member name="T:C1.C1Schedule.NotifyCollectionChangedAction">
      <summary>
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントを発生させるアクションを記述します。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Add">
      <summary>１つ以上の項目がコレクションに追加されました。</summary>
    </member>
    <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Remove">
      <summary>１つ以上の項目がコレクションから削除されました。</summary>
    </member>
    <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Replace">
      <summary>コレクション内で１つ以上の項目が置き換えられました。</summary>
    </member>
    <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Move">
      <summary>コレクション内で１つ以上の項目が移動されました。</summary>
    </member>
    <member name="F:C1.C1Schedule.NotifyCollectionChangedAction.Reset">
      <summary>コレクションの内容が大幅に変更されました。</summary>
    </member>
    <member name="T:C1.C1Schedule.NotifyCollectionChangedEventArgs">
      <summary>
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="changedItems">
        変更された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="changedItem">変更された項目。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="newItems">
        追加された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
      <param name="oldItems">
        削除された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="changedItems">
        変更された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
      <param name="startingIndex">０から始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="changedItem">変更された項目。</param>
      <param name="index">変更された項目の０から始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Object)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="newItem">新しい項目。</param>
      <param name="oldItem">古い項目。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="newItems">
        追加された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
      <param name="oldItems">
        削除された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
      <param name="startingIndex">０から始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="changedItems">
        変更された項目を含む
        <see cref="T:System.Collections.IList" />リスト。
      </param>
      <param name="index">新しいインデックス。</param>
      <param name="oldIndex">古いインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="changedItem">変更された項目。</param>
      <param name="index">新しいインデックス。</param>
      <param name="oldIndex">古いインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.NotifyCollectionChangedEventArgs.#ctor(C1.C1Schedule.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)">
      <summary>
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="action">
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントの原因になった
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedAction" />アクション。
      </param>
      <param name="newItem">新しい項目。</param>
      <param name="oldItem">古い項目。</param>
      <param name="index">削除する項目の０から始まるインデックス。</param>
    </member>
    <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.Action">
      <summary>イベントを発生させたアクションを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.NewItems">
      <summary>変更内に含まれる新しい項目のリストを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.NewStartingIndex">
      <summary>変更が発生したインデックスを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.OldItems">
      <summary>置換、削除、移動の各アクションによって影響を受ける項目のリストを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.NotifyCollectionChangedEventArgs.OldStartingIndex">
      <summary>移動、削除、置換の各アクションが発生したインデックスを取得します。</summary>
    </member>
    <member name="T:C1.C1Schedule.NotifyCollectionChangedEventHandler">
      <summary>
        <see cref="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged" />イベントのイベントハンドラのデリゲート型。
      </summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.C1Schedule.NotifyCollectionChangedEventArgs" />。
      </param>
    </member>
    <member name="T:C1.C1Schedule.INotifyCollectionChanged">
      <summary>動的な変更（項目が追加／削除された、リスト全体が更新されたなど）を リスナーに通知します。</summary>
    </member>
    <member name="E:C1.C1Schedule.INotifyCollectionChanged.CollectionChanged">
      <summary>コレクションが変更されるときに発生します。</summary>
    </member>
    <member name="T:C1.C1Schedule.C1ObservableCollection`1">
      <summary>
        <see cref="T:C1.C1Schedule.C1ObservableCollection`1" />は、 すべての
        <see cref="T:System.Collections.ObjectModel.Collection`1" />派生コレクションの基本クラスです。通知をサポートします。
      </summary>
      <typeparam name="T">コレクション内に保持されるオブジェクトのタイプ。</typeparam>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.C1ObservableCollection`1" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.#ctor(System.Collections.Generic.IList{`0})">
      <summary>
        <see cref="T:C1.C1Schedule.C1ObservableCollection`1" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="list">
        新しいコレクションによってラップされる
        <see cref="T:System.Collections.Generic.IList`1" />リスト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.ClearItems">
      <summary></summary>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.InsertItem(System.Int32,`0)">
      <summary></summary>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.RemoveItem(System.Int32)">
      <summary></summary>
      <param name="index"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.SetItem(System.Int32,`0)">
      <summary></summary>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableCollection`1.OnCollectionChanged(C1.C1Schedule.NotifyCollectionChangedEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="T:C1.C1Schedule.C1ObservableKeyedCollection`2">
      <summary>
        <see cref="T:C1.C1Schedule.C1ObservableCollection`1" />は、 すべての
        <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />派生コレクションの基本クラスです。通知をサポートします。
      </summary>
      <typeparam name="TKey">コレクション内のキーのタイプ。</typeparam>
      <typeparam name="TItem">コレクション内に保持されるオブジェクトのタイプ。</typeparam>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>
        <see cref="T:C1.C1Schedule.C1ObservableKeyedCollection`2" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="comparer">
        キーを比較する際に使用する
        <see cref="T:System.Collections.IEqualityComparer" />一般インタフェースの実装。 または EqualityComparer.Default から取得した、 キーの型のデフォルト等値コンペアラを使用する場合は null 参照（Visual Basic では Nothing）。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.#ctor(System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
      <summary></summary>
      <param name="comparer"></param>
      <param name="dictionaryCreationThreshold"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.ClearItems">
      <summary></summary>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.InsertItem(System.Int32,`1)">
      <summary></summary>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.RemoveItem(System.Int32)">
      <summary></summary>
      <param name="index"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.SetItem(System.Int32,`1)">
      <summary></summary>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="M:C1.C1Schedule.C1ObservableKeyedCollection`2.OnCollectionChanged(C1.C1Schedule.NotifyCollectionChangedEventArgs)">
      <summary></summary>
      <param name="e"></param>
    </member>
    <member name="T:C1.C1Schedule.AppointmentMappingCollection">
      <summary>
        <see cref="T:C1.C1Schedule.BaseObject" />派生オブジェクトのプロパティの 適切なデータフィールドへのマッピングの汎用コレクションを表します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.MappingCollectionBase`1">
      <summary>
        <see cref="T:C1.C1Schedule.BasePersistableObject" />オブジェクトのプロパティを 適切なデータフィールドにマッピングするための汎用コレクションを表します。 プロパティの名前がこのコレクションのキーです。
      </summary>
      <typeparam name="T">
        マッピングするオブジェクトのタイプ。
        <see cref="T:C1.C1Schedule.BasePersistableObject" />クラスの派生であり、 デフォルトのパラメータなしのコンストラクタを持っている必要があります。
      </typeparam>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.MappingCollectionBase`1" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.GetKeyForItem(C1.C1Schedule.MappingInfo)">
      <summary>コレクションのキーであるプロパティ名を返します。</summary>
      <param name="item">
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクト。
      </param>
      <returns>プロパティ名。</returns>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.InsertItem(System.Int32,C1.C1Schedule.MappingInfo)">
      <summary></summary>
      <param name="index"></param>
      <param name="item"></param>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.Dispose">
      <summary>アンマネージリソースの解放（free/release）またはリセットに関連付けられた アプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping">
      <summary>
        <see cref="P:C1.C1Schedule.BasePersistableObject.Id" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="P:C1.C1Schedule.BasePersistableObject.Id" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
      <remarks>
        <see cref="T:C1.C1Schedule.BasePersistableObject" />から派生した各オブジェクトは、 Id プロパティまたは Index プロパティによって識別されます。 データをデータソースから正しく復元させるには、
        <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping" />または
        <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping" />の マッピングを指定する必要があります。リソース、ラベル、連絡先、 分類項目の各データストレージに連結する場合に有効です。C1Schedule は、 これらのオブジェクトの ID またはインデックスのみを AppointmentSorage に保存します。 IdMapping または IndexMapping のマッピングが存在しない場合、C1Schedule は、 各自のデータを指定して初期化されたストレージ内の予定のプロパティを 正しく識別できません。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping">
      <summary>
        <see cref="P:C1.C1Schedule.BasePersistableObject.Index" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="P:C1.C1Schedule.BasePersistableObject.Index" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
      <remarks>
        <see cref="T:C1.C1Schedule.BasePersistableObject" />から派生した各オブジェクトは、 Id プロパティまたは Index プロパティによって識別されます。 データをデータソースから正しく復元させるには、
        <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IdMapping" />または
        <see cref="P:C1.C1Schedule.MappingCollectionBase`1.IndexMapping" />の マッピングを指定する必要があります。リソース、ラベル、連絡先、 分類項目の各データストレージに連結する場合に有効です。C1Schedule は、 これらのオブジェクトの ID またはインデックスのみを AppointmentSorage に保存します。 IdMapping または IndexMapping のマッピングが存在しない場合、C1Schedule は、 各自のデータを指定して初期化されたストレージ内の予定のプロパティを 正しく識別できません。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.MappingCollectionBase`1.Count">
      <summary>
        <see cref="T:C1.C1Schedule.MappingCollectionBase`1" />オブジェクト内に 実際に格納されている要素の数を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.MappingCollectionBase`1.Comparer">
      <summary>コレクション内のキーの等価性の決定に使用する汎用の 等価比較子を取得します。</summary>
    </member>
    <member name="E:C1.C1Schedule.MappingCollectionBase`1.Disposed">
      <summary>コンポーネントの Disposed イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="P:C1.C1Schedule.MappingCollectionBase`1.Site">
      <summary>IComponent に関連付けられた ISite を取得または設定します。</summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentMappingCollection.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentMappingCollection" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.Body">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.Body" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、
        <see cref="P:C1.C1Schedule.AppointmentMappingCollection.Body" />のプロパティにより、
        <see cref="P:C1.C1Schedule.Appointment.Body" />プロパティをデータソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.End">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.End" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="P:C1.C1Schedule.Appointment.End" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.Location">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.Location" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="P:C1.C1Schedule.Appointment.Location" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.Start">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.Start" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="P:C1.C1Schedule.Appointment.Start" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.Subject">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.Subject" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="P:C1.C1Schedule.Appointment.Subject" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.AppointmentProperties">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの他のプロパティを 格納するためのメモリフィールドの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 他のプロパティをデータソース内の適切なフィールドに 連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.OwnerIdMapping">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの Appointment.Owner.Id プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトが DataSource プロパティによってデータソースにバインドされている場合、 このオブジェクトのプロパティでは、
        <see cref="P:C1.C1Schedule.Appointment.Owner" />プロパティをデータソース内の適切なフィールドにバインドできます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.OwnerIndexMapping">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの Appointment.Owner.Index プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトが DataSource プロパティによってデータソースにバインドされている場合、 このオブジェクトのプロパティでは、
        <see cref="P:C1.C1Schedule.Appointment.Owner" />プロパティをデータソース内の適切なフィールドにバインドできます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.BaseObjectMappingCollection`1">
      <summary>
        <see cref="T:C1.C1Schedule.BaseObject" />派生オブジェクトのプロパティを 適切なデータフィールドにマッピングするための汎用コレクションを表します。
      </summary>
      <typeparam name="T">
        マッピングするオブジェクトのタイプ。
        <see cref="T:C1.C1Schedule.BaseObject" />クラスの派生であり、 デフォルトのパラメータなしのコンストラクタを持っている必要があります。
      </typeparam>
    </member>
    <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.BaseObjectMappingCollection`1" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.TextMapping">
      <summary>
        オブジェクトの
        <see cref="P:C1.C1Schedule.BaseObject.Text" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、オブジェクトの
        <see cref="P:C1.C1Schedule.BaseObject.Text" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.ColorMapping">
      <summary>
        オブジェクトの
        <see cref="P:C1.C1Schedule.BaseObject.Color" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、オブジェクトの
        <see cref="P:C1.C1Schedule.BaseObject.Color" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.BaseObjectMappingCollection`1.CaptionMapping">
      <summary>
        オブジェクトの
        <see cref="P:C1.C1Schedule.BaseObject.MenuCaption" />プロパティの
        <see cref="T:C1.C1Schedule.MappingInfo" />オブジェクトを返します。 ストレージオブジェクトがその DataSource プロパティからデータソースに連結されている場合、 このオブジェクトのプロパティにより、オブジェクトの
        <see cref="P:C1.C1Schedule.BaseObject.MenuCaption" />プロパティを データソース内の適切なフィールドに連結できます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.MappingInfo">
      <summary>このクラスは、オブジェクトの単一のプロパティの適切なデータフィールドへの マッピングに関する情報を提供します。</summary>
    </member>
    <member name="P:C1.C1Schedule.MappingInfo.DataType">
      <summary>
        このオブジェクトに連結できるデータフィールドまたはプロパティの型を決定する
        <see cref="T:System.Type" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.MappingInfo.MappingName">
      <summary>
        このオブジェクトに連結されるデータフィールドまたはプロパティの名前を決定する
        <see cref="T:System.String" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.MappingInfo.IsMapped">
      <summary>
        このオブジェクトをデータフィールドまたはプロパティにマップするかどうかを示す
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.MappingInfo.Required">
      <summary>
        このプロパティのマッピングが必須かオプションかを示す
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.MappingInfo.PropertyName">
      <summary>
        マップするプロパティの名前を決定する
        <see cref="T:System.String" />値を 取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.AppointmentStorage">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentStorage" />は、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの ストレージです。これを使用し、データソースに連結して、データソースのフィールドを 予定のプロパティにマッピングできます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.BaseStorage`2">
      <summary>
        <see cref="T:C1.C1Schedule.BaseStorage`2" />は、 C1Schedule オブジェクトモデルのすべてのストレージの汎用の基本コンポーネントです。
        <see cref="T:C1.C1Schedule.BasePersistableObject" />から派生したオブジェクトのストレージを表します。 このコンポーネントは、オブジェクトのコレクションを対象とした操作のメソッドを実装しています。 プログラム的あるいは自動的に、 DataSource および DataMember プロパティに指定されたデータソースからデータを取得して、 コレクションに設定することができます。 データソースフィールドからオブジェクトプロパティへのマッピングを行えます。
      </summary>
      <typeparam name="T">
        ストレージに格納されるオブジェクトのタイプ。
        <see cref="T:C1.C1Schedule.BasePersistableObject" />クラスの派生であり、 デフォルトのパラメータなしのコンストラクタを持っている必要があります。
      </typeparam>
      <typeparam name="TMappingCollection">
        マッピングに 使用されるコレクションのタイプ。
        <see cref="T:C1.C1Schedule.MappingCollectionBase`1" />クラスの派生であり、 デフォルトのパラメータなしのコンストラクタを持っている必要があります。
      </typeparam>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.RefreshData">
      <summary>
        <see cref="T:System.ComponentModel.IBindingList" />インタフェースを 実装していない場合、データソースが変更された後に 毎回このメソッドを呼び出します。 または、データソースクラスの対応するメソッドの代わりに、 BaseStorage{T, TMappingCollection}.Add と BaseStorage{T, TMappingCollection}.Remove を使用します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.ShouldSerializeMappings">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
      <summary>内部リストの変更を Objects コレクションに変換します。</summary>
      <param name="e">イベントデータを含む System.ComponentModel.ListChangedEventArgs オブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.Remove(System.Object)">
      <summary>Objects コレクションからオブジェクトを削除します。</summary>
      <param name="value">
        削除する
        <see cref="T:System.Object" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.OnDataSourceItemSynchronized(C1.C1Schedule.ItemSynchronizedEventArgs)">
      <summary>
        <see cref="E:C1.C1Schedule.BaseStorage`2.DataSourceItemSynchronized" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.IsSynchronizable(C1.C1Schedule.BasePersistableObject)">
      <summary>指定されたコレクション項目を同期する必要があるかどうかを示します。</summary>
      <param name="collectionItem">
        <see cref="T:C1.C1Schedule.BasePersistableObject" />オブジェクト。
      </param>
      <returns>項目を同期する必要がある場合は true、そうでない場合は false。</returns>
    </member>
    <member name="P:C1.C1Schedule.BaseStorage`2.BoundMode">
      <summary>コレクションがデータに連結しているかどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.BaseStorage`2.Mappings">
      <summary>
        現在のコレクションによって維持されたオブジェクトのプロパティをデータソース内の 適切なフィールドに連結するために使用する
        <see cref="T:C1.C1Schedule.MappingCollectionBase`1" />派生オブジェクトを 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.BaseStorage`2.ScheduleStorage">
      <summary>
        所有する
        <see cref="T:C1.C1Schedule.C1ScheduleStorage" />コンポーネントへの参照を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.BaseStorage`2.DataKeyNamesInternal">
      <summary>これは内部使用専用です。</summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentStorage.Appointments">
      <summary>
        予定に関する情報を含む
        <see cref="T:C1.C1Schedule.AppointmentCollection" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.SynchronizationActionEnum">
      <summary>データストレージ内のデータのバージョンを記述します。</summary>
    </member>
    <member name="F:C1.C1Schedule.SynchronizationActionEnum.Added">
      <summary>新しい項目。</summary>
    </member>
    <member name="F:C1.C1Schedule.SynchronizationActionEnum.Deleted">
      <summary>削除した項目。</summary>
    </member>
    <member name="F:C1.C1Schedule.SynchronizationActionEnum.Changed">
      <summary>変更した項目。</summary>
    </member>
    <member name="T:C1.C1Schedule.ItemSynchronizedEventArgs">
      <summary>DataSourceItemSynchronized イベントのデータを提供します。</summary>
    </member>
    <member name="M:C1.C1Schedule.ItemSynchronizedEventArgs.#ctor(C1.C1Schedule.C1BindingSource,C1.C1Schedule.BasePersistableObject,System.Object,C1.C1Schedule.SynchronizationActionEnum)">
      <summary>
        <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="storage">
        変更された
        <see cref="T:C1.C1Schedule.C1BindingSource" />オブジェクトへの参照。
      </param>
      <param name="collectionItem">
        <see cref="T:C1.C1Schedule.BasePersistableObject" />派生オブジェクトへの参照。
      </param>
      <param name="dataSourceItem">データソース内の対応する項目への参照。</param>
      <param name="action">
        <see cref="T:C1.C1Schedule.SynchronizationActionEnum" />値。
      </param>
    </member>
    <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Storage">
      <summary>
        変更された
        <see cref="T:C1.C1Schedule.C1BindingSource" />オブジェクトへの参照を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.DataSourceItem">
      <summary>データソース項目への参照を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.CollectionItem">
      <summary>
        <see cref="T:C1.C1Schedule.BasePersistableObject" />派生オブジェクトへの参照を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.ItemSynchronizedEventArgs.Action">
      <summary>
        <see cref="T:C1.C1Schedule.SynchronizationActionEnum" />値を取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.DataSourceItemSynchronizedEventHandler">
      <summary>DataSourceItemSynchronized イベントのイベントハンドラのデリゲート型。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.C1Schedule.ItemSynchronizedEventArgs" />。
      </param>
    </member>
    <member name="T:C1.C1Schedule.C1ScheduleStorage">
      <summary>
        <see cref="T:C1.C1Schedule.C1ScheduleStorage" />は、C1Schedule コントロールのすべてのデータ処理を実装します。 スケジュールアプリケーションによって要求されるすべてのバックグラウンド処理を行います。 各種スケジュールビューとコレクションをデータに連結するための個別データストレージ （予定、リソース、連絡先、ラベル、ステータス）を格納します。 また、他のスケジュールアプリケーションや形式とのデータの エクスポート／インポートも実装します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Clear">
      <summary>すべての連結されていないストレージをクリアします。連結されていないストレージの場合は、デフォルトセットをロードします。</summary>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.String,C1.C1Schedule.FileFormatEnum)">
      <summary>スケジューラのデータを、指定した形式のファイルにエクスポートします。</summary>
      <param name="path">
        スケジューラのデータのエクスポート先の完全パス （ファイル名と拡張子を含む）を指定する
        <see cref="T:System.String" />。
      </param>
      <param name="format">
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
      <summary>スケジューラのデータを、指定した形式のストリームにエクスポートします。</summary>
      <param name="stream">
        スケジューラのデータのエクスポート先のストリームを指定する
        <see cref="T:System.IO.Stream" />オブジェクト。
      </param>
      <param name="format">
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.String,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
      <summary>予定のデータを指定された形式のファイルにエクスポートします。</summary>
      <param name="path">
        エクスポート先のフルパス （ファイル名と拡張子を含む）を含む
        <see cref="T:System.String" />。
      </param>
      <param name="appointments">
        エクスポートする
        <see cref="T:System.Collections.Generic.IList`1" />。
      </param>
      <param name="format">
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Export(System.IO.Stream,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.FileFormatEnum)">
      <summary>予定のデータを指定された形式のストリームにエクスポートします。</summary>
      <param name="stream">
        予定のデータのエクスポート先のストリームを指定する
        <see cref="T:System.IO.Stream" />オブジェクト。
      </param>
      <param name="appointments">
        エクスポートする
        <see cref="T:System.Collections.Generic.IList`1" />。
      </param>
      <param name="format">
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.String,C1.C1Schedule.FileFormatEnum)">
      <summary>指定した形式のファイルからのデータをスケジューラにインポートします。</summary>
      <param name="path">
        スケジューラにインポートするデータを含むファイルへの完全パス （ファイル名と拡張子を含む）を指定する
        <see cref="T:System.String" />値。
      </param>
      <param name="format">
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Import(System.IO.Stream,C1.C1Schedule.FileFormatEnum)">
      <summary>指定した形式のデータのストリームから、スケジューラのデータをインポートします。</summary>
      <param name="stream">
        スケジューラへのインポートデータを含むストリームを指定する
        <see cref="T:System.IO.Stream" />オブジェクト。
      </param>
      <param name="format">
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1ScheduleStorage.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage">
      <summary>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.OwnerStorage">
      <summary>
        予定オーナーとして使用される可能性のある連絡先を保持するために使用される
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.ContactStorage" />オブジェクト。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.Appointment.Owner" />プロパティは、このストレージ内に存在する
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのみを受け付けます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage">
      <summary>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.AppointmentStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage">
      <summary>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.LabelStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage">
      <summary>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.ResourceStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage">
      <summary>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.StatusStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage">
      <summary>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.CategoryStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.Reminders">
      <summary>
        <see cref="T:C1.C1Schedule.ReminderCollection" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.C1ScheduleStorage.Actions">
      <summary>
        <see cref="T:C1.C1Schedule.ActionCollection" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.CategoryStorage">
      <summary>
        <see cref="T:C1.C1Schedule.CategoryStorage" />は、
        <see cref="T:C1.C1Schedule.Category" />オブジェクトのストレージです。 これを使用し、データソースに連結して、データソースのフィールドを 分類項目のプロパティにマップできます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CategoryStorage.Categories">
      <summary>
        分類項目に関する情報を含む
        <see cref="T:C1.C1Schedule.CategoryCollection" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.ContactStorage">
      <summary>
        <see cref="T:C1.C1Schedule.ContactStorage" />は、
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのストレージです。 これを使用し、データソースに連結して、データソースのフィールドを 連絡先プロパティにマッピングできます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.ContactStorage.Contacts">
      <summary>
        連絡先に関する情報を含む
        <see cref="T:C1.C1Schedule.ContactCollection" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.LabelStorage">
      <summary>
        <see cref="T:C1.C1Schedule.LabelStorage" />は、
        <see cref="T:C1.C1Schedule.Label" />オブジェクトのストレージです。 これを使用し、データソースに連結して、データソースのフィールドを ラベルのプロパティにマップできます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.LabelStorage.Labels">
      <summary>
        ラベルに関する情報を含む
        <see cref="T:C1.C1Schedule.LabelCollection" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.ResourceStorage">
      <summary>
        <see cref="T:C1.C1Schedule.ResourceStorage" />は、
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトのストレージです。 これを使用し、データソースに連結して、データソースのフィールドを リソースのプロパティにマップできます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.ResourceStorage.Resources">
      <summary>
        リソースに関する情報を含む
        <see cref="T:C1.C1Schedule.ResourceCollection" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.StatusStorage">
      <summary>
        <see cref="T:C1.C1Schedule.StatusStorage" />は、
        <see cref="T:C1.C1Schedule.Status" />オブジェクトのストレージです。 これを使用し、データソースに連結して、データソースのフィールドを ステータスのプロパティにマップできます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.StatusStorage.Statuses">
      <summary>
        ステータスに関する情報を含む
        <see cref="T:C1.C1Schedule.StatusCollection" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.FileFormatEnum">
      <summary>エクスポートまたはインポートするファイルの形式を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.FileFormatEnum.XML">
      <summary>XML 形式（ComponentOne 独自の形式）。</summary>
    </member>
    <member name="F:C1.C1Schedule.FileFormatEnum.iCal">
      <summary>RFC 244 に準拠した iCal 形式。 形式仕様は、 http://tools.ietf.org/rfc/rfc2445.txt にあります。</summary>
    </member>
    <member name="F:C1.C1Schedule.FileFormatEnum.Binary">
      <summary>バイナリ形式。</summary>
    </member>
    <member name="T:C1.C1Schedule.TimeZoneInfo">
      <summary>
        <see cref="T:C1.C1Schedule.TimeZoneInfo" />クラスは、タイムゾーンのプロパティを決定します。 夏時間を考慮して、utc 時間とローカル時間との変換に使用することができます。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.TimeZoneInfo.ToString">
      <summary>このタイムゾーンのインスタンスの表示名を取得します。</summary>
      <returns>タイムゾーンの標準名</returns>
    </member>
    <member name="M:C1.C1Schedule.TimeZoneInfo.GetTimeZone(System.String)">
      <summary>指定された名前を持つタイムゾーンの TimeZoneInfo インスタンスを返します。</summary>
      <remarks>このメソッドは、標準時、夏時間、表示名で検索します。</remarks>
      <param name="name">検索するタイムゾーンの名前</param>
      <returns>見つかった場合はその TimeZoneInfo のインスタンス、見つからなければ null。</returns>
    </member>
    <member name="M:C1.C1Schedule.TimeZoneInfo.ToLocalTime(System.DateTime)">
      <summary>UTC 時間の値をこのタイムゾーンのローカル時間に変換します。</summary>
      <param name="utc">変換する UTC 時間。</param>
      <returns>ローカル時間。</returns>
    </member>
    <member name="M:C1.C1Schedule.TimeZoneInfo.ToUniversalTime(System.DateTime)">
      <summary>ローカル時間の値を UTC 時間に変換します。 夏時間の境界において、解釈が異なる可能性があることに注意してください。</summary>
      <param name="local">変換するローカル時。</param>
      <returns>UTC 時間。</returns>
      <exception cref="T:System.NotSupportedException">プラットフォームサポートがないためメソッドが失敗した場合にスローされます。</exception>
    </member>
    <member name="M:C1.C1Schedule.TimeZoneInfo.CopyFrom(C1.C1Schedule.TimeZoneInfo)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.TimeZoneInfo" />オブジェクトから現在のインスタンスにタイムゾーン情報をコピーします。
      </summary>
      <param name="info"></param>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.TimeZones">
      <summary>ローカルのシステムに定義されているすべてのタイムゾーンの一覧を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.TimeZoneNames">
      <summary>ローカルのシステムでサポートされているタイムジョンの表示名の文字列配列を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.CurrentTimeZone">
      <summary>現在のタイムゾーンの情報を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.StandardName">
      <summary>標準時（夏時間以外 など）のタイムゾーンの名前です。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightName">
      <summary>夏時間のタイムゾーンの名前です。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.DisplayName">
      <summary>タイムゾーンの表示名（例："(GMT-05:00) 東部標準時 (米国およびカナダ)"）です。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.StandardOffset">
      <summary>TimeSpan として UTC から標準時オフセットを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightOffset">
      <summary>TimeSpan として UTC から夏時間オフセットを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.StandardBias">
      <summary>UTC とローカル時間との差を分単位で取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.TimeZoneInfo.DaylightBias">
      <summary>UTC とローカル時間（夏時間）との差を分単位で取得します。</summary>
    </member>
    <member name="T:C1.C1Schedule.ActionTypeEnum">
      <summary>
        <see cref="T:C1.C1Schedule.ActionTypeEnum" />は、アクションのタイプを決定します。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.ActionTypeEnum.ExecuteApplication">
      <summary>指定したパラメータを持つローカルのアプリケーションを実行します。</summary>
    </member>
    <member name="F:C1.C1Schedule.ActionTypeEnum.NavigateToUrl">
      <summary>デフォルトブラウザで指定したターゲットを開きます。</summary>
    </member>
    <member name="T:C1.C1Schedule.Action">
      <summary>
        現在のシステム時刻が関連付けられた
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 開始に達したときに実行するアクションを表します。 現在は実装されていません。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Action.#ctor(C1.C1Schedule.Appointment)">
      <summary>
        <see cref="T:C1.C1Schedule.Action" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="owner">
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Action.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.Action" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Action.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="P:C1.C1Schedule.Action.ParentAppointment">
      <summary>
        所有する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Action.Command">
      <summary>アクションのコマンド文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Action.Parameters">
      <summary>アクションを呼び出すときに使用するパラメータを取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Action.Enabled">
      <summary>
        アクションが有効かどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Action.Type">
      <summary>
        発生するアクションのタイプを決定する
        <see cref="T:C1.C1Schedule.ActionTypeEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.ActionCollection">
      <summary>
        <see cref="T:C1.C1Schedule.ActionCollection" />は、すべてのペンディングとなっている項目のアラームを表すすべての
        <see cref="T:C1.C1Schedule.Action" />オブジェクトのコレクションです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.ActionCollection.InsertItem(System.Int32,C1.C1Schedule.Action)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">項目のゼロから始まるインデックス。</param>
      <param name="item">
        挿入する
        <see cref="T:C1.C1Schedule.Action" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.ActionCollection.RemoveItem(System.Int32)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">削除する項目のゼロから始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.ActionCollection.ClearItems">
      <summary>デフォルトの動作をオーバーライドします。</summary>
    </member>
    <member name="M:C1.C1Schedule.ActionCollection.Dispose">
      <summary>すべてのアンマネージリソースを解放します。</summary>
    </member>
    <member name="T:C1.C1Schedule.RecurrenceStateEnum">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの型を決定します。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring">
      <summary>標準（不定期）の予定を表します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceStateEnum.Master">
      <summary>他の定期的な予定のパターンとなる予定を表します。 定期的な予定のパターンは、 Appointment.Recurrence プロパティから指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceStateEnum.Occurrence">
      <summary>Appointment.Recurrence プロパティから指定される予定パターンを持つ 定期的な予定の１つを表します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceStateEnum.Exception">
      <summary>変更されて定期シリーズのパターンを満たさなくなった 定期的な予定を表します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceStateEnum.Removed">
      <summary>削除されて定期シリーズのパターンを満たさなくなった 定期的な予定を表します。</summary>
    </member>
    <member name="T:C1.C1Schedule.ImportanceEnum">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの重要度を決定します。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.ImportanceEnum.Low">
      <summary>低</summary>
    </member>
    <member name="F:C1.C1Schedule.ImportanceEnum.Normal">
      <summary>標準</summary>
    </member>
    <member name="F:C1.C1Schedule.ImportanceEnum.High">
      <summary>高</summary>
    </member>
    <member name="T:C1.C1Schedule.SensitivityEnum">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの秘密度を決定します。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.SensitivityEnum.Confidential">
      <summary>社外秘</summary>
    </member>
    <member name="F:C1.C1Schedule.SensitivityEnum.Normal">
      <summary>標準</summary>
    </member>
    <member name="F:C1.C1Schedule.SensitivityEnum.Personal">
      <summary>個人用</summary>
    </member>
    <member name="F:C1.C1Schedule.SensitivityEnum.Private">
      <summary>プライベート</summary>
    </member>
    <member name="T:C1.C1Schedule.Appointment">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトは、C1Schedule における会議、 １回限りの予定、または定期的な予定／会議です。
        <see cref="T:C1.C1Schedule.Appointment" />クラスは、会議詳細 （場所、時刻など）を指定するプロパティを格納します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.BasePersistableObject">
      <summary>
        <see cref="T:C1.C1Schedule.BasePersistableObject" />は、永続的なオブジェクトの基本クラスです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.OnPropertyChanged(System.String)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="propertyName">プロパティ名。</param>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>シリアル化のときに呼び出されます。</summary>
      <param name="info">
        データを読み込ませる
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">シリアル化の ソースまたは出力先に関するコンテキスト情報。</param>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.BeginEdit">
      <summary>オブジェクトを編集モードにします。</summary>
      <remarks>
        このオブジェクトが編集モードにある場合、このオブジェクトのプロパティの変更時にデータソースからの 対応する項目は更新されません。
        <see cref="M:C1.C1Schedule.BasePersistableObject.EndEdit" />メソッドが呼び出されると、 データ同期が実行されます。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit">
      <summary>
        <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit" />メソッドによって起動した編集モードを終了し、 対応するデータソース項目を更新します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.EndEdit(System.Boolean)">
      <summary></summary>
      <param name="canRaiseChangeNotification"></param>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.CancelEdit">
      <summary>
        最後の
        <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit" />呼び出し以降の変更を破棄します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlNode)">
      <summary>
        指定した
        <see cref="T:System.Xml.XmlNode" />からオブジェクトをロードします。
      </summary>
      <param name="node">
        オブジェクトデータを含む
        <see cref="T:System.Xml.XmlNode" />。
      </param>
      <returns>オブジェクトが変更された場合、true を返します。</returns>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.Xml.XmlReader)">
      <summary>
        指定された
        <see cref="T:System.Xml.XmlReader" />からオブジェクトをロードします。
      </summary>
      <param name="reader">
        オブジェクトデータを含む
        <see cref="T:System.Xml.XmlReader" />。
      </param>
      <returns>オブジェクトが変更されている場合は true を返します。</returns>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.Xml.XmlWriter)">
      <summary>
        指定した
        <see cref="T:System.Xml.XmlWriter" />にオブジェクトを保存します。
      </summary>
      <param name="writer">
        オブジェクトデータを受け取る
        <see cref="T:System.Xml.XmlWriter" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.FromXml(System.IO.Stream)">
      <summary>
        指定した
        <see cref="T:System.IO.Stream" />からオブジェクトをロードします。
      </summary>
      <param name="stream">
        オブジェクトデータを含む
        <see cref="T:System.IO.Stream" />。
      </param>
      <returns>オブジェクトが変更された場合、true を返します。</returns>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.ToXml(System.IO.Stream)">
      <summary>
        指定した
        <see cref="T:System.IO.Stream" />にオブジェクトを保存します。
      </summary>
      <param name="stream">
        オブジェクトデータを含む
        <see cref="T:System.IO.Stream" />。
      </param>
    </member>
    <member name="P:C1.C1Schedule.BasePersistableObject.Key">
      <summary>
        <see cref="T:C1.C1Schedule.BasePersistableObject" />のキーを表すオブジェクトの配列を取得します。
      </summary>
      <remarks>
        <para>
          現在のバージョンでは、配列には常に１つのオブジェクトが含まれます。 それは、実際にこのデータをバインドするために使用される、
          <see cref="T:System.Int32" />型もしくは
          <see cref="T:System.Guid" />型の値となります。 例えば、AppointmentStorage をデータベースと連結し、IndexMapping を設定した場合、このプロパティは
          <see cref="T:System.Int32" />型の値を返します。 IdMapping を設定した場合、このプロパティは
          <see cref="T:System.Guid" />型の値を返します。
        </para>
        <para>将来のバージョンでは、複合的なキーによる処理が実装される予定です。それにより、このプロパティはキーを構成するオブジェクトの配列を返すようになります。</para>
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.BasePersistableObject.IsEdit">
      <summary>
        オブジェクトが
        <see cref="M:C1.C1Schedule.BasePersistableObject.BeginEdit" />メソッドによって 開始された編集モードにあるかどうかを示します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.Int32)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Appointment" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        予定キーとして使用する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.Guid)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Appointment" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        予定キーとして使用する
        <see cref="T:System.Guid" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />クラスの新しいインスタンスを初期化します。
      </summary>
      <remarks>デフォルトのプロパティを持つ予定を作成します。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime)">
      <summary>
        指定したパラメータを持つ
        <see cref="T:C1.C1Schedule.Appointment" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        予定の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan)">
      <summary>
        指定したパラメータを持つ
        <see cref="T:C1.C1Schedule.Appointment" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="duration">
        予定の期間を指定する
        <see cref="T:System.TimeSpan" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.DateTime,System.String)">
      <summary>
        指定したパラメータを持つ
        <see cref="T:C1.C1Schedule.Appointment" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        予定の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="subject">
        予定の件名を含む
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.DateTime,System.TimeSpan,System.String)">
      <summary>
        指定したパラメータを持つ
        <see cref="T:C1.C1Schedule.Appointment" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="duration">
        予定の期間を指定する
        <see cref="T:System.TimeSpan" />値。
      </param>
      <param name="subject">
        予定の件名を含む
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.BeginEdit">
      <summary>
        <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)" />メソッドが呼び出されるまで、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトが更新されないようにします。
      </summary>
      <remarks>
        <see cref="M:C1.C1Schedule.Appointment.BeginEdit" />と
        <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)" />メソッドは、 バッチ変更を実装するために設計されています。 これにより、複数の設定を一度に変更する場合に変更通知が生成されないようにできます。 これを行うには、これらのメソッドへの呼び出し内にプロパティを変更するコードを入れます。
        <see cref="M:C1.C1Schedule.Appointment.BeginEdit" />への各呼び出しは、
        <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)" />への呼び出しとペアにする必要があります。 例外が発生する場合でも
        <see cref="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)" />が常に呼び出されるようにするには、 try...finally ステートメント内にこれらのメソッドへの任意の呼び出しをラップします。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.Appointment.EndEdit(System.Boolean)">
      <summary>
        <see cref="M:C1.C1Schedule.Appointment.BeginEdit" />メソッドの呼び出しの後で、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのロックを解除し、即座に更新します。
      </summary>
      <param name="canRaiseChangeNotification">
        変更を適用するときに 変更通知を生成できるかどうかを決定する
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.IsGroupMember(C1.C1Schedule.BaseObject,System.String)">
      <summary>
        現在の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトが groupOwner、groupBy の各パラメータによって指定されたグループのメンバである場合は true を返します。 そうでない場合は false を返します。
      </summary>
      <param name="groupOwner">
        予定グループを決定する
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクト。
      </param>
      <param name="groupBy">
        グループ化のタイプを決定する
        <see cref="T:System.String" />値。
      </param>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.ClearRecurrencePattern">
      <summary>
        定期パターンの設定を削除し、予定の
        <see cref="F:C1.C1Schedule.RecurrenceStateEnum.NotRecurring" />状態に戻します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Appointment.GetRecurrencePattern">
      <summary>
        予定の定期属性を表す
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトを 返します。 既存の定期パターンが存在しない場合、新しい空の
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトが 返されます。
      </summary>
      <returns>
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.Copy">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのコピーを作成します。
      </summary>
      <returns>
        新しい
        <see cref="T:C1.C1Schedule.Appointment" />インスタンス。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.CopyFrom(C1.C1Schedule.Appointment,System.Boolean)">
      <summary>
        指定した
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのプロパティをこのオブジェクトにコピーします。
      </summary>
      <param name="app">
        コピーする
        <see cref="T:C1.C1Schedule.Appointment" />インスタンス。
      </param>
      <param name="includeKeys">内部キーをコピーするかどうかを指定します。</param>
      <remarks>
        <para>
          指定した
          <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 完全なコピーを受け取る場合は、includeKeys を true に設定します。
        </para>
        <para>
          説明の
          <see cref="T:C1.C1Schedule.Appointment" />プロパティのみを他の
          <see cref="T:C1.C1Schedule.Appointment" />オブジェクトにコピーする （ある日の予定を別の日にコピーするときなど）場合は、includeKeys を false に設定します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.Appointment.CopyFrom(C1.C1Schedule.Appointment,System.Boolean,System.Boolean)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのプロパティをこのインスタンスにコピーします。
      </summary>
      <param name="app">
        コピーする
        <see cref="T:C1.C1Schedule.Appointment" />インスタンス。
      </param>
      <param name="includeKeys">内部キーをコピーするかどうかを指定します。</param>
      <param name="includeRecurrenceInformation">繰り返し情報をコピーするかどうかを指定します（ある場合）。</param>
      <remarks>
        <para>
          指定した
          <see cref="T:C1.C1Schedule.Appointment" />の完全なコピーが必要な場合は、 includeKeys を true に設定します。
        </para>
        <para>
          記述的な
          <see cref="T:C1.C1Schedule.Appointment" />プロパティのみを他の
          <see cref="T:C1.C1Schedule.Appointment" />オブジェクトにコピーする場合（ある日の予定を別の日に複製する場合など）は、 includeKeys を false に設定します。
        </para>
        <para>includeRecurrenceInformation を false に設定すると、 RecurrenceState、ParentRecurrence、および RecurrencePattern 情報を除外します。</para>
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.Appointment.Delete">
      <summary>
        予定を削除し、それを所有する
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクションから削除します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Appointment.GetTimeTillEvent">
      <summary>予定が開始するまでの期間を返します。負の値は、予 定が期限切れであることを意味します。</summary>
      <returns>予定が開始するまでの時間。 負の値は予定が終了していることを意味します。</returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.SaveAs(System.String,C1.C1Schedule.FileFormatEnum)">
      <summary>指定したファイル形式で、指定したパスに予定を保存します。</summary>
      <param name="path">必須の文字列。項目の保存先のパス。</param>
      <param name="fileFormat">
        保存するファイル形式を示す
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlNode)">
      <summary>
        <see cref="T:System.Xml.XmlNode" />から予定を再構築します。
      </summary>
      <param name="node">
        <see cref="T:C1.C1Schedule.Appointment" />データを含む
        <see cref="T:System.Xml.XmlNode" />。
      </param>
      <returns>予定が変更された場合は true。</returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.FromXml(System.Xml.XmlReader)">
      <summary>
        <see cref="T:System.Xml.XmlReader" />から予定を再構築します。
      </summary>
      <param name="reader">
        <see cref="T:C1.C1Schedule.Appointment" />データを含む
        <see cref="T:System.Xml.XmlReader" />。
      </param>
      <returns>予定が変更されている場合は true。</returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.ToXml(System.Xml.XmlWriter)">
      <summary>予定の XML エンコードを作成します。</summary>
      <param name="writer">
        オブジェクトデータを受け取る
        <see cref="T:System.Xml.XmlWriter" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.GetAppointmentProperties">
      <summary>予定のプロパティの XML エンコードを返します。</summary>
      <remarks>このプロパティを使用して、予定のプロパティのシリアル化された値と同じ文字列を取得します。 これは AppointmentProperties のマッピングを設定するときに取得する文字列です。</remarks>
      <returns>
        予定のプロパティの XML エンコードを含む
        <see cref="T:System.String" />値。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.SetAppointmentProperties(System.String)">
      <summary>指定された文字列から予定のプロパティを再構築します。</summary>
      <param name="source">
        予定のプロパティの XML エンコードを含む
        <see cref="T:System.String" />値。
      </param>
      <returns>予定が変更されている場合は true。</returns>
    </member>
    <member name="M:C1.C1Schedule.Appointment.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="M:C1.C1Schedule.Appointment.CancelEdit">
      <summary>
        前回の
        <see cref="M:C1.C1Schedule.Appointment.BeginEdit" />呼び出し以降の変更を破棄します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Appointment.OnPropertyChanged(System.String)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="propertyName">プロパティ名。</param>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ParentCollection">
      <summary>
        親の
        <see cref="T:C1.C1Schedule.AppointmentCollection" />オブジェクトへの参照を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Action">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.Action" />オブジェクトを取得します。 このプロパティがはじめて要求されると、新しい
        <see cref="P:C1.C1Schedule.Appointment.Action" />オブジェクトが作成され、
        <see cref="P:C1.C1Schedule.Appointment.Action" />プロパティに割り当てられます。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.Appointment.Action" />オブジェクトには、実行するアクションのタイプ、 およびアクションに渡すコマンドとパラメータに関する情報が含まれます。 Action オブジェクトが有効である場合、所有する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 開始日時が発生したときにアクションが呼び出されます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Importance">
      <summary>
        予定の相対的な重要度を示す
        <see cref="T:C1.C1Schedule.ImportanceEnum" />値を 取得または設定します。 デフォルト値は
        <see cref="F:C1.C1Schedule.ImportanceEnum.Normal" />です。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.AllDayEvent">
      <summary>
        現在の予定が終日の予定であるかどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Tag">
      <summary>このオブジェクトに関連付けられたカスタム情報を取得または設定します。</summary>
      <remarks>このプロパティは、オブジェクトの有効期間の間だけ有効です。</remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.CustomData">
      <summary>このオブジェクトに関連付けられているカスタムテキストを取得または設定します。</summary>
      <remarks>このプロパティは、予定の他のプロパティと共にシリアル化されます。 スケジューラによって使用されることはありません。データを予定に関連付けて保持するために使用します。 このプロパティは、バイナリ形式でシリアル化され、AppointmentProperties のマッピングが設定されている場合は、 マッピング元のデータソースに保存されます。</remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.AppointmentType">
      <summary>このオブジェクトに関連付けられているカスタムテキスト値を取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、予定の他のプロパティと共にシリアル化されます。 このプロパティを使用して、カスタムコンテンツを表示するか、またはプロパティ値に応じて異なるアクションを実行できます。 このプロパティは、バイナリ形式でシリアル化され、AppointmentProperties のマッピングが設定されている場合は、 マッピング元のデータソースに保存されます。</para>
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Saved">
      <summary>
        最後の保存以降に予定が変更されなかったかどうかを示す
        <see cref="T:System.Boolean" />値を 取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Sensitivity">
      <summary>
        予定の秘密度レベルを示す
        <see cref="T:C1.C1Schedule.SensitivityEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Private">
      <summary>
        カレンダーの所有者が
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを プライベートにするかどうかを決定する
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Subject">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの件名を表す
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Body">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの本文を表す
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Conflicts">
      <summary>
        この特定の予定と競合する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのリストを表す
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.AutoResolvedWinner">
      <summary>
        項目が自動的な競合解決の勝者であるかどうかを決定する
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
      <remarks>
        false の値は必ずしも、項目が自動的な競合解決の敗者であることは 示していません。この項目は別の項目と競合しているはずです。 項目は、その Conflicts.Count プロパティが 0 より大きく、 その
        <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner" />プロパティが true である場合、自動的な競合解決の勝者となります。 反対に、項目は、競合状態にあり、 その
        <see cref="P:C1.C1Schedule.Appointment.AutoResolvedWinner" />プロパティが false である場合、自動的な競合解決の 敗者となります。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Start">
      <summary>
        予定の開始日時を決定する
        <see cref="T:System.DateTime" />値を 取得または設定します。
      </summary>
      <remarks>
        <para>
          <see cref="P:C1.C1Schedule.Appointment.AllDayEvent" />プロパティが true に設定されている場合、 予定の開始日付は
          <see cref="P:C1.C1Schedule.Appointment.Start" />の
          <see cref="P:System.DateTime.Date" />となり、開始時刻は 0:00 となります。
        </para>
        <para>
          このプロパティを設定するとき、その時刻が 0:00 と等しくない場合、
          <see cref="P:C1.C1Schedule.Appointment.AllDayEvent" />プロパティが false に設定されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.End">
      <summary>
        予定の終了日時を決定する
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
      <remarks>
        <para>
          <see cref="P:C1.C1Schedule.Appointment.End" />プロパティは通常、
          <see cref="P:C1.C1Schedule.Appointment.Start" />と
          <see cref="P:C1.C1Schedule.Appointment.Duration" />プロパティで指定され、 常に
          <see cref="P:C1.C1Schedule.Appointment.End" />=
          <see cref="P:C1.C1Schedule.Appointment.Start" />+
          <see cref="P:C1.C1Schedule.Appointment.Duration" />として計算されます。
          <see cref="P:C1.C1Schedule.Appointment.End" />プロパティを設定する場合、
          <see cref="P:C1.C1Schedule.Appointment.Start" />プロパティはその値を保持し、
          <see cref="P:C1.C1Schedule.Appointment.Duration" />は
          <see cref="P:C1.C1Schedule.Appointment.End" />プロパティの新しい値に従って変更されます。 新しい
          <see cref="P:C1.C1Schedule.Appointment.End" />プロパティの値が
          <see cref="P:C1.C1Schedule.Appointment.Start" />プロパティの値より小さい場合、例外が発生します。
        </para>
        <para>
          このプロパティを設定するとき、その時刻が 0:00 と等しくないか、 値が
          <see cref="P:C1.C1Schedule.Appointment.Start" />プロパティの値と等しい場合、
          <see cref="P:C1.C1Schedule.Appointment.AllDayEvent" />プロパティが false に設定されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.IsOneDay">
      <summary>
        単一の日の予定であるか、複数の日を共有するかを示す
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Duration">
      <summary>
        予定の期間を示す
        <see cref="T:System.TimeSpan" />値を 取得または設定します。
      </summary>
      <remarks>
        このプロパティを設定するとき、その値が全日数と等しくない場合、
        <see cref="P:C1.C1Schedule.Appointment.AllDayEvent" />プロパティが false に設定されます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Location">
      <summary>
        予定の場所を指定する
        <see cref="T:System.String" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Reminder">
      <summary>
        予定に関連付けられた
        <see cref="P:C1.C1Schedule.Appointment.Reminder" />オブジェクトを取得します。 予定をアラームに関連付けるには、その
        <see cref="P:C1.C1Schedule.Appointment.ReminderSet" />プロパティを true に設定します。このプロパティが true に設定されると、 新しい
        <see cref="P:C1.C1Schedule.Appointment.Reminder" />オブジェクトが作成され、
        <see cref="P:C1.C1Schedule.Appointment.Reminder" />プロパティに割り当てられます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ReminderSet">
      <summary>
        アラームが予定に関連付けられているかどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。 このプロパティが true に設定されると、新しい
        <see cref="P:C1.C1Schedule.Appointment.Reminder" />オブジェクトが作成され、
        <see cref="P:C1.C1Schedule.Appointment.Reminder" />プロパティに割り当てられます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart">
      <summary>
        予定の開始までにアラームが発生する時間間隔を示す
        <see cref="T:System.TimeSpan" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ReminderOverrideDefault">
      <summary>
        関連付けられた
        <see cref="P:C1.C1Schedule.Appointment.Reminder" />オブジェクトが デフォルト以外の設定を持っているかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。 アラームが予定のデフォルトのアラーム動作をオーバーライドする場合は true。
        <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound" />と
        <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile" />プロパティを有効にするには、
        <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault" />プロパティを 設定する必要があります。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ReminderPlaySound">
      <summary>
        この予定またはタスクにアラームが発生する場合にアラームがサウンドを再生するかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。
        <see cref="P:C1.C1Schedule.Appointment.ReminderSoundFile" />プロパティを有効にするには、
        <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound" />プロパティを設定する必要があります。 このプロパティは、
        <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault" />プロパティが true に設定されている場合のみ有効です。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ReminderSoundFile">
      <summary>
        予定にアラームが発生するときに再生するサウンドファイルのパスとファイル名を示す
        <see cref="T:System.String" />値を取得または設定します。このプロパティは、
        <see cref="P:C1.C1Schedule.Appointment.ReminderOverrideDefault" />と
        <see cref="P:C1.C1Schedule.Appointment.ReminderPlaySound" />プロパティが true に設定されている場合のみ有効です。
      </summary>
      <remarks>
        デフォルトのサウンドは、
        <see cref="P:System.Media.SystemSounds.Exclamation" />です。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.IsRecurring">
      <summary>
        予定が定期的かどうかを示す
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.ParentRecurrence">
      <summary>
        この
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの定期パターン基準を定義する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを取得します。 この予定が定期パターンのメンバでないか、それ自体がルートの予定でない場合、 null が返されます。
      </summary>
      <remarks>
        予定は、定期的（
        <see cref="P:C1.C1Schedule.Appointment.IsRecurring" />プロパティを参照）である場合、 特定のパターンの予定によって開始され定義されたシリーズの１回の発生項目を表します。
        <see cref="P:C1.C1Schedule.Appointment.ParentRecurrence" />プロパティを使用し、 現在の予定のパターンを取得します。パターンの予定は、 その
        <see cref="P:C1.C1Schedule.Appointment.RecurrenceState" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceStateEnum.Master" />値に設定されていることで 認識できます。パターンの予定によって定義された定期パターンの情報は、 予定の
        <see cref="T:C1.C1Schedule.RecurrencePattern" />プロパティから アクセスできます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.RecurrenceState">
      <summary>
        予定の定期パターン状態を示す
        <see cref="T:C1.C1Schedule.RecurrenceStateEnum" />値を 取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Label">
      <summary>
        この予定に関連付けられた
        <see cref="P:C1.C1Schedule.Appointment.Label" />オブジェクトを取得または設定します。
      </summary>
      <remarks>予定にラベルを関連付けると、予定を効果的に グループ化できます。</remarks>
      <remarks>予定にラベルを関連付けると、予定を効果的に グループ化できます。</remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Resources">
      <summary>
        この予定の
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトのセットを保持する
        <see cref="T:C1.C1Schedule.ResourceList" />オブジェクトを取得します。 １つの予定を複数のリソースに関連付けることができます。
      </summary>
      <remarks>
        このプロパティは、C1ScheduleStorage.ResourceStorage ストレージ内に存在する
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトのみを受け付けます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Links">
      <summary>
        この予定の
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのセットを保持する
        <see cref="T:C1.C1Schedule.ContactList" />オブジェクトを取得します。 １つの予定を複数の連絡先に関連付けることができます。
      </summary>
      <remarks>
        このプロパティは、C1ScheduleStorage.ContactStorage ストレージ内に存在する
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのみを受け付けます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.BusyStatus">
      <summary>
        予定の［予定あり］ステータスを示す
        <see cref="T:C1.C1Schedule.Status" />オブジェクトを 取得または設定します。
      </summary>
      <remarks>
        このプロパティは、C1ScheduleStorage.StatusStorage ストレージ内に存在する
        <see cref="T:C1.C1Schedule.Status" />オブジェクトのみを受け付けます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Categories">
      <summary>
        予定に割り当てられた分類項目のセットを保持する
        <see cref="T:C1.C1Schedule.CategoryList" />オブジェクトを取得します。 予定に分類項目を関連付けると、予定を効果的にグループ化できます。 １つの予定を複数の分類項目に関連付けることができます。
      </summary>
      <remarks>
        このプロパティは、C1ScheduleStorage.CategoryStorage ストレージ内に存在する
        <see cref="T:C1.C1Schedule.Category" />オブジェクトのみを受け付けます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Appointment.Owner">
      <summary>
        現在の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを所有する
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトを取得または設定します。
      </summary>
      <remarks>
        このプロパティは、C1ScheduleStorage.OwnerStorage ストレージ内に存在する
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのみを受け付けます。
      </remarks>
      <value>デフォルト値は null です。</value>
    </member>
    <member name="T:C1.C1Schedule.AppointmentCollection">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentCollection" />は、C1Schedule コンポーネント内のすべての
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのコレクションです。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.BaseCollection`1">
      <summary>
        <see cref="T:C1.C1Schedule.BaseCollection`1" />は、 C1Schedule オブジェクトモデルのすべてのコレクションの汎用の基本クラスです。
      </summary>
      <typeparam name="T">
        コレクションに格納されるオブジェクトのタイプ。
        <see cref="T:C1.C1Schedule.BasePersistableObject" />クラスの派生であり、 デフォルトのパラメータなしのコンストラクタを持っている必要があります。
      </typeparam>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.#ctor(System.Object)">
      <summary>
        <see cref="T:C1.C1Schedule.BaseCollection`1" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="owner">所有するストレージ。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.Add(`0)">
      <summary>コレクションに新しいカスタムオブジェクトを追加します。 項目がすでにコレクション内に存在する場合は、そのインデックスが返されます。</summary>
      <returns>新しく追加されたカスタムオブジェクトのインデックスが返されます。</returns>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.Contains(System.Int32)">
      <summary>コレクションに指定したインデックスを持つ項目が含まれるかどうかをチェックします。</summary>
      <param name="index">検索する項目の０から始まるインデックス。</param>
      <returns>コレクション内で項目が見つかった場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.AddRange(System.Object[])">
      <summary>コレクションにオブジェクトの配列を追加します。 このメソッドは、新しい項目を追加する前にコレクションをクリアします。 すでに存在している項目を維持する場合は使用しないでください。</summary>
      <param name="items">項目の配列。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.InsertItem(System.Int32,`0)">
      <summary>新しい項目を追加するときのコレクションのデフォルト動作をオーバーライドします。</summary>
      <param name="index">挿入する項目のゼロから始まるインデックス。</param>
      <param name="item">挿入するオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.GetKeyForItem(`0)">
      <summary>指定された要素からキーを抽出します。</summary>
      <param name="item">キーの抽出元の要素。</param>
      <returns>指定された要素のキー。</returns>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.RemoveItem(System.Int32)">
      <summary>基本クラスの実装をオーバーライドします。</summary>
      <param name="index">削除する項目のゼロから始まるインデックス。</param>
    </member>
    <member name="P:C1.C1Schedule.BaseCollection`1.Item(System.Guid)">
      <summary>指定されたキーの要素があれば、それを取得します。</summary>
      <param name="key">取得する要素のキー。</param>
      <returns>指定されたキーを持つ要素。 指定されたキーの要素が見つからない場合は、null を返します。</returns>
    </member>
    <member name="P:C1.C1Schedule.BaseCollection`1.OwnerInternal">
      <summary></summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.Add">
      <summary>
        デフォルト設定を持つ新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それをコレクションに追加します。
      </summary>
      <returns>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime)">
      <summary>
        指定したパラメータを持つ新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それをコレクションに追加します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        予定の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan)">
      <summary>
        指定したパラメータを持つ新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それをコレクションに追加します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="duration">
        予定の期間を指定する
        <see cref="T:System.TimeSpan" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.DateTime,System.String)">
      <summary>
        指定したパラメータを持つ新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それをコレクションに追加します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        予定の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="subject">
        予定の件名を含む
        <see cref="T:System.String" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.Add(System.DateTime,System.TimeSpan,System.String)">
      <summary>
        指定したパラメータを持つ新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それをコレクションに追加します。
      </summary>
      <param name="start">
        予定の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="duration">
        予定の期間を指定する
        <see cref="T:System.TimeSpan" />値。
      </param>
      <param name="subject">
        予定の件名を含む
        <see cref="T:System.String" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(System.DateTime,System.DateTime)">
      <summary>
        指定した時間間隔の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの完全リストを含む
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを取得します。
      </summary>
      <param name="start">
        間隔の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        間隔の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクト。
      </returns>
      <remarks>
        このメソッドは、定期的な予定の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの インスタンスを作成します（まだ作成されていない場合）。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.BaseObject,System.String,System.DateTime,System.DateTime,System.Boolean)">
      <summary>
        指定された時間範囲内の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの完全なリストを含む
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを取得します。
      </summary>
      <param name="groupOwner">
        予定グループを決定する
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクト。
      </param>
      <param name="groupBy">
        グループ化のタイプを決定する
        <see cref="T:System.String" />値。
      </param>
      <param name="start">
        時間範囲の開始日と時間を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        時間範囲の終了日と時間を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="includePrivateAppointments">
        プライベート予定を含めるかどうかを決定する
        <see cref="T:System.Boolean" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクト。
      </returns>
      <remarks>
        繰り返し発生する予定のインスタンスがまだ作成されていない場合、 このメソッドは
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのインスタンスを作成します。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.GetOccurrences(C1.C1Schedule.Appointment,System.DateTime,System.DateTime)">
      <summary>
        時間間隔を指定して、指定したマスター予定の発生項目のリストを含む
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを 取得します。
      </summary>
      <param name="appointment">
        マスター予定を表す
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
      <param name="start">
        間隔の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        間隔の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクト。
      </returns>
      <remarks>
        このメソッドは、定期的な予定の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの インスタンスを作成します（まだ作成されていない場合）。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.GetConflicts(C1.C1Schedule.Appointment)">
      <summary>
        指定した予定と競合する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 発生項目のリストを含む
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを 取得します。
      </summary>
      <param name="appointment">
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.ClearItems">
      <summary>コレクションをクリアします。</summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.RemoveItem(System.Int32)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">削除する項目のゼロから始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.InsertItem(System.Int32,C1.C1Schedule.Appointment)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">項目のゼロから始まるインデックス。</param>
      <param name="item">
        挿入する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.SetItem(System.Int32,C1.C1Schedule.Appointment)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">項目のゼロから始まるインデックス。</param>
      <param name="item">
        設定する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.AppointmentCollection.AddRange(C1.C1Schedule.Appointment[])">
      <summary>
        コレクションに
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの配列を追加します。 このメソッドは、新しい項目を追加する前にコレクションをクリアします。 すでに存在している項目を保存しておく場合は使用しないでください。
      </summary>
      <param name="items">
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの配列。
      </param>
    </member>
    <member name="P:C1.C1Schedule.AppointmentCollection.ParentStorage">
      <summary>
        所有する
        <see cref="T:C1.C1Schedule.AppointmentStorage" />オブジェクトへの参照を取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.AppointmentList">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentList" />コレクションは、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのソート可能なコレクションです。
      </summary>
      <remarks>
        <see cref="T:C1.C1Schedule.AppointmentList" />はソートが保証されていません。
        <see cref="T:C1.C1Schedule.AppointmentList" />のソートが要求される処理を実行する前に
        <see cref="T:C1.C1Schedule.AppointmentList" />をソートする必要があります。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.AppointmentList.Sort">
      <summary>デフォルト比較子を使用し、（Appointment.Start 値によって） AppointmentList 全体の要素をソートします。</summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Comparison{C1.C1Schedule.Appointment})">
      <summary>指定された System.Comparison を使用して、 AppointmentList 全体の要素をソートします。</summary>
      <param name="comparison">
        要素を比較するときに使用する
        <see cref="T:System.Comparison`1" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
      <summary>指定されたコンペアラを使用して、 AppointmentList 全体の要素をソートします。</summary>
      <param name="comparer">要素を比較するときに使用する IComparer{Appointment} の実装、 デフォルトコンペアラを使用する場合は null 参照（Visual Basic では Nothing）。</param>
    </member>
    <member name="M:C1.C1Schedule.AppointmentList.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{C1.C1Schedule.Appointment})">
      <summary>指定されたコンペアラを使用して、AppointmentList 内の指定範囲の要素をソートします。</summary>
      <param name="index">ソート範囲を指定するゼロから始まる開始インデックス。</param>
      <param name="count">ソート範囲の長さ。</param>
      <param name="comparer">要素を比較するときに使用する IComparer{Appointment} の実装、 デフォルトコンペアラを使用する場合は null 参照（Visual Basic では Nothing）。</param>
    </member>
    <member name="T:C1.C1Schedule.AppointmentComparer">
      <summary>
        開始時刻によって
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを比較します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentComparer.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
      <summary>
        ２つの
        <see cref="T:C1.C1Schedule.Appointment" />の比較を実行し、一方の
        <see cref="T:C1.C1Schedule.Appointment" />の開始時刻がもう一方よりも早いか、同時刻か、あるいは遅いかを返します。
      </summary>
      <param name="x">
        比較する最初の
        <see cref="T:C1.C1Schedule.Appointment" />。
      </param>
      <param name="y">
        比較する２番目の
        <see cref="T:C1.C1Schedule.Appointment" />。
      </param>
      <returns>負値- x は y よりも早い。 ０ - x と y は同時刻。 正値 - x は y よりも遅い。</returns>
    </member>
    <member name="P:C1.C1Schedule.AppointmentComparer.Default">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentComparer" />の既存のインスタンスが存在する場合はそれを、存在しなければ新規に作成したインスタンスを返します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.AppointmentEventArgs">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentEventArgs" />クラスは、
        <see cref="F:C1.C1Schedule.AppointmentEventArgs.Appointment" />イベントのイベントデータを記述します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
      <summary>
        指定した予定を持つ
        <see cref="T:C1.C1Schedule.AppointmentEventArgs" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="appointment">
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="P:C1.C1Schedule.AppointmentEventArgs.Appointment">
      <summary>イベントを発生させた予定を取得します。</summary>
    </member>
    <member name="T:C1.C1Schedule.CancelAppointmentEventHandler">
      <summary>
        単一の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを含むキャンセル可能なイベントの処理のデリゲート。
      </summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs" />。
      </param>
    </member>
    <member name="T:C1.C1Schedule.CancelAppointmentEventArgs">
      <summary>
        <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs" />クラスは、
        <see cref="F:C1.C1Schedule.CancelAppointmentEventArgs.Appointment" />イベントのイベントデータを記述します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.CancelAppointmentEventArgs.#ctor(C1.C1Schedule.Appointment)">
      <summary>
        指定した予定を持つ
        <see cref="T:C1.C1Schedule.CancelAppointmentEventArgs" />クラスの 新しいインスタンスを初期化します。
      </summary>
      <param name="appointment">
        <see cref="F:C1.C1Schedule.CancelAppointmentEventArgs.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment">
      <summary>
        イベントを発生させた
        <see cref="P:C1.C1Schedule.CancelAppointmentEventArgs.Appointment" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.BaseObject">
      <summary>
        <see cref="T:C1.C1Schedule.BaseObject" />は、リソース、ラベル、ステータス、分類項目、 および連絡先の基本クラスです。基本的な UI プロパティとデータ保持を実装します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.#ctor">
      <summary>
        デフォルト設定を持つ新しい
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String)">
      <summary>
        指定したテキストを持つ新しい
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクトを作成します。
      </summary>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.#ctor(System.String,System.String)">
      <summary>
        指定したテキストとメニューキャプションを持つ新しい
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクトを作成します。
      </summary>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
      <param name="menuCaption">
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String)">
      <summary>
        指定した色、テキスト、およびメニューキャプションを持つ 新しい
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクトを作成します。
      </summary>
      <param name="color">
        <see cref="P:C1.C1Schedule.BaseObject.Color" />値。
      </param>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
      <param name="menuCaption">
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Drawing.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
      <summary>
        指定したパラメータを持つ新しい
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクトを作成します。
      </summary>
      <param name="color">
        <see cref="P:C1.C1Schedule.BaseObject.Color" />値。
      </param>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
      <param name="menuCaption">
        <see cref="T:System.String" />値。
      </param>
      <param name="brush">
        <see cref="P:C1.C1Schedule.BaseObject.Brush" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlNode)">
      <summary>
        指定した
        <see cref="T:System.Xml.XmlNode" />からオブジェクトをロードします。
      </summary>
      <param name="node">
        オブジェクトデータを含む
        <see cref="T:System.Xml.XmlNode" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.FromXml(System.Xml.XmlReader)">
      <summary>
        指定された
        <see cref="T:System.Xml.XmlReader" />からオブジェクトをロードします。
      </summary>
      <param name="reader">
        オブジェクトデータを含む
        <see cref="T:System.Xml.XmlReader" />。
      </param>
      <returns>オブジェクトが変更されている場合は true を返します。</returns>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.ToXml(System.Xml.XmlWriter)">
      <summary>
        指定した
        <see cref="T:System.Xml.XmlWriter" />にオブジェクトを保存します。
      </summary>
      <param name="writer">
        オブジェクトデータを受け取る
        <see cref="T:System.Xml.XmlWriter" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseObject.ToString">
      <summary>デフォルト動作をオーバーライドします。</summary>
      <returns>ユーザーインタフェースオブジェクトを識別するテキスト。</returns>
    </member>
    <member name="P:C1.C1Schedule.BaseObject.Color">
      <summary>ユーザーインタフェースオブジェクトの色を取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.BaseObject.Text">
      <summary>ユーザーインタフェースオブジェクトを識別するテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.BaseObject.MenuCaption">
      <summary>ユーザーインタフェースオブジェクトのメニューキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.BaseObject.Brush">
      <summary>ユーザーインタフェースオブジェクトの画像の塗りつぶしに使用するブラシを取得または設定します。</summary>
      <remarks>System.Drawing.Drawing2D.HatchBrush と System.Drawing.SolidBrush の場合のみ サポートされたデータ保持。</remarks>
    </member>
    <member name="T:C1.C1Schedule.BaseList`1">
      <summary>
        <see cref="T:C1.C1Schedule.BaseList`1" />は、 C1Schedule のオブジェクトモデルのすべてのリストの汎用の基本クラスです。 このリストに追加できるのは、所有するコレクション内にすでに存在するオブジェクトのみです。
      </summary>
      <typeparam name="T">
        リストに格納するオブジェクトのタイプ。
        <see cref="T:C1.C1Schedule.BasePersistableObject" />クラスの派生である必要があります。
      </typeparam>
    </member>
    <member name="M:C1.C1Schedule.BaseList`1.InsertItem(System.Int32,`0)">
      <summary>Collection のデフォルト動作をオーバーライドします。 親コレクションに存在しない項目を追加できないようにします。</summary>
      <param name="index">挿入する項目のゼロから始まるインデックス。</param>
      <param name="item">挿入するオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseList`1.SetItem(System.Int32,`0)">
      <summary>Collection のデフォルト動作をオーバーライドします。 親コレクションに存在しない項目を追加できないようにします。</summary>
      <param name="index">項目のゼロから始まるインデックス。</param>
      <param name="item">設定するオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.BaseList`1.ToString">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="P:C1.C1Schedule.BaseList`1.Owner">
      <summary>所有側のコレクションへの参照を取得します。</summary>
    </member>
    <member name="T:C1.C1Schedule.TimeScaleEnum">
      <summary>DayView のタイムスロットの表示に使用する 時間間隔を決定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.FiveMinutes">
      <summary>５分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.SixMinutes">
      <summary>６分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.TenMinutes">
      <summary>10 分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.FifteenMinutes">
      <summary>15 分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.TwentyMinutes">
      <summary>20 分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.ThirtyMinutes">
      <summary>30 分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.OneHour">
      <summary>60 分。</summary>
    </member>
    <member name="F:C1.C1Schedule.TimeScaleEnum.TwoHours">
      <summary>２時間。</summary>
    </member>
    <member name="T:C1.C1Schedule.CalendarInfo">
      <summary>
        <see cref="T:C1.C1Schedule.CalendarInfo" />クラスは、すべての日付に関するデータを管理して C1Schedule コントロールに公開します。
      </summary>
    </member>
    <member name="E:C1.C1Schedule.CalendarInfo.SelectedDaysChanged">
      <summary>選択した日範囲が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.C1Schedule.CalendarInfo.PropertyChanged">
      <summary>
        <see cref="T:C1.C1Schedule.CalendarInfo" />オブジェクトのプロパティが変更されたときに発生します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.Culture">
      <summary>
        C1Schedule コンポーネントで使用されるカルチャ固有の情報を保持する
        <see cref="T:System.Globalization.CultureInfo" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.CultureInfo">
      <summary>
        C1Schedule コンポーネントによって使用されるカルチャ依存の情報を持つ
        <see cref="P:C1.C1Schedule.CalendarInfo.CultureInfo" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.DateFormatString">
      <summary>
        予定と組み込みダイアログ内で使用する日付値の表示書式を決定する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
      <remarks>
        実際の表示は、
        <see cref="P:C1.C1Schedule.CalendarInfo.Culture" />プロパティの 値によって決まります。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.TimeFormatString">
      <summary>
        予定と組み込みダイアログ内で使用する時刻値の表示書式を決定する
        <see cref="T:System.String" />値を 取得または設定します。
      </summary>
      <remarks>
        実際の表示は、
        <see cref="P:C1.C1Schedule.CalendarInfo.Culture" />プロパティの値によって決まります。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.WeekStart">
      <summary>
        週の最初の日を決定する
        <see cref="T:System.DayOfWeek" />値を取得または設定します。 デフォルトはシステム設定です。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.WorkDays">
      <summary>
        １週間の稼働日セットを含む
        <see cref="P:C1.C1Schedule.CalendarInfo.WorkDays" />オブジェクトを 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.TimeScale">
      <summary>
        DayView のタイムスロットの表示に使用する時間間隔を決定する
        <see cref="T:System.TimeSpan" />値を 取得または設定します。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.CalendarInfo.TimeScale" />プロパティは、 任意の値に設定できません。このプロパティに値を割り当てると、 最も近い
        <see cref="T:C1.C1Schedule.TimeScaleEnum" />値に 等しくなるように自動的に計算されます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.TimeInterval">
      <summary>
        DayView のタイムスロットの表示に使用する時間間隔を決定する
        <see cref="T:C1.C1Schedule.TimeScaleEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.StartDayTime">
      <summary>
        稼働時間の開始を指定する
        <see cref="T:System.TimeSpan" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.EndDayTime">
      <summary>
        稼働時間の終了を指定する
        <see cref="T:System.TimeSpan" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.FirstDate">
      <summary>
        許容する最小日付を指定する
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.LastDate">
      <summary>
        許容する最大日付を指定する
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.Holidays">
      <summary>
        休日（週末と非稼働日）のリストを保持する
        <see cref="T:System.Collections.Generic.List`1" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.WeekendExceptions">
      <summary>
        稼働する週末のリストを保持する
        <see cref="T:System.Collections.Generic.List`1" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.CalendarInfo.DateTimeKind">
      <summary>
        <see cref="T:System.DateTime" />値の保存に使用される DateTime の種類を指定する
        <see cref="P:C1.C1Schedule.CalendarInfo.DateTimeKind" />を取得します。
      </summary>
      <remarks>
        このプロパティは、AppointmentStorage.DataSource オブジェクトのデータ保存処理とエクスポート処理にのみ影響を与えます。
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトおよび
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトのすべてのプロパティは、現在のシステムローカル時間を表します。 世界協定時刻（UTC）でデータを保存する必要がある場合は、このプロパティに DateTimeLind.Utc を設定します。 このケースにおいては、データの読み込み／書込み操作時に、それぞれローカル時刻と世界協定時刻との間で相互に変換されます。
      </remarks>
    </member>
    <member name="T:C1.C1Schedule.WorkDays">
      <summary>
        <see cref="T:C1.C1Schedule.WorkDays" />クラスは、１週間の稼働日リストです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.WorkDays.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.WorkDays" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.WorkDays.AddRange(System.DayOfWeek[])">
      <summary>
        新しい
        <see cref="T:C1.C1Schedule.WorkDays" />オブジェクトを作成します。
      </summary>
      <param name="items">
        <see cref="T:System.DayOfWeek" />オブジェクトの配列。
      </param>
    </member>
    <member name="T:C1.C1Schedule.Category">
      <summary>
        <see cref="T:C1.C1Schedule.Category" />クラスは、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに 関連付けることができる分類項目を表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Category.#ctor(System.Int32)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Category" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        カテゴリキーとして使用する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Category.#ctor(System.Guid)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Category" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        カテゴリキーとして使用する
        <see cref="T:System.Guid" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Category.#ctor">
      <summary>
        新しい
        <see cref="T:C1.C1Schedule.Category" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Category.#ctor(System.String)">
      <summary>
        指定したテキストを持つカスタムの
        <see cref="T:C1.C1Schedule.Category" />オブジェクトを作成します。
      </summary>
      <param name="text">分類項目のテキスト。</param>
    </member>
    <member name="M:C1.C1Schedule.Category.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="T:C1.C1Schedule.CategoryCollection">
      <summary>
        <see cref="T:C1.C1Schedule.CategoryCollection" />は、C1Schedule オブジェクトモデル内で使用可能なすべての分類項目を表す
        <see cref="T:C1.C1Schedule.Category" />オブジェクトのコレクションです。 デフォルトでは、定義済みの分類項目セットが含まれます。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.CategoryCollection.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.CategoryCollection" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.CategoryCollection.LoadDefaults">
      <summary>コレクションをデフォルト状態に戻します。</summary>
      <remarks>
        <see cref="M:C1.C1Schedule.CategoryCollection.LoadDefaults" />メソッドは、 すべてのカスタムの分類項目をコレクションから削除し、標準の分類項目のみを残します。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.CategoryCollection.GetDefaults">
      <summary>組み込み済みのカテゴリのリストを返します。</summary>
      <returns>
        <see cref="T:System.Collections.Generic.List`1" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.C1Schedule.CategoryList">
      <summary>
        <see cref="T:C1.C1Schedule.CategoryList" />コレクションは、
        <see cref="T:C1.C1Schedule.Category" />オブジェクトのリストです。 所有する
        <see cref="T:C1.C1Schedule.CategoryCollection" />オブジェクト内に存在する オブジェクトのみをこのリストに追加できます。
        <see cref="T:C1.C1Schedule.CategoryList" />を使用し、
        <see cref="T:C1.C1Schedule.Category" />オブジェクトのセットを
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに関連付けます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.Contact">
      <summary>
        <see cref="T:C1.C1Schedule.Contact" />クラスは、個人情報を表します。 本当のクラスではなく、プロトタイプ用サンプルです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Contact.#ctor(System.Int32)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Contact" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        連絡先キーとして使用する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Contact.#ctor(System.Guid)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Contact" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        連絡先キーとして使用する
        <see cref="T:System.Guid" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Contact.#ctor">
      <summary>
        新しい
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Contact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="T:C1.C1Schedule.ContactCollection">
      <summary>
        <see cref="T:C1.C1Schedule.ContactCollection" />は、C1Schedule オブジェクトモデル内のすべての使用可能な連絡先を表す
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのコレクションです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.ContactCollection.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.ContactCollection" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.ContactList">
      <summary>
        <see cref="T:C1.C1Schedule.ContactList" />コレクションは、
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのリストです。 所有する
        <see cref="T:C1.C1Schedule.ContactCollection" />オブジェクト内に存在する オブジェクトのみをこのリストに追加できます。
        <see cref="T:C1.C1Schedule.ContactList" />を使用し、
        <see cref="T:C1.C1Schedule.Contact" />オブジェクトのセットを
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに関連付けます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.DateList">
      <summary>
        <see cref="T:C1.C1Schedule.DateList" />クラスは、
        <see cref="T:System.DateTime" />値のコレクションです。 新しい値を追加するとき、値の時刻部分を削除して、 値がリスト内に表示されないようにします。
      </summary>
      <remarks>このクラスは、すべての操作におけるバイナリサーチに使用されます。</remarks>
    </member>
    <member name="M:C1.C1Schedule.DateList.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.DateList" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.DateList.Add(System.DateTime)">
      <summary>リストに新しい日付を追加します。</summary>
      <param name="item">
        追加する
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.DateList.Clear">
      <summary>リスト内のすべての項目をクリアします。</summary>
    </member>
    <member name="M:C1.C1Schedule.DateList.Remove(System.DateTime)">
      <summary>リストから指定された項目を削除します。</summary>
      <param name="item">
        削除する
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.DateList.RemoveAt(System.Int32)">
      <summary>指定されたインデックスの項目を削除します。</summary>
      <param name="index">削除する項目のインデックス値。</param>
    </member>
    <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime)">
      <summary>指定された項目がリスト内に存在する場合は true を返します。</summary>
      <param name="item">検索する項目。</param>
      <returns>リスト内に項目が存在していれば true。</returns>
    </member>
    <member name="M:C1.C1Schedule.DateList.Contains(System.DateTime[])">
      <summary>指定された項目のいずれかがリスト内に存在する場合は true を返します。</summary>
      <param name="days">
        検索する
        <see cref="T:System.DateTime" />値の配列。
      </param>
      <returns>指定された項目の少なくとも１つがリスト内に存在していれば true。</returns>
    </member>
    <member name="M:C1.C1Schedule.DateList.Contains(System.Collections.Generic.IList{System.DateTime})">
      <summary>指定された項目のいずれかがラップされたリスト内に存在する場合は true を返します。</summary>
      <param name="days">
        検索する
        <see cref="T:System.DateTime" />値のリスト。
      </param>
      <returns>指定された項目の少なくとも１つがラップされたリストに存在する場合は true。</returns>
    </member>
    <member name="M:C1.C1Schedule.DateList.GetPreviousDate(System.DateTime)">
      <summary>指定された項目より小さい最初の項目を返します。</summary>
      <param name="item">検索する項目。</param>
      <returns>見つかった場合はその項目。見つからなかった場合は DateTime.MinValue 値。</returns>
    </member>
    <member name="M:C1.C1Schedule.DateList.GetNextDate(System.DateTime)">
      <summary>指定された項目より大きい最初の項目を返します。</summary>
      <param name="item">検索する項目。</param>
      <returns>見つかった場合はその項目。見つからなかった場合は DateTime.MaxValue 値。</returns>
    </member>
    <member name="P:C1.C1Schedule.DateList.Count">
      <summary>リスト内の項目数を返します。</summary>
    </member>
    <member name="P:C1.C1Schedule.DateList.Items">
      <summary>リストへの参照を返します。</summary>
    </member>
    <member name="T:C1.C1Schedule.C1BrushStyleEnum">
      <summary>ブラシに使用できる各種パターンを指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.Transparent">
      <summary>透明なブラシを表します。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.Solid">
      <summary>塗りつぶしのブラシを表します。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.BackwardDiagonal">
      <summary>左下がり斜線（／）パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.Cross">
      <summary>縦横格子パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.DiagonalCross">
      <summary>斜線格子パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.ForwardDiagonal">
      <summary>右下がり斜線（＼）パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.Horizontal">
      <summary>横線パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.Vertical">
      <summary>縦線パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.Wave">
      <summary>波横線パターン。</summary>
    </member>
    <member name="F:C1.C1Schedule.C1BrushStyleEnum.ZigZag">
      <summary>ジグザグ横線パターン。</summary>
    </member>
    <member name="T:C1.C1Schedule.C1Brush">
      <summary>ブラシのラッパークラス。シリアル化／逆シリアル化の目的専用。</summary>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.#ctor">
      <summary>
        新しい
        <see cref="T:C1.C1Schedule.C1Brush" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Color,System.Drawing.Color,C1.C1Schedule.C1BrushStyleEnum)">
      <summary>
        新しい
        <see cref="T:C1.C1Schedule.C1Brush" />オブジェクトを作成します。
      </summary>
      <param name="foreColor">
        前景の
        <see cref="T:System.Drawing.Color" />の値。
      </param>
      <param name="backColor">
        背景の
        <see cref="T:System.Drawing.Color" />の値。
      </param>
      <param name="style">
        <see cref="T:C1.C1Schedule.C1BrushStyleEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Drawing.Color)">
      <summary>
        新しい塗りつぶしの
        <see cref="T:C1.C1Schedule.C1Brush" />オブジェクトを作成します。
      </summary>
      <param name="backColor">
        背景の
        <see cref="T:System.Drawing.Color" />の値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.Equals(System.Object)">
      <summary></summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.GetHashCode">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.C1Brush.GetARGBstring(System.Drawing.Color)">
      <summary>ARGB 形式の色の文字列表現を表します。</summary>
      <param name="color">
        <see cref="P:C1.C1Schedule.BaseObject.Color" />値。
      </param>
      <returns>ARGB 形式の色の文字列表現。</returns>
    </member>
    <member name="P:C1.C1Schedule.C1Brush.ForeColor">
      <summary></summary>
    </member>
    <member name="P:C1.C1Schedule.C1Brush.BackColor">
      <summary></summary>
    </member>
    <member name="P:C1.C1Schedule.C1Brush.Style">
      <summary></summary>
    </member>
    <member name="P:C1.C1Schedule.C1Brush.Brush">
      <summary></summary>
    </member>
    <member name="T:C1.C1Schedule.Label">
      <summary>
        <see cref="T:C1.C1Schedule.Label" />クラスは、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに 関連付けることができるラベルを表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor(System.Int32)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Label" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        ラベルキーとして使用する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor(System.Guid)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Label" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        ラベルキーとして使用する
        <see cref="T:System.Guid" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor">
      <summary>
        デフォルトパラメータを持つ新しい
        <see cref="T:C1.C1Schedule.Label" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor(System.String)">
      <summary>
        指定したテキストを持つカスタムの
        <see cref="T:C1.C1Schedule.Label" />オブジェクトを作成します。
      </summary>
      <param name="text">ラベルのテキスト。</param>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor(System.String,System.String)">
      <summary>
        指定したテキストとメニューキャプションを持つカスタムの
        <see cref="T:C1.C1Schedule.Label" />オブジェクトを作成します。
      </summary>
      <param name="text">ラベルのテキスト。</param>
      <param name="menuCaption">ダイアログにラベルを表示するためのメニューキャプション。</param>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor(System.Drawing.Color,System.String,System.String)">
      <summary>
        指定した色、テキスト、およびメニューキャプションを持つカスタムの
        <see cref="T:C1.C1Schedule.Label" />オブジェクトを作成します。
      </summary>
      <param name="color">ラベルの色。</param>
      <param name="text">ラベルのテキスト。</param>
      <param name="menuCaption">ダイアログにラベルを表示するためのメニューキャプション。</param>
    </member>
    <member name="M:C1.C1Schedule.Label.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="T:C1.C1Schedule.LabelCollection">
      <summary>
        <see cref="T:C1.C1Schedule.LabelCollection" />は、C1Schedule オブジェクトモデル内で使用可能なすべてのラベルを表す
        <see cref="T:C1.C1Schedule.Label" />オブジェクトのコレクションです。
      </summary>
      <remarks>
        <para>デフォルトでは、定義済みのラベルセットが含まれます。 定義済みのラベルは以下のとおりです：</para>
        <list type="bullet">
          <item>
            <term></term>
            <description>なし</description>
          </item>
          <item>
            <term></term>
            <description>重要</description>
          </item>
          <item>
            <term></term>
            <description>ビジネス</description>
          </item>
          <item>
            <term></term>
            <description>個人用</description>
          </item>
          <item>
            <term></term>
            <description>休暇</description>
          </item>
          <item>
            <term></term>
            <description>要出席</description>
          </item>
          <item>
            <term></term>
            <description>期限</description>
          </item>
          <item>
            <term></term>
            <description>出張あり</description>
          </item>
          <item>
            <term></term>
            <description>要準備</description>
          </item>
          <item>
            <term></term>
            <description>誕生日</description>
          </item>
          <item>
            <term></term>
            <description>記念日</description>
          </item>
          <item>
            <term></term>
            <description>通話記録</description>
          </item>
        </list>
        <para>また、カスタムのラベルも追加できます。</para>
      </remarks>
    </member>
    <member name="F:C1.C1Schedule.LabelCollection.NoneLabelId">
      <summary>［なし］ラベルの ID を定義します。</summary>
    </member>
    <member name="M:C1.C1Schedule.LabelCollection.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.LabelCollection" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.LabelCollection.LoadDefaults">
      <summary>コレクションをデフォルト状態に戻します。</summary>
      <remarks>
        <see cref="M:C1.C1Schedule.LabelCollection.LoadDefaults" />メソッドは、 すべてのカスタムラベルをコレクションから削除し、標準ラベルのみを残します。
      </remarks>
    </member>
    <member name="T:C1.C1Schedule.LabelList">
      <summary>
        <see cref="T:C1.C1Schedule.LabelList" />コレクションは、
        <see cref="T:C1.C1Schedule.Label" />オブジェクトのリストです。 所有する
        <see cref="T:C1.C1Schedule.LabelCollection" />オブジェクト内に存在する オブジェクトのみをこのリストに追加できます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.RecurrenceTypeEnum">
      <summary>定期的な予定のタイプを決定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Daily">
      <summary>定期的な予定は、毎日ベースで再発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays">
      <summary>定期的な予定は、稼働日ごとに再発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly">
      <summary>定期的な予定は、毎月ベースで再発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth">
      <summary>定期的な予定は、N カ月ごとに再発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly">
      <summary>定期的な予定は、毎週ベースで再発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly">
      <summary>定期的な予定は、毎年ベースで再発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth">
      <summary>定期的な予定は、N 年ごとに再発生します。</summary>
    </member>
    <member name="T:C1.C1Schedule.WeekDaysEnum">
      <summary>定期パターンの日付セットと日付グループを決定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.None">
      <summary>
        特定の値はありません。実際の値は、 ルートの
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトから取得されます。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Sunday">
      <summary>日曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Monday">
      <summary>月曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Tuesday">
      <summary>火曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Wednesday">
      <summary>水曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Thursday">
      <summary>木曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Friday">
      <summary>金曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.Saturday">
      <summary>土曜日を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.WeekendDays">
      <summary>土曜日と日曜日（または C1Schedule の 設定に基づく任意の日）。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.WorkDays">
      <summary>稼働日（週末を除くすべての日）を指定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekDaysEnum.EveryDay">
      <summary>週の各曜日を指定します。</summary>
    </member>
    <member name="T:C1.C1Schedule.WeekOfMonthEnum">
      <summary>予定が発生する月の週を決定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekOfMonthEnum.First">
      <summary>定期的な予定は、月の最初の週の指定した 単一または複数の日に発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekOfMonthEnum.Second">
      <summary>定期的な予定は、月の第２週目の指定した 単一または複数の日に発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekOfMonthEnum.Third">
      <summary>定期的な予定は、月の第３週目の指定した 単一または複数の日に発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekOfMonthEnum.Fourth">
      <summary>定期的な予定は、月の第４週目の指定した 単一または複数の日に発生します。</summary>
    </member>
    <member name="F:C1.C1Schedule.WeekOfMonthEnum.Last">
      <summary>定期的な予定は、月の最後の週の指定した 単一または複数の日に発生します。</summary>
    </member>
    <member name="T:C1.C1Schedule.RecurrencePattern">
      <summary>
        <see cref="T:C1.C1Schedule.RecurrencePattern" />クラスは、関連付けられた
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 定期パターンと範囲を記述する情報を含みます。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.RecurrencePattern.OnPropertyChanged(System.String)">
      <summary></summary>
      <param name="propertyName"></param>
    </member>
    <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(System.Globalization.CultureInfo)">
      <summary>
        指定されたカルチャに従って、
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトの可読可能な説明を取得します。
      </summary>
      <param name="culture">
        指定された文字列のカレンダーを取得するために使用する
        <see cref="T:System.Globalization.CultureInfo" />オブジェクト。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトによって記述された
        <see cref="T:System.String" />値。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.RecurrencePattern.GetDescription(C1.C1Schedule.CalendarInfo)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.CalendarInfo" />オブジェクトに従って、
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトの可読可能な説明を取得します。
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトが
        <see cref="N:C1.C1Schedule" />のいずれのコントロールにも属さない場合に、
        <see cref="P:C1.C1Schedule.RecurrencePattern.Description" />プロパティの代わりに使用されます。
      </summary>
      <param name="calendarInfo">
        指定された文字列のカレンダーを取得するために使用する
        <see cref="T:System.Globalization.CultureInfo" />オブジェクト。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトによって記述された
        <see cref="T:System.String" />値。
      </returns>
      <remarks>
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトが
        <see cref="N:C1.C1Schedule" />のいずれのコントロールにも属さない場合、 その Description プロパティは現在のユーザーカルチャおよびカレンダー設定を使用したデフォルトの説明を返します。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.RecurrencePattern.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.ParentAppointment">
      <summary>
        この
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトのマスター予定を表す
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.Description">
      <summary>
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトに関して人が認識できる記述を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.RecurrenceType">
      <summary>
        定期パターンのタイプ（毎日、毎月など）を決定する
        <see cref="T:C1.C1Schedule.RecurrenceTypeEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.Interval">
      <summary>
        定期パターンの発生項目の間隔を指定する
        <see cref="T:System.Int32" />値を 取得または設定します。
        <see cref="P:C1.C1Schedule.RecurrencePattern.Interval" />プロパティは、
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティと連動して、 定期パターンの周期を決定します。最大許容値は 99 です。
      </summary>
      <remarks>
        たとえば、
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />が
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily" />に設定され、
        <see cref="P:C1.C1Schedule.RecurrencePattern.Interval" />が 3 に設定されている場合、 定期パターンは３日ごとに発生します。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.EndTime">
      <summary>
        定期パターンの特定の発生項目の終了時刻を示す
        <see cref="T:System.DateTime" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.StartTime">
      <summary>
        定期パターンの特定の発生項目の開始時刻を示す
        <see cref="T:System.DateTime" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.Duration">
      <summary>
        定期パターンの各発生項目の期間を示す
        <see cref="T:System.TimeSpan" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.PatternStartDate">
      <summary>
        定期パターンの開始日を示す
        <see cref="T:System.DateTime" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.PatternEndDate">
      <summary>
        定期パターンの終了日を示す
        <see cref="T:System.DateTime" />値を 取得または設定します。
      </summary>
      <remarks>
        このプロパティは、オプションですが、定期パターンを設定する場合は、 他のプロパティと連動させる必要があります。このプロパティまたは
        <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences" />プロパティが設定された場合、 パターンは有期限とみなされ、
        <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate" />プロパティは false となります。
        <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate" />も
        <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences" />も設定されていない場合、 パターンは無期限とみなされ、
        <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate" />は true となります。
        <see cref="P:C1.C1Schedule.RecurrencePattern.Interval" />プロパティは、
        <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate" />を設定する前に設定する必要があります。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.Occurrences">
      <summary>定期パターンの発生項目数を取得または設定します。 このプロパティにより、指定した数の後続の発生項目のみが有効である 定期パターンを定義できます。 たとえば、毎週木曜日の晩に 10 回開講される公式トレーニングコースの場合、 このプロパティを 10 に設定できます。</summary>
      <remarks>
        このプロパティは、定期パターンを設定する場合、 他のプロパティと連動させる必要があります。
        <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate" />または
        <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences" />プロパティが設定された場合、 パターンは有期限とみなされ、
        <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate" />プロパティは false になります。
        <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate" />も
        <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences" />も設定されていない場合、 パターンは無期限とみなされ、
        <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate" />は true となります。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.Instance">
      <summary>
        特定の間隔で有効な定期パターンの回数を指定する
        <see cref="T:C1.C1Schedule.WeekOfMonthEnum" />値を 取得または設定します。 このプロパティは、
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.MonthlyNth" />型と
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth" />型の 定期パターンの場合にのみ有効です。これにより、N 番目の発生項目だけが有効である定期パターン （「３月の第２日曜日」パターンなど）を定義できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask">
      <summary>
        定期的な予定が発生する曜日のマスクを表す
        <see cref="T:C1.C1Schedule.WeekDaysEnum" />値を 取得または設定します。 毎月パターンと毎年パターンは、単一の日のみに有効です。 毎週パターンは、
        <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask" />の論理和としてのみ有効です。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Daily" />に設定された場合、
        <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask" />プロパティは
        <see cref="F:C1.C1Schedule.WeekDaysEnum.EveryDay" />にのみ設定できます。 すなわち、このプロパティをその他の任意の値に設定すると、例外が発生します。
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Workdays" />に設定された場合、
        <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask" />プロパティは
        <see cref="F:C1.C1Schedule.WeekDaysEnum.WorkDays" />にのみ設定できます。 すなわち、このプロパティをその他の任意の値に設定すると、例外が発生します。
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Weekly" />に設定された場合、
        <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask" />プロパティは
        <see cref="F:C1.C1Schedule.WeekDaysEnum.None" />に設定できません。 このように設定すると、例外がスローされます。
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly" />または
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly" />に設定された場合、
        <see cref="P:C1.C1Schedule.RecurrencePattern.DayOfWeekMask" />プロパティは適用できません。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.DayOfMonth">
      <summary>
        各発生項目が発生する個々の月の日付の数値を取得または設定します。
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Monthly" />または
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly" />に設定された場合のみ適用できます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.MonthOfYear">
      <summary>
        指定した定期パターンに有効な年の月を示す値を取得または設定します。 1～12 の数値を設定できます。 このプロパティは、
        <see cref="P:C1.C1Schedule.RecurrencePattern.RecurrenceType" />プロパティが
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.YearlyNth" />または
        <see cref="F:C1.C1Schedule.RecurrenceTypeEnum.Yearly" />に設定された定期パターンの場合のみ有効です。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.NoEndDate">
      <summary>
        定期パターンが無期限かどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
      <remarks>
        このプロパティは、定期パターンを設定する場合、他のプロパティと 連動させる必要があります。
        <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate" />または
        <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences" />プロパティが設定された場合、 パターンは有期限とみなされ、
        <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate" />プロパティは false になります。
        <see cref="P:C1.C1Schedule.RecurrencePattern.PatternEndDate" />も
        <see cref="P:C1.C1Schedule.RecurrencePattern.Occurrences" />も設定されていない場合、 パターンは無期限とみなされ、
        <see cref="P:C1.C1Schedule.RecurrencePattern.NoEndDate" />は true となります。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.Exceptions">
      <summary>
        このシリーズの予定に対する例外を定義する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの リストを保持する
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを 取得します。
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトは、 対応する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト内のプロパティが変更されるたびに
        <see cref="P:C1.C1Schedule.RecurrencePattern.Exceptions" />に追加されます。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.RecurrencePattern.RemovedOccurrences">
      <summary>
        このシリーズの予定から削除された
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの リストを保持する
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.Reminder">
      <summary>
        <see cref="T:C1.C1Schedule.Reminder" />クラスは、指定時間にポップアップダイアログボックスを 表示させるスケジュールを設定して、今後の予定の追跡をユーザーに許可するオブジェクトを表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)">
      <summary>
        <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)" />メソッドは、 指定した間隔でのアラームの発生を保留することをスケジューラに通知します。
      </summary>
      <param name="delay">
        アラームを再表示するまでの時間間隔を指定する
        <see cref="T:System.TimeSpan" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Reminder.Dismiss">
      <summary>
        現在の
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトを消去します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Reminder.OnPropertyChanged(System.String)">
      <summary></summary>
      <param name="propertyName"></param>
    </member>
    <member name="P:C1.C1Schedule.Reminder.ParentAppointment">
      <summary>
        所有する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Reminder.Caption">
      <summary>
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトを適用する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのウィンドウのキャプションテキストを表す
        <see cref="T:System.String" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Reminder.IsActive">
      <summary>
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトが現在アクティブ （表示されている）かどうかを決定する値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Reminder.NextReminderDate">
      <summary>
        指定したアラームが発生する次回の時刻を示す
        <see cref="T:System.DateTime" />値を 取得します。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.Reminder.NextReminderDate" />プロパティ値は、オブジェクトの
        <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)" />メソッドが実行されるか、 ユーザーが〈再通知〉ボタンをクリックするたびに変更されます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Reminder.OriginalReminderDate">
      <summary>
        指定したアラームの発生を設定した元の日時を指定する
        <see cref="T:System.DateTime" />値を取得します。
        <see cref="P:C1.C1Schedule.Reminder.OriginalReminderDate" />=
        <see cref="P:C1.C1Schedule.Appointment.Start" />-
        <see cref="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart" />という式を使用して計算されます。
      </summary>
      <remarks>
        この値は、
        <see cref="M:C1.C1Schedule.Reminder.Snooze(System.TimeSpan)" />メソッドが 実行されるか、ユーザーが〈再通知〉ボタンをクリックする前の 元の日時に対応します。
      </remarks>
    </member>
    <member name="T:C1.C1Schedule.ReminderCollection">
      <summary>
        <see cref="T:C1.C1Schedule.ReminderCollection" />は、すべての保留項目のアラームを表すすべての
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトのコレクションです。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.C1ScheduleStorage.Reminders" />プロパティを使用し、 Reminders コレクションへの参照を取得します。アラームは、アラームを指定して 新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトが作成されたときに プログラムによって作成されます。たとえば、アラームは
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトが 作成され
        <see cref="P:C1.C1Schedule.Appointment.ReminderSet" />プロパティが true に設定された場合に作成されます。
      </remarks>
    </member>
    <member name="M:C1.C1Schedule.ReminderCollection.InsertItem(System.Int32,C1.C1Schedule.Reminder)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">項目のゼロから始まるインデックス。</param>
      <param name="item">
        挿入する
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.ReminderCollection.RemoveItem(System.Int32)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">削除する項目のゼロから始まるインデックス。</param>
    </member>
    <member name="M:C1.C1Schedule.ReminderCollection.ClearItems">
      <summary>デフォルトの動作をオーバーライドします。</summary>
    </member>
    <member name="M:C1.C1Schedule.ReminderCollection.SetItem(System.Int32,C1.C1Schedule.Reminder)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="index">項目のゼロから始まるインデックス。</param>
      <param name="item">
        設定する
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.ReminderCollection.Dispose">
      <summary>すべてのアンマネージリソースを解放します。</summary>
    </member>
    <member name="T:C1.C1Schedule.ReminderEventArgs">
      <summary>
        <see cref="F:C1.C1Schedule.ReminderEventArgs.Reminder" />オブジェクトイベントのイベントデータを記述します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.ReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
      <summary>
        指定した
        <see cref="F:C1.C1Schedule.ReminderEventArgs.Reminder" />オブジェクトを持つ
        <see cref="T:C1.C1Schedule.ReminderEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="reminder">
        <see cref="F:C1.C1Schedule.ReminderEventArgs.Reminder" />オブジェクト。
      </param>
    </member>
    <member name="P:C1.C1Schedule.ReminderEventArgs.Reminder">
      <summary>イベントを発生させたアラームを取得します。</summary>
    </member>
    <member name="T:C1.C1Schedule.CancelReminderEventHandler">
      <summary>単一のアラームを含むキャンセル可能なイベントの処理のデリゲート。</summary>
      <param name="sender">イベントのソース。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.C1Schedule.CancelReminderEventArgs" />。
      </param>
    </member>
    <member name="T:C1.C1Schedule.CancelReminderEventArgs">
      <summary>キャンセル可能な Reminder イベントのイベントデータを記述します。</summary>
    </member>
    <member name="M:C1.C1Schedule.CancelReminderEventArgs.#ctor(C1.C1Schedule.Reminder)">
      <summary>
        指定した
        <see cref="F:C1.C1Schedule.CancelReminderEventArgs.Reminder" />オブジェクトを持つ
        <see cref="T:C1.C1Schedule.CancelReminderEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="reminder">
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクト。
      </param>
    </member>
    <member name="P:C1.C1Schedule.CancelReminderEventArgs.Reminder">
      <summary>イベントを発生させたアラームを取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.CancelReminderEventArgs.Cancel">
      <summary>処理をキャンセルする場合に true を設定します。</summary>
    </member>
    <member name="T:C1.C1Schedule.Resource">
      <summary>
        <see cref="T:C1.C1Schedule.Resource" />クラスは、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに 関連付けることができるリソースを表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Resource.#ctor(System.Int32)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Resource" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        リソースキーとして使用する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Resource.#ctor(System.Guid)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Resource" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        リソースキーとして使用する
        <see cref="T:System.Guid" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Resource.#ctor">
      <summary>
        新しい
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Resource.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="T:C1.C1Schedule.ResourceCollection">
      <summary>
        <see cref="T:C1.C1Schedule.ResourceCollection" />は、C1Schedule オブジェクトモデル内のすべての使用可能なリソースを表す
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトのコレクションです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.ResourceCollection.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.ResourceCollection" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.ResourceList">
      <summary>
        <see cref="T:C1.C1Schedule.ResourceList" />コレクションは、
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトのリストです。 所有する
        <see cref="T:C1.C1Schedule.ResourceCollection" />オブジェクト内に存在する オブジェクトのみをこのリストに追加できます。
        <see cref="T:C1.C1Schedule.ResourceList" />を使用し、
        <see cref="T:C1.C1Schedule.Resource" />オブジェクトのセットを
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに関連付けます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.StatusTypeEnum">
      <summary>ステータスのタイプを決定します。</summary>
    </member>
    <member name="F:C1.C1Schedule.StatusTypeEnum.Free">
      <summary>このステータスは、その個人が社内におり、対応可能であることを意味します。</summary>
    </member>
    <member name="F:C1.C1Schedule.StatusTypeEnum.Tentative">
      <summary>このステータスは、その個人は社内にいるものの、仮の予定が入っていることを意味します。</summary>
    </member>
    <member name="F:C1.C1Schedule.StatusTypeEnum.Busy">
      <summary>このステータスは、その個人は社内にいるものの、既に別の予定が入っていて対応できないことを意味します。</summary>
    </member>
    <member name="F:C1.C1Schedule.StatusTypeEnum.OutOfOffice">
      <summary>このステータスは、その個人が外出中で対応できないことを意味します。</summary>
    </member>
    <member name="F:C1.C1Schedule.StatusTypeEnum.Custom">
      <summary>このステータスは、StatusCollection に追加されたすべてのカスタムステータスを表します。</summary>
    </member>
    <member name="T:C1.C1Schedule.Status">
      <summary>
        <see cref="T:C1.C1Schedule.Status" />クラスは、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの 空き時間ステータスを表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.Int32)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Status" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        ステータスキーとして使用する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.Guid)">
      <summary>
        指定されたキーを持つ
        <see cref="T:C1.C1Schedule.Status" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="key">
        ステータスキーとして使用する
        <see cref="T:System.Guid" />値。
      </param>
      <remarks>このコンストラクタは、ビジネスロジックでカスタムキー値の設定が必要な場合に使用します。 正しいコンストラクタオーバロード（整数または Guid キー値）を使用し、そのキー値が一意であることを確認してください。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor">
      <summary>
        デフォルトパラメータを持つ新しいカスタムの
        <see cref="T:C1.C1Schedule.Status" />オブジェクトを作成します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum)">
      <summary>
        指定したタイプを持つ
        <see cref="T:C1.C1Schedule.Status" />クラスの 新しいインスタンスを作成して初期化します。
      </summary>
      <param name="type">
        <see cref="T:C1.C1Schedule.StatusTypeEnum" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(C1.C1Schedule.StatusTypeEnum,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:C1.C1Schedule.Status" />クラスの新規インスタンスを作成し、指定された型で初期化します。
      </summary>
      <param name="type">
        <see cref="T:C1.C1Schedule.StatusTypeEnum" />値。
      </param>
      <param name="culture">
        <see cref="T:System.Globalization.CultureInfo" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.String)">
      <summary>
        指定したテキストを持つカスタムの
        <see cref="T:C1.C1Schedule.Status" />オブジェクトの新しいインスタンスを作成します。
      </summary>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.String,System.String)">
      <summary>
        指定したテキストとメニューキャプションを持つ新しいカスタム
        <see cref="T:C1.C1Schedule.Status" />オブジェクトを作成します。
      </summary>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
      <param name="menuCaption">ダイアログ内にステータスを表示するためのメニューキャプション。</param>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String)">
      <summary>
        指定した色、テキスト、およびメニューキャプションを持つ新しいカスタムの
        <see cref="T:C1.C1Schedule.Status" />オブジェクトを作成します。
      </summary>
      <param name="color">ステータスの表示に使用する色。</param>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
      <param name="menuCaption">ダイアログ内にステータスを表示するためのメニューキャプション。</param>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.Drawing.Color,System.String,System.String,C1.C1Schedule.C1Brush)">
      <summary>
        指定したパラメータを持つ新しいカスタムの
        <see cref="T:C1.C1Schedule.Status" />オブジェクトを作成します。
      </summary>
      <param name="color">ステータスの表示に使用する色。</param>
      <param name="text">
        <see cref="T:System.String" />値。
      </param>
      <param name="menuCaption">ダイアログ内にステータスを表示するためのメニューキャプション。</param>
      <param name="brush">ステータスの表示に使用するブラシ。</param>
    </member>
    <member name="M:C1.C1Schedule.Status.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>逆シリアル化用の特殊コンストラクタ。</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />。
      </param>
      <param name="context">コンテキスト情報。</param>
    </member>
    <member name="P:C1.C1Schedule.Status.StatusType">
      <summary>
        ステータスのタイプを決定する
        <see cref="T:C1.C1Schedule.StatusTypeEnum" />値を取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.StatusCollection">
      <summary>
        <see cref="T:C1.C1Schedule.StatusCollection" />は、C1Schedule オブジェクトモデル内の すべての使用可能なステータスを表す
        <see cref="T:C1.C1Schedule.Status" />オブジェクトのコレクションです。 デフォルトでは、定義済みのステータスセットが含まれます。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.StatusCollection.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.StatusCollection" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.StatusCollection.LoadDefaults">
      <summary>コレクションをデフォルト状態に戻します。</summary>
      <remarks>
        <see cref="M:C1.C1Schedule.StatusCollection.LoadDefaults" />メソッドは、 コレクションからすべてのカスタムの予定ステータスを削除し、標準ステータスのみを残します。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.StatusCollection.Item(C1.C1Schedule.StatusTypeEnum)">
      <summary>
        予定のステータスタイプで指定した
        <see cref="T:C1.C1Schedule.Status" />オブジェクトを取得します。 カスタムステータスの場合、最初の発生項目を返します。コレクション内に該当する
        <see cref="T:C1.C1Schedule.Status" />オブジェクトが存在しない場合は、null を返します。
      </summary>
      <param name="type">
        <see cref="T:C1.C1Schedule.StatusTypeEnum" />値。
      </param>
      <returns>
        <see cref="T:C1.C1Schedule.Status" />オブジェクト。
      </returns>
    </member>
    <member name="T:C1.C1Schedule.StatusList">
      <summary>
        <see cref="T:C1.C1Schedule.StatusList" />コレクションは、
        <see cref="T:C1.C1Schedule.Status" />オブジェクトのリストです。 所有する
        <see cref="T:C1.C1Schedule.StatusCollection" />オブジェクト内に存在する オブジェクトのみをこのリストに追加できます。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.DateAppointments">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.DateAppointments" />クラスは、予定の
        <see cref="T:System.Collections.Generic.List`1" />リストの単一のカレンダー日を表します。 C1PrintDocument 内で使用するための補助クラスです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointments.#ctor(System.DateTime)">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.DateAppointments" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="date">
        表示する日付を決定する
        <see cref="T:System.DateTime" />。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointments.AddAppointment(C1.C1Schedule.Appointment)">
      <summary>
        現在の日付に新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを追加します。
      </summary>
      <remarks>
        指定された
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトは、予定の一部が現在の日付にあたっている場合にのみ追加されます。
      </remarks>
      <param name="appointment">
        追加する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="P:C1.C1Schedule.Printing.DateAppointments.Date">
      <summary>
        表示する日付を決定する
        <see cref="T:System.DateTime" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.DateAppointments.HasAppointments">
      <summary>現在の日付が1つ以上の予定を含んでいる場合に true を返します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.DateAppointments.BusyStatus">
      <summary>現在の日付の利用可能なステータスを返します。</summary>
      <remarks>利用可能なステータスは、表示する日の全日イベントの利用可能なステータスに従って決定されます。</remarks>
    </member>
    <member name="P:C1.C1Schedule.Printing.DateAppointments.Appointments">
      <summary>
        表示する日のすべての予定の
        <see cref="T:System.Collections.Generic.List`1" />リストを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.DateAppointmentsCollection">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />クラスは、C1PrintDocument ドキュメントのデータソースとして利用可能な
        <see cref="T:System.Collections.ObjectModel.KeyedCollection`2" />コレクションを表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,C1.C1Schedule.AppointmentCollection)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクションからの指定された日付範囲の予定を含む、
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクション の新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        日付範囲の開始日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        日付範囲の終了日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="appointmentCollection">
        予定を取得する
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクション。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,C1.C1Schedule.AppointmentCollection,System.Boolean,System.Boolean)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクションからの指定された日付範囲の予定を含む、
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクション の新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        日付範囲の開始日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        日付範囲の終了日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="appointmentCollection">
        予定を取得する
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクション。
      </param>
      <param name="includeEmptyDays">
        コレクション内に予定の無い日付を含めるかどうかを示す
        <see cref="T:System.Boolean" />値。
      </param>
      <param name="includePrivateAppointments">
        コレクション内にプライベートな予定を含めるかどうかを示す
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,C1.C1Schedule.AppointmentCollection,C1.C1Schedule.CalendarInfo,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクションからの指定された日付範囲の予定を含む、
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクション の新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        日付範囲の開始日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        日付範囲の終了日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="appointmentCollection">
        予定を取得する
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクション。
      </param>
      <param name="calendarInfo">
        カレンダーに特化した情報を含む
        <see cref="T:C1.C1Schedule.CalendarInfo" />オブジェクト。
      </param>
      <param name="includeEmptyDays">
        コレクション内に予定の無い日付を含めるかどうかを示す
        <see cref="T:System.Boolean" />値。
      </param>
      <param name="includeWeekends">
        コレクション内に週末を含めるかどうかを示す
        <see cref="T:System.Boolean" />値。
      </param>
      <param name="includePrivateAppointments">
        コレクション内にプライベートな予定を含めるかどうかを示す
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IList{C1.C1Schedule.Appointment},System.Boolean)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクションからの予定を含む指定された日付範囲の
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクションの新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        日付範囲の開始を表す
        <see cref="T:System.DateTime" />。
      </param>
      <param name="end">
        日付範囲の終了を表す
        <see cref="T:System.DateTime" />。
      </param>
      <param name="appointments">
        予定の
        <see cref="T:System.Collections.Generic.IList`1" />リスト。
      </param>
      <param name="includeEmptyDays">
        予定なしの日をコレクションに含めるかどうかを指定する
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.#ctor(System.DateTime,System.DateTime,System.Collections.Generic.IList{C1.C1Schedule.Appointment},C1.C1Schedule.CalendarInfo,System.Boolean,System.Boolean)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.AppointmentCollection" />コレクションからの予定を含む指定された日付範囲の
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクションの新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        日付範囲の開始を表す
        <see cref="T:System.DateTime" />。
      </param>
      <param name="end">
        日付範囲の終了を表す
        <see cref="T:System.DateTime" />。
      </param>
      <param name="appointments">
        予定の
        <see cref="T:System.Collections.Generic.IList`1" />リスト。
      </param>
      <param name="calendarInfo">
        カレンダー固有の情報を含む
        <see cref="T:C1.C1Schedule.CalendarInfo" />オブジェクト。
      </param>
      <param name="includeEmptyDays">
        予定なしの日をコレクションに含めるかどうかを指定する
        <see cref="T:System.Boolean" />値。
      </param>
      <param name="includeWeekends">
        週末日をコレクションに含めるかどうかを指定する
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.GetIntervalAppointments(System.DateTime,System.DateTime,System.Boolean)">
      <summary>
        指定された日付範囲の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを含む
        <see cref="T:System.Collections.Generic.List`1" />を取得します。
      </summary>
      <param name="start">
        日付範囲の開始日を示す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        日付範囲の終了日を示す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="includeAll">指定した日付範囲に挟まれているすべての予定を含むリストを含むかどうかを指定。 この値が false の場合、指定された日付範囲から開始される予定を含むリストが返される。</param>
      <returns>
        指定された日付範囲の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを含む
        <see cref="T:System.Collections.Generic.List`1" />リスト。
      </returns>
    </member>
    <member name="M:C1.C1Schedule.Printing.DateAppointmentsCollection.GetKeyForItem(C1.C1Schedule.Printing.DateAppointments)">
      <summary>指定した項目のキー値を返します。</summary>
      <param name="item">
        <see cref="T:C1.C1Schedule.Printing.DateAppointments" />オブジェクト。
      </param>
      <returns>
        キーとして使用される
        <see cref="T:System.DateTime" />値。
      </returns>
    </member>
    <member name="P:C1.C1Schedule.Printing.DateAppointmentsCollection.Item(System.DateTime,System.DateTime)">
      <summary>
        指定された日付範囲の
        <see cref="T:C1.C1Schedule.Printing.DateAppointments" />オブジェクトを含む新しい
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクションを取得します。
      </summary>
      <remarks>結果として得られるコレクションは、常に現在のコレクションのサブセットを含みます。 このコレクションの日付範囲のっすべての日出勤日は取り除かれます。</remarks>
      <param name="start">
        日付範囲の開始日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        日付範囲の終了日を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <returns>
        指定された日付範囲の
        <see cref="T:C1.C1Schedule.Printing.DateAppointments" />を含む
        <see cref="T:C1.C1Schedule.Printing.DateAppointmentsCollection" />コレクション。
      </returns>
    </member>
    <member name="T:C1.C1Schedule.Printing.PrintContextType">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PrintContextType" />は、
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />の印刷内容を定義します。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.Printing.PrintContextType.Appointment">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの内容を表示するドキュメントです。
      </summary>
    </member>
    <member name="F:C1.C1Schedule.Printing.PrintContextType.DateRange">
      <summary>指定された日付範囲の予定を表示するドキュメントです。</summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.PreviewWrapper">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PreviewWrapper" />クラスは印刷プレビューダイアログの機能をラップします。 それは、C1.Win.C1Preview.2 アセンブリからの反映によって読み込まれる C1.Win.C1Preview.C1PrintPreviewDialog で C1.C1Preview.C1PrintDocument の内容を表示することを可能にします。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Preview(System.Object)">
      <summary>指定したオブジェクトを印刷プレビューダイアログ内に表示します。</summary>
      <param name="printDocument">
        プレビューするオブジェクト。以下の形式のいずれか： - C1.C1Preview.C1PrintDocument -
        <see cref="T:System.Drawing.Printing.PrintDocument" />-
        <see cref="T:System.ComponentModel.IBindingList" />-
        <see cref="T:System.Collections.IEnumerable" /></param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Preview(C1.C1Schedule.Printing.PrintDocumentWrapper,System.Drawing.Printing.PageSettings@)">
      <summary>
        指定された
        <see cref="T:System.Drawing.Printing.PageSettings" />オブジェクトを使用して、印刷プレビューダイアログに指定のオブジェクトを表示します。
      </summary>
      <param name="printDocument">
        プレビューする
        <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper" />オブジェクト。
      </param>
      <param name="pageSettings">
        プレビューで使用する
        <see cref="T:System.Drawing.Printing.PageSettings" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Preview(C1.C1Schedule.Printing.PrintDocumentWrapper)">
      <summary>
        指定した
        <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper" />オブジェクトを印刷プレビューダイアログ内に表示します。
      </summary>
      <param name="printDocument">
        プレビューする
        <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PreviewWrapper.Dispose">
      <summary>すべてのアンマネージリソースを解放します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PreviewWrapper.Caption">
      <summary>プレビューウィンドウのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PreviewWrapper.C1PrintPreviewDialog">
      <summary>プレビューに使用する C1.Win.C1Preview.C1PrintPreviewDialog オブジェクトを取得または設定します。</summary>
      <remarks>アプリケーションに C1.Win.C1Report.2 アセンブリへの参照が含まれる場合は、コードから このプロパティを設定できます。 この場合は、エンドユーザーに表示する前に、さまざまな C1.Win.C1Preview.C1PrintPreviewDialog プロパティを設定できます。</remarks>
    </member>
    <member name="T:C1.C1Schedule.Printing.PrintDocumentWrapper">
      <summary>
        C1.C1Preview.C1PrintDocument の機能をラップする
        <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper" />です。 C1.C1Preview.2 アセンブリのリフレクションによる C1.C1Preview.C1PrintDocument コンポーネントを読み込みます。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.GetDocumentInfoProperty(System.String)">
      <summary>ドキュメントの DocumentInfo オブジェクトの指定されたプロパティの値を返します。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.AddExternalAssembly(System.String)">
      <summary>現在読み込まれているドキュメントに指定された外部アセンブリ参照を追加します。</summary>
      <param name="assemblyName">
        追加するアセンブリ名の The
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.IO.Stream)">
      <summary>ストリームから現在のドキュメントを読み込みます。 ストリームには C1D 形式のドキュメントが含まれていなければなりません。</summary>
      <param name="stream">ドキュメントを読み込むストリーム。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.IO.Stream,System.Object)">
      <summary>ストリームから現在のドキュメントを読み込みます。</summary>
      <param name="stream">ドキュメントを読み込むストリーム。</param>
      <param name="documentFormat">使用するドキュメントフォーマット。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.String)">
      <summary>ファイルから現在のドキュメントを読み込みます。 ファイルフォーマット（c1d あるいは c1dx）は拡張子によって決定されます。 フォーマットは拡張子から判別できないときは、c1d 形式とみなします。</summary>
      <param name="fileName">ファイル名。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Load(System.String,System.Object)">
      <summary>ファイルから現在のドキュメントを読み込みます。</summary>
      <param name="fileName">ファイル名。</param>
      <param name="documentFormat">使用するドキュメントフォーマット。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print">
      <summary>ドキュメントを印刷します。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print(System.Drawing.Printing.PrinterSettings)">
      <summary>ドキュメントを印刷します。</summary>
      <param name="printerSettings">使用するプリンタ設定。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print(System.Drawing.Printing.PrinterSettings,System.Boolean)">
      <summary>ドキュメントを印刷します。</summary>
      <param name="printerSettings">使用するプリンタ設定。</param>
      <param name="showProgress">進行ダイアログを表示するかどうかを示すフラグ。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Print(System.Drawing.Printing.PrinterSettings,System.Drawing.Printing.PageSettings,System.Boolean)">
      <summary>ドキュメントを印刷します。</summary>
      <param name="printerSettings">使用するプリンタ設定。</param>
      <param name="defaultPageSettings">使用するデフォルトページ設定。</param>
      <param name="showProgress">進行ダイアログを表示するかどうかを示すフラグ。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Generate">
      <summary>ドキュメントを生成します。</summary>
      <returns>ドキュメント生成時にエラーが発生しなかった場合は true。</returns>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.ReadTags(System.Collections.Generic.Dictionary{System.String,C1.C1Schedule.Printing.TagInfo}@)">
      <summary>現在のドキュメントタグを含む指定されたタグディクショナリを更新します。</summary>
      <param name="tags">
        更新用のタグの
        <see cref="T:System.Collections.Generic.Dictionary`2" />ディクショナリ。
      </param>
      <remarks>指定されたディクショナリにいずれかのドキュメントタグが含まれていない場合、このタグがディクショナリに追加されます。 ディクショナリに同じ名前とタイプを持つタグが含まれる場合、このタグは変更されません。 ディクショナリに同じ名前と異なるタイプを持つタグが含まれる場合、このタグは新しいタグに置き換えられます。</remarks>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.SetDocumentTag(System.String,System.Object)">
      <summary>指定されたドキュメントタグの値を設定します。</summary>
      <param name="name">
        ドキュメントタグの名前を指定する
        <see cref="T:System.String" />値。
      </param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.AddDocumentTag(System.String,System.Object)">
      <summary>指定された値でドキュメントに新しいタグを追加します。</summary>
      <param name="name">
        ドキュメントタグの名前を指定する
        <see cref="T:System.String" />値。
      </param>
      <param name="value">設定する値。</param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Clear">
      <summary>ドキュメントをクリアし、すべてのプロパティをデフォルト値に初期化します。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintDocumentWrapper.Dispose">
      <summary>すべてのアンマネージリソースを解放します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintDocumentWrapper.C1PrintDocument">
      <summary>ラップされた C1PrintDocument インスタンスを取得または設定します。</summary>
      <remarks>アプリケーションに C1.C1Preview.2 アセンブリへの参照が含まれている場合は、コードからこのプロパティを設定します。 このケースでは、コードから直接 C1PrintDocument を操作できます。</remarks>
    </member>
    <member name="T:C1.C1Schedule.Printing.PrintInfo">
      <summary>スケジュールの印刷を制御するために使用するオブジェクトです。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Print">
      <summary>現在選択されているビューのデフォルトの印刷スタイルをプリンタに送ります。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Print(C1.C1Schedule.Printing.PrintStyle)">
      <summary>指定された印刷スタイルをプリンタに送ります。</summary>
      <param name="style">
        印刷する
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Print(C1.C1Schedule.Appointment)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトをプリンタに送ります。
      </summary>
      <param name="appointment">
        印刷する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Print(C1.C1Schedule.Printing.PrintStyle,System.DateTime,System.DateTime)">
      <summary>指定された印刷スタイルをプリンタに送ります。</summary>
      <param name="style">
        印刷する
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクト。
      </param>
      <param name="start">
        印刷範囲の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        印刷範囲の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview">
      <summary>印刷操作によって生成された出力内容をエンドユーザーによってプレビュー可能にする 別個のアプリケーションウィンドウを開きます。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview(C1.C1Schedule.Printing.PrintStyle)">
      <summary>印刷操作によって生成された出力内容をエンドユーザーによってプレビュー可能にする 別個のアプリケーションウィンドウを開きます。</summary>
      <param name="style">
        プレビューする
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview(C1.C1Schedule.Appointment)">
      <summary>印刷操作によって生成された出力内容をエンドユーザーによってプレビュー可能にする 別個のアプリケーションウィンドウを開きます。</summary>
      <param name="appointment">
        プレビューする
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.Preview(C1.C1Schedule.Printing.PrintStyle,System.DateTime,System.DateTime)">
      <summary>印刷操作によって生成された出力内容をエンドユーザーによってプレビュー可能にする 別個のアプリケーションウィンドウを開きます。</summary>
      <param name="style">
        プレビューする
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクト。
      </param>
      <param name="start">
        印刷範囲の開始日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        印刷範囲の終了日時を指定する
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintInfo.LoadStyle(C1.C1Schedule.Printing.PrintStyle)">
      <summary>C1PrintDocument コントロールのスタイル定義を読み込みます。</summary>
      <param name="style">
        印刷ドキュメントオブジェクト内の読み込む
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />。
      </param>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.IsPrintingEnabled">
      <summary>
        印刷処理を有効にするかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
      <remarks>C1PrintDocument コントロールが初期化できない場合、実行時にはこのプロパティは false を返します。</remarks>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.IsPreviewEnabled">
      <summary>
        プレビューが有効かどうかを決定する
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.PrintStyles">
      <summary>
        印刷処理の利用可能なすべてのスタイルを含む
        <see cref="T:C1.C1Schedule.Printing.PrintStyleCollection" />コレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.PrintDocumentHelper">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.PreviewHelper">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PreviewWrapper" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.ShowOptionsForm">
      <summary>
        印刷処理の前にオプション画面を表示するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.ShowProgressForm">
      <summary>進行状況フォームが表示されるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.CurrentStyle">
      <summary>
        印刷処理の現在選択されている
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.HidePrivateAppointments">
      <summary>
        ドキュメント内のプライベートな予定の詳細を隠すかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintInfo.PrintSelectedCalendar">
      <summary>
        コントロールが結果のドキュメントで現在選択されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />からの予定のみを表示するかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。 デフォルトでは、C1Schedule グルーピングに関係なく、すべての予定が結果のドキュメントに含まれます。 現在選択されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />からの予定を表示するには、このプロパティを true に設定します。
      </summary>
      <remarks>このプロパティは C1Schedule.GroupBy プロパティが設定されている場合にのみ有効になります。</remarks>
    </member>
    <member name="T:C1.C1Schedule.Printing.PrintStyle">
      <summary>
        スケジュールコントロールの単一の印刷スタイルを表す
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />クラスです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyle.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyle.Load(C1.C1Schedule.Printing.PrintDocumentWrapper)">
      <summary>指定された C1PrintDocument コントロールにスタイル定義を読み込みます。</summary>
      <param name="printDoc">
        <see cref="T:C1.C1Schedule.Printing.PrintDocumentWrapper" />オブジェクト。
      </param>
      <returns>読み込みが成功すれば true、そうでなければ false。</returns>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyle.IsStandardTag(C1.C1Schedule.Printing.TagInfo)">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />クラスおよび PrintOptionsForm クラスによって使用される定義済みタグの１つで指定されたタグかどうかを示す
        <see cref="T:System.Boolean" />値を返します。
      </summary>
      <param name="tag"></param>
      <returns></returns>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.StyleName">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PrintStyleCollection" />内で使用する一意のスタイル名を決定する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.Description">
      <summary>
        スタイルの説明を決定する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.DisplayName">
      <summary>
        スタイルの表示名を決定する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
      <remarks>
        この値のデフォルトスタイルは、自身のコントロールのカルチャに従ってローカライズされた
        <see cref="P:C1.C1Schedule.Printing.PrintStyle.Description" />とともに初期化されます。
      </remarks>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.DocumentFormat">
      <summary>
        ソースドキュメントのフォーマットを決定する
        <see cref="T:System.Int32" />値を取得します。 .c1d フォーマットの場合は 0、.c1dxフォーマットの場合は 1 を返します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.Context">
      <summary>
        現在の
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクトが単一の予定を表示するか、あるいは指定された日時範囲の予定を表示するかを指定する
        <see cref="T:C1.C1Schedule.Printing.PrintContextType" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.DateHeadingsFont">
      <summary>
        日付ヘッダの印刷に使用する
        <see cref="T:System.Drawing.Font" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.AppointmentsFont">
      <summary>
        予定の印刷に使用する
        <see cref="T:System.Drawing.Font" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderFont">
      <summary>
        ページヘッダの印刷に使用する
        <see cref="T:System.Drawing.Font" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterFont">
      <summary>
        ページフッタの印刷に使用する
        <see cref="T:System.Drawing.Font" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderColor">
      <summary>
        ページヘッダの印刷に使用する
        <see cref="T:System.Drawing.Color" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterColor">
      <summary>
        ページフッタの印刷に使用する
        <see cref="T:System.Drawing.Color" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.PreviewImage">
      <summary>
        UI 内にスタイル情報を表示するために使用する、スタイルの小さいプレビューを表す
        <see cref="T:System.Drawing.Image" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.CurrentPageSettings">
      <summary>印刷の PageSettings を取得または設定します。</summary>
      <remarks>エンドユーザーが実行時にスタイルのページ設定を変更した場合、変更された設定内容は次回以降の印刷あるいはプレビュー時のデフォルト設定として使用されます。</remarks>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderLeft">
      <summary>
        ページヘッダの左部分で使用する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderCenter">
      <summary>
        ページヘッダの中央部分で使用する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.HeaderRight">
      <summary>
        ページヘッダの右部分で使用する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterLeft">
      <summary>
        ページフッタの左部分で使用する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterCenter">
      <summary>
        ページフッタの中央部分で使用する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.FooterRight">
      <summary>
        ページフッタの右部分で使用する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.ReverseOnEvenPages">
      <summary>
        ページヘッダおよびページフッタを偶数ページで反転させるかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.HidePrivateAppointments">
      <summary>
        ドキュメント内のプライベートな予定の詳細を隠すかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.StyleSource">
      <summary>
        C1PrintDocument テンプレートのソースを決定する
        <see cref="T:System.String" />値を取得または設定します。リソースの名前か、.c1d あるいは.cidx ファイル名となります。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.IsLoaded">
      <summary>現在のスタイルが C1PrintDocument 内に読み込まれていれば true を返します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.PrintStyle.Tags">
      <summary>
        C1PrintDocument タグについての情報を含む
        <see cref="T:System.Collections.Generic.Dictionary`2" />ディクショナリを取得します。
      </summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.PrintStyleCollection">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.PrintStyleCollection" />クラスは、スケジューラ印刷スタイルのキーのコレクションを表します。
        <see cref="P:C1.C1Schedule.Printing.PrintStyle.StyleName" />プロパティはコレクションのキーとして使用されます。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.LoadDefaults">
      <summary>デフォルトの印刷スタイルでコレクションを満たします。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.AddRange(C1.C1Schedule.Printing.PrintStyle[])">
      <summary>
        コレクションに
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクトのセットを追加します。
      </summary>
      <param name="items">
        追加する印刷スタイルを含む
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />型の配列。
      </param>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.GetUniqueStyleName">
      <summary>
        一意のスタイル名として使用することができる
        <see cref="T:System.String" />値を返します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.GetKeyForItem(C1.C1Schedule.Printing.PrintStyle)">
      <summary>指定された項目からキーを抽出します。</summary>
      <param name="item">
        キーの抽出元の
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクト。
      </param>
      <returns>指定された項目のキー。</returns>
    </member>
    <member name="M:C1.C1Schedule.Printing.PrintStyleCollection.InsertItem(System.Int32,C1.C1Schedule.Printing.PrintStyle)">
      <summary>指定された項目をコレクション内の指定されたインデックスに挿入します。</summary>
      <param name="index">項目が挿入される位置のゼロから始まるインデックス。</param>
      <param name="item">コレクションに挿入する項目。</param>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagInfo">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.TagInfo" />クラスは、C1.C1Preview.Tag クラスの外見を表します。 ドキュメントタグの情報を取得したり、ドキュメントを出力する前にタグの値を設定する際に、このクラスを使用してください。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInfo.Value">
      <summary>C1.C1Preview.Tag オブジェクトの値を取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInfo.ShowInDialog">
      <summary>
        現在のタグを表示して、タグ入力ダイアログ内でユーザー
        <see cref="P:C1.C1Schedule.Printing.TagInfo.Value" />の編集を許可するかどうかを示す値を取得または設定します。 デフォルト値は true です。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInfo.Name">
      <summary>ドキュメント内で定義されているタグオブジェクトの一意名を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInfo.Description">
      <summary>
        タグの説明を取得または設定します。設定値が空でない場合、タグ入力ダイアログ内のラベルとして使用されます（空値の場合は、
        <see cref="P:C1.C1Schedule.Printing.TagInfo.Name" />プロパティの値が使用されます）。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInfo.Type">
      <summary>現在のタグの型を取得します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInfo.InputParams">
      <summary>
        現在のタグのエディタをカスタマイズするためにタグ入力ダイアログで使用される
        <see cref="T:C1.C1Schedule.Printing.TagInputParams" />オブジェクトを取得します。 デフォルトでは、このプロパティは null です。
      </summary>
      <remarks>
        <see cref="T:C1.C1Schedule.Printing.TagInputParams" />クラスは抽象クラスです。現在のタグの型に応じて、このクラスから派生する以下の型を利用できます：
        <list type="bullet"><item><term><see cref="T:C1.C1Schedule.Printing.TagStringInputParams" /></term><description>文字列型の入力をカスタマイズするために使用されます。</description></item><item><term><see cref="T:C1.C1Schedule.Printing.TagDateTimeInputParams" /></term><description><see cref="T:System.DateTime" />型の入力をカスタマイズするために使用されます。
            </description></item><item><term><see cref="T:C1.C1Schedule.Printing.TagListInputParams" /></term><description>タグの値の入力に ListBox あるいは ComboBox を使用することを許可します。</description></item><item><term><see cref="T:C1.C1Schedule.Printing.TagBoolInputParams" /></term><description>ブール値の入力にチェックボックスを使用することを許可します。</description></item><item><term><see cref="T:C1.C1Schedule.Printing.TagNumericInputParams" /></term><description>整数値の入力をカスタマイズするために使用されます。</description></item></list></remarks>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagInputParams">
      <summary>個別のタグの入力をカスタマイズするためにタグ入力ダイアログで使用される、特殊なクラスのベースとなる抽象クラスです。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagInputParams.IsShowLabel">
      <summary>入力コントロールに隣接する、タグの説明を含むラベルを入力フォームに表示すべきかどうかを示す値を取得または設定します。</summary>
      <returns>ラベルを表示すべき場合は true、そうでなければ false。</returns>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagStringInputParams">
      <summary>文字列値の入力のためのカスタマイズパラメータを表します。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.TagStringInputParams.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.TagStringInputParams" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagStringInputParams.MaxLength">
      <summary>入力文字列の最大の長さを取得または設定します。</summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagDateTimeInputParams">
      <summary>
        <see cref="T:System.DateTime" />タグ値の入力のためのカスタマイズパラメータを表します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.TagDateTimeInputParams.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.TagDateTimeInputParams" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagDateTimeInputParams.Format">
      <summary>日付／時刻ピッカーで使用するフォーマットを取得または設定します。 Long = 1 - ユーザーの OS で設定されている長い形式の日付フォーマット。 Short = 2 - ユーザーの OS で設定されている短い形式の日付フォーマット。 Time = 4 - ユーザーの OS で設定されている時刻フォーマット。 Custom = 8 - カスタムフォーマットの日付／時刻値。</summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagListInputParams">
      <summary>リストから選択可能なタグ値の入力のためのカスタマイズパラメータを表します。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.TagListInputParams.#ctor">
      <summary>
        Initializes a new instance of the
        <see cref="T:C1.C1Schedule.Printing.TagListInputParams" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagListInputParams.Type">
      <summary>入力に使用するリストの型を取得または設定します。 ListBox = 0。 ComboBox = 1。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagListInputParams.Items">
      <summary>リスト項目のコレクションを取得します。</summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagBoolInputParams">
      <summary>ブール型のタグ値の入力のためのカスタマイズパラメータを表します。</summary>
    </member>
    <member name="T:C1.C1Schedule.Printing.TagNumericInputParams">
      <summary>整数型のタグ値の入力のためのカスタマイズパラメータを表します。</summary>
    </member>
    <member name="M:C1.C1Schedule.Printing.TagNumericInputParams.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.Printing.TagNumericInputParams" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagNumericInputParams.Minimum">
      <summary>指定可能な値の最小値を取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagNumericInputParams.Maximum">
      <summary>指定可能な値の最大値を取得または設定します。</summary>
    </member>
    <member name="P:C1.C1Schedule.Printing.TagNumericInputParams.Increment">
      <summary>スピンボタンの増加数を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.C1Calendar">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />は、エンドユーザーが
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロール内の日付を ナビゲーションするための補助コントロールです。MS Outlook 内の 対応するコントロールと同様に動作します。スケジュールアプリケーションは、
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />を使用せずに作成できます。
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />は、一度に単一または複数の月の日付を表示します。 コントロール内に同時に表示する月数は、コントロールの現在のサイズに応じて自動的に選択され、 コントロールがサイズ変更されるたびに変更されます。
      </summary>
      <remarks>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールを使用しなくても機能的なスケジュールアプリケーションを作成することは可能です。
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />は視覚的なナビゲーション機能を提供します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.#ctor">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.ShouldSerializeCalendarInfo">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.ShouldSerializeTheme">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.ShouldSerializeVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle" />プロパティが明示的に設定され、 維持されるかどうかを決める値を取得します。
      </summary>
      <returns>プロパティがユーザーによって明示的に設定された場合は true です。</returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.ResetVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle" />アンビエントプロパティの値をリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.OnAmbientChangedVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle" />プロパティが変更されたときに呼び出されるメソッド。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.GetDisplayRange(System.Boolean)">
      <summary>コントロールに表示される日付の下限と上限を表す日付情報を返します。</summary>
      <param name="visible">表示する月に完全に含まれる日付のみを取得する場合は true、 そうでない場合は false。</param>
      <returns>表示するカレンダーの開始日と終了日。</returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Calendar.Refresh">
      <summary>これにより、コントロールは、そのクライアント領域を無効にして、 ただちにそれ自体と任意の子コントロールを再描画します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Calendar.SelectionChanged">
      <summary>選択された日の範囲が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Calendar.BeforeDayTooltipShow">
      <summary>日ツールチップが表示される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Calendar.BeforeDayFormat">
      <summary>日ツールチップが表示される前に発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.Schedule">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールに関連付けられた
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールへの参照を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.CalendarInfo">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />の
        <see cref="P:C1.Win.C1Schedule.C1Calendar.CalendarInfo" />オブジェクトを取得します。
      </summary>
      <remarks>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールが
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールと関連付けられている場合、 このプロパティは
        <see cref="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo" />プロパティと同じ値を返します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.ShowNavigationButtons">
      <summary>コントロールが月ヘッダーにナビゲーションボタンを表示するかどうかを指定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.ShowWeekNumbers">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールが 各日付行の左端に週番号を表示するかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.MaxSelectionCount">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロール内で選択できる最大日数を取得または設定します。 デフォルト値は42です。
      </summary>
      <exception cref="T:System.ArgumentException">値は１未満です。</exception>
      <remarks>C1Calendar コントロールが C1Schedule コントロールにアタッチされ、 プロパティ値が C1Schedule ナビゲーションで許容される値を超える場合、このプロパティは無視されます。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.DropDownMonthCount">
      <summary>月ヘッダーのドロップダウン月／年セレクタの項目数を取得または設定します。 デフォルト値は9です。</summary>
      <remarks>このプロパティ値は１より小さくしたり、12 を超えたりすることはできません。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.CalendarDimensions">
      <summary>コントロール内に表示する月数の最大値を取得または設定します。 実際の月数は、使用可能なスペースによって決まります。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.CurrentMonthDisplayOffset">
      <summary>現在の月表示オフセットを取得または設定します。</summary>
      <example>
        この例は、多次元カレンダーの中央に現在の月を表示します。
        <code>c1Calendar1.CalendarDimensions = 3; c1Calendar1.CurrentMonthDisplayOffset = 1;</code></example>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.Theme">
      <summary>
        コントロールの外観を決定する
        <see cref="P:C1.Win.C1Schedule.C1Calendar.Theme" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.SelectedDates">
      <summary>選択した日の配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.BoldedDates">
      <summary>太字の日の配列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.VisualStyle">
      <summary>
        コントロールの視覚スタイルを決定する
        <see cref="P:C1.Win.C1Schedule.C1Calendar.VisualStyle" />値を 取得または設定します。 デフォルトは、
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue" />です。
      </summary>
      <remarks>
        <para>
          このプロパティを任意の値に設定すると、
          <see cref="P:C1.Win.C1Schedule.C1Calendar.Theme" />プロパティの値が変更されます。
        </para>
        <para>
          このプロパティを
          <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom" />値に設定すると、 現在使用しているテーマの編集可能なコピーが作成されます。新しいテーマは
          <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom" />スタイルと、 Name プロパティに一意の文字列を持っています。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Calendar.RightToLeftLayout">
      <summary>コントロールを右から左へレイアウトできるかどうかを示す値を取得または設定します。</summary>
      <remarks>RightToLeft プロパティと RightToLeftLayout プロパティの両方が true の場合、コントロールは右から左へのレイアウトで表示されます。</remarks>
    </member>
    <member name="T:C1.Win.C1Schedule.C1Schedule">
      <summary>
        <para>
          <see cref="T:C1.Win.C1Schedule.C1Schedule" />は、エンドユーザーによる スケジュールアプリケーションのインタラクティブ操作の実装に使用するコントロールです。
        </para>
        <para>このコントロールの主要目的は、可能なデータビューの１つを使用し、 フォーム上にスケジュールされたデータ（予定）を表示することです。</para>
        <para>これにより、予定を作成、編集、削除でき、エンドユーザーによる 予定表のスケジュールに必要なその他すべてのアクションも 実行できます。</para>
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.NavigateToScheduleGroup(System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールを、 指定された増分だけ別の
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトに移動したり、戻ったりします。
      </summary>
      <param name="increment">
        移動するグループ数を指定する
        <see cref="T:System.Int32" />値。
      </param>
      <remarks>
        このメソッドは
        <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy" />プロパティが設定されているときにのみ有効になります。
      </remarks>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.Compare(C1.C1Schedule.Appointment,C1.C1Schedule.Appointment)">
      <summary>
        それぞれの開始時刻と件名に基づいて、２つの
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを比較します。
      </summary>
      <param name="x">
        １つ目の比較対象
        <see cref="T:C1.C1Schedule.Appointment" />。
      </param>
      <param name="y">
        ２つ目の比較対象
        <see cref="T:C1.C1Schedule.Appointment" />。
      </param>
      <returns>
        比較結果を判定する
        <see cref="T:System.Int32" />値。
      </returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.#ctor">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネントの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.ShouldSerializeTheme">
      <summary></summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.ShouldSerializeVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle" />プロパティが明示的に設定され、 維持されるかどうかを決める値を取得します。
      </summary>
      <returns>プロパティがユーザーによって明示的に設定された場合は true です。</returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.ResetVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle" />アンビエントプロパティの値をリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.OnAmbientChangedVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle" />プロパティが変更されたときに呼び出されるメソッド。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.GetDateTimeAtPoint(System.Drawing.Point)">
      <summary>
        スクリーン座標で指定された Schedule 内の位置の
        <see cref="T:System.DateTime" />値を返します。
      </summary>
      <param name="location">
        スクリーン座標の
        <see cref="T:System.Drawing.Point" />値。
      </param>
      <returns>
        指定された位置がスケジュール領域内であれば、指定位置の
        <see cref="T:System.DateTime" />値。それ以外は
        <see cref="P:C1.Win.C1Schedule.C1Schedule.CurrentDate" />の値。
      </returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.GetAppointmentAtPoint(System.Drawing.Point)">
      <summary>
        画面上の特定のポイントにあるスケジュールに配置されている
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを返します。
      </summary>
      <param name="location">
        画面座標内の
        <see cref="T:System.Drawing.Point" />値。
      </param>
      <returns>
        指定されたポイントに
        <see cref="T:C1.C1Schedule.Appointment" />がある場合はその値。ない場合は Null。
      </returns>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.GoToDate(System.DateTime)">
      <summary>指定した日付をスケジューラの開始日として設定します。 これは、この日付にスケジューラがそのデータを表示することを意味します。 ビュータイプはこの操作によって変更されません。</summary>
      <param name="date">
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.EnsureVisibleTime(System.TimeSpan)">
      <summary>必要に応じて内容をスクロールし、指定された時刻がコントロール内に表示されるようにします。 このメソッドは、MonthView モードおよび Office 2003 形式の WeekView モードでは機能しません。</summary>
      <param name="time"></param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.ShowDates(System.DateTime[])">
      <summary>適切なビュータイプを選択し、スケジューラ内に指定した日付を表示します。</summary>
      <param name="dates">
        <see cref="T:System.DateTime" />値の配列。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.ShowDates(System.DateTime[],System.Nullable{C1.Win.C1Schedule.ScheduleViewEnum})">
      <summary>スケジューラ内の指定した日付を指定したビュータイプで表示します。</summary>
      <param name="dates">
        <see cref="T:System.DateTime" />値の配列。
      </param>
      <param name="view">
        表示する
        <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum" />値。 このパラメータに値がない場合は、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールは指定した日付に基づいて最適なビューを選択します。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.Export(System.Object,System.String)">
      <summary>
        <see cref="T:System.Windows.Forms.SaveFileDialog" />を表示し、指定したデータを選択したファイルにエクスポートします。
      </summary>
      <param name="parameter">
        エクスポートする
        <see cref="T:System.Object" />。 このパラメータは、次のいずれかになります:
        <list type="bullet"><item><term>null</term><description>エクスポートする、すべての C1Schedule データ;</description></item><item><term><see cref="T:C1.C1Schedule.Appointment" />;
            </term></item><item><term><see cref="T:System.Collections.Generic.IList`1" />。
            </term></item></list></param>
      <param name="dialogTitle">
        <see cref="T:System.String" />値は SaveFileDialog タイトルとして使用されます。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.Import(System.String)">
      <summary>
        <see cref="T:System.Windows.Forms.OpenFileDialog" />を表示し、選択したファイルからデータのエクスポートを試みます。
      </summary>
      <param name="dialogTitle">
        OpenFileDialog タイトルとして使用される
        <see cref="T:System.String" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.CreateAppointment">
      <summary>
        デフォルト設定を持つ新しい
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それを［予定の編集］ダイアログに表示して、
        <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments" />コレクションに追加します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.CreateAllDayEvent">
      <summary>
        新しい終日の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それを［予定の編集］ダイアログに表示して、
        <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments" />コレクションに追加します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.CreateReccuringAllDayEvent">
      <summary>
        新しい定期的な終日の
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それを［予定の編集］ダイアログに表示して、
        <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments" />コレクションに追加します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.CreateReccuringAppointment">
      <summary>
        新しい定期的な
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを作成し、 それを［予定の編集］ダイアログに表示して、
        <see cref="P:C1.C1Schedule.AppointmentStorage.Appointments" />コレクションに追加します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.EditRecurrence(C1.C1Schedule.Appointment)">
      <summary>
        指定された
        <see cref="T:C1.C1Schedule.Appointment" />の既存または新しく作成された
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクトを編集するには、
        <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm" />ダイアログを開きます。
      </summary>
      <param name="appointment">
        編集する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.EditAppointment(C1.C1Schedule.Appointment)">
      <summary>
        指定した
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを［予定の編集］ダイアログ内に表示します。
      </summary>
      <param name="app">
        編集する
        <see cref="T:C1.C1Schedule.Appointment" />。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.RemoveAppointment(C1.C1Schedule.Appointment)">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentStorage" />から
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを削除します。
      </summary>
      <param name="app">
        削除する
        <see cref="T:C1.C1Schedule.Appointment" />。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.SelectAppointment(C1.C1Schedule.Appointment,System.Boolean)">
      <summary>
        ユーザーインタフェース内の指定された
        <see cref="T:C1.C1Schedule.Appointment" />を選択します。
      </summary>
      <remarks>
        このメソッドは、現在のビューを変更したり、スクロールは行いません。 ビュー内に
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを表示させるには、次のように
        <see cref="M:C1.Win.C1Schedule.C1Schedule.GoToDate(System.DateTime)" />メソッドを使用してください：
        <code>GoToDate(appointment.Start);</code></remarks>
      <param name="appointment">
        選択する
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクト。
      </param>
      <param name="extendSelection">
        選択方法を指定する
        <see cref="T:System.Boolean" />値。 true の場合、指定された
        <see cref="T:C1.C1Schedule.Appointment" />は現在の選択内容に追加される。 false の場合、現在の選択内容は指定された
        <see cref="T:C1.C1Schedule.Appointment" />に置き換えられる。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate">
      <summary>
        <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate" />メソッドが呼び出されるまで コントロールを描画させないようにします。
      </summary>
      <remarks>
        <see cref="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate" />への呼び出しは、
        <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate" />への呼び出しとペアにする必要があります。 try ... finally ステートメントを使用し、
        <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate" />メソッドが常に呼び出されるようにします。
      </remarks>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.EndUpdate">
      <summary>
        描画が
        <see cref="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate" />メソッドによって保留された後に、 コントロールの描画を再開します。
      </summary>
      <remarks>
        <see cref="M:C1.Win.C1Schedule.C1Schedule.BeginUpdate" />への呼び出しは、
        <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate" />への呼び出しとペアにする必要があります。 try ... finally ステートメントを使用し、
        <see cref="M:C1.Win.C1Schedule.C1Schedule.EndUpdate" />メソッドが常に呼び出されるようにします。
      </remarks>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.OnHandleCreated(System.EventArgs)">
      <summary>デフォルトの動作をオーバーライドします。</summary>
      <param name="e"></param>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.Refresh">
      <summary>コントロールをリフレッシュします。</summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1Schedule.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.IsGrouped">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールでグループ化が設定されているかどうかを判定する
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedGroupItem">
      <summary>
        選択されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを取得するか、選択が空の場合は null を返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.GroupPageSize">
      <summary>
        同時に UI に表示される
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトの最大数を決定する
        <see cref="T:System.Int32" />値を取得または設定します。 この値を増やすとパフォーマンスに影響を与える場合があります。
      </summary>
      <value>デフォルト値は２です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.GroupBy">
      <summary>
        グループ化のタイプを決定する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
      <value>デフォルト値は空の文字列です。</value>
      <remarks>
        <para>
          このプロパティは、サポートされる次のキーワードのいずれかと同等に使用できます。
          <list type="bullet"><item><description>グループ化しない場合、</description><term>空の文字列</term>。
            </item><item><description>Appointment.Owner プロパティ値によってグループ化する場合、</description><term>"Owner"</term>。
            </item><item><description>Appointment.Categories プロパティ値によってグループ化する場合、</description><term>"Category"</term>。
            </item><item><description>Appointment.Links プロパティ値によってグループ化する場合、</description><term>"Contact"</term>。
            </item><item><description>Appointment.Resources プロパティ値によってグループ化する場合、</description><term>"Resource"</term>。
            </item></list></para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowEmptyGroupItem">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールが空のグループ項目を表示するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
      <value>デフォルト値は false です。</value>
      <remarks>
        このプロパティは
        <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy" />プロパティが設定されているときにのみ有効になります。 このプロパティを True に設定すると、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールはオーナー（リソース、連絡先、またはカテゴリ）の割り当てなしでグループ項目を表示します。 このグループ項目には、他のグループ項目に分類されないすべての予定が含まれます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowGroupNavigation">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールがグループナビゲーションボタンを表示するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
      <value>デフォルト値は true です。</value>
      <remarks>
        このプロパティは
        <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy" />プロパティが設定されているときにのみ有効になります。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.EmptyGroupName">
      <summary>
        <see cref="P:C1.Win.C1Schedule.ScheduleGroupItem.Name" />プロパティのデフォルト値として使用される
        <see cref="T:System.String" />値を取得または設定します。 デフォルト値は "Calendar" です。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.GroupItems">
      <summary>
        現在設定されているグループ化のタイプに対応する、利用可能なすべての
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトのコレクションを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.VisibleGroupItems">
      <summary>
        現在表示されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトのコレクションを取得します。 このコレクションは、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールのテンプレート内で XAML に使用できます。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.Settings">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="T:C1.Win.C1Schedule.C1ScheduleSettings" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.AppointmentComparison">
      <summary>
        月および Office 2003 週ビューの予定をソートするために
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールによって使用される
        <see cref="T:System.Comparison`1" />デリゲートを取得または設定します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeViewChange">
      <summary>
        次のアクションの直前に発生します。
        <para>- 関連付けられた C1Calendar コントロールによって、表示している日付範囲および／またはビュータイプが変更されるとき。</para><para>
          -
          <see cref="M:C1.Win.C1Schedule.C1Schedule.ShowDates(System.DateTime[])" />メソッドによって、表示している日付範囲および／またはビュータイプが変更されるとき。
        </para></summary>
      <remarks>アクションのキャンセル、他のビュータイプの設定、他の日付範囲の設定を行う場合、 BeforeViewChangeEventArgs プロパティを変更します。</remarks>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentTooltipShow">
      <summary>予定のツールチップが表示される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentFormat">
      <summary>ビュー上に表示される予定の件名をフォーマットする前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeTimeFormat">
      <summary>時間間隔が書式設定される前に発生します。</summary>
      <remarks>デフォルトの時間間隔の外観を変更するには、このイベントを使用します。 たとえば、別々の日に別々の勤務時間を表示します。</remarks>
      <example>
        このサンプルは、
        <see cref="T:C1.Win.C1Schedule.BeforeTimeFormatEventArgs" />プロパティに応じて時間間隔の外観を変更する方法を示します。
        <code>private void c1Schedule1_BeforeTimeFormat(object sender, BeforeTimeFormatEventArgs e) { if (e.Start.TimeOfDay == TimeSpan.FromMinutes(120)) { e.WorkTime = true; if (e.Start.DayOfWeek == DayOfWeek.Sunday) { e.Background = Color.Red; } } else if (e.Start.TimeOfDay == TimeSpan.FromMinutes(240) &amp;&amp; e.Start.DayOfWeek != DayOfWeek.Sunday) { e.Background = c1Schedule1.Theme.Palette.FreeHourBorder; } else { if (e.Start.DayOfWeek == DayOfWeek.Sunday &amp;&amp; e.Duration.TotalDays == 1) { e.Background = Color.Navy; } } }</code></example>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeGroupHeaderFormat">
      <summary>グループヘッダーが書式設定される前に発生します。</summary>
      <remarks>デフォルトのグループヘッダーの外観を変更するには、このイベントを使用します。 グループヘッダーのスタイル、タブの形状、または表示されるコンテンツを変更できます。</remarks>
      <example>
        このサンプルは、
        <see cref="T:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs" />プロパティに応じてグループヘッダーの外観を変更する方法を示します。
        <code>private void c1Schedule1_BeforeGroupHeaderFormat(object sender, BeforeGroupHeaderFormatEventArgs e) { Contact owner = e.Group.Owner as Contact; if (owner != null) { TestSchedule.NwindDataSet.EmployeesRow row = this.nwindDataSet.Employees.FindByEmployeeID((int)owner.Key[0]); if (row != null) { string imageName = "photo" + row.EmployeeID + ".bmp"; if (File.Exists(imageName)) { // ファイルからの画像のみを使用する // C1Schedule はインターネット (http://..)、 // アプリケーションリソース (res://..) およびローカルファイルシステム (file:///...)からの画像のみを受け入れることに注意する。 e.Html = row.FirstName + " " + row.LastName + "&lt;br&gt;&lt;img src=file:///" + imageName + "/&gt;"; } } } if (e.Style.Hot != null) { // Hot スタイルは ScheduleGroupItem が選択されたときにグループヘッダーに適用される。 e.Style.Hot.BackColor2 = e.Style.Hot.BorderColor = Color.DarkSlateGray; e.Style.Hot.ForeColor = Color.WhiteSmoke; } // 矩形タブを使用する e.TriangleTab = false; }</code></example>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentLinkClicked">
      <summary>ビュー上に表示される予定の件名に含まれるハイパーリンクをユーザーがクリックした際に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeContextMenuShow">
      <summary>
        コンテキストメニューが表示される前に発生します。 このイベントは、
        <see cref="P:C1.Win.C1Schedule.C1Schedule.ShowContextMenu" />が false の場合でも発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.SelectionChanged">
      <summary>表示している日付範囲が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.SelectedIntervalChanged">
      <summary>選択された時間間隔が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.SelectedAppointmentsChanged">
      <summary>選択された予定のリストが変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.SelectedDaysChanged">
      <summary>使用可能な日付範囲が変更されたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeReminderShow">
      <summary>［アラーム］ダイアログボックスが表示される直前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentShow">
      <summary>［予定］ダイアログボックスが表示される直前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentCreate">
      <summary>
        新しく作成された
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの ［予定］ダイアログボックスが表示される直前に発生します。
      </summary>
      <remarks>
        <para>現在選択されているビューと日付に基づいて、このイベントの CancelAppointmentEventArgs が初期化されます。たとえば、以下のようになります。</para>
        <para>
          - DayView 内に選択したスロットが存在する場合、
          <see cref="P:C1.C1Schedule.Appointment.Start" />と
          <see cref="P:C1.C1Schedule.Appointment.End" />プロパティが初期化されます。
        </para>
        <para>
          - WeekView または MonthView に選択した日が存在する場合、
          <see cref="P:C1.C1Schedule.Appointment.AllDayEvent" />プロパティが true に設定されます。
        </para>
        <para>このイベントを使用し、埋め込みの予定ダイアログが表示されないようにします。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentDelete">
      <summary>
        エンドユーザーによって〈削除〉ボタンが押されて
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトを 削除する前に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentDrop">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトがエンドユーザーによってドロップされる前に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentResize">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトがエンドユーザーによってサイズ変更される前に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentEdit">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトがインプレース編集される前に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentsLoaded">
      <summary>
        <see cref="T:C1.C1Schedule.AppointmentCollection" />が
        <see cref="M:C1.C1Schedule.C1ScheduleStorage.Import(System.String,C1.C1Schedule.FileFormatEnum)" />メソッドによってロードされたときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeExport">
      <summary>
        <see cref="M:C1.Win.C1Schedule.C1Schedule.Export(System.Object,System.String)" />メソッドによってエクスポート操作が実行される前に発生します。
      </summary>
      <remarks>
        このイベントは、
        <see cref="M:C1.C1Schedule.Appointment.SaveAs(System.String,C1.C1Schedule.FileFormatEnum)" />または C1ScheduleStorage.Export メソッドを使用してコードからデータをエクスポートする場合には発生しないことに注意してください。
      </remarks>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentSave">
      <summary>
        エンドユーザーによって
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトが保存される前に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentRecurrenceStateChanged">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトの
        <see cref="P:C1.C1Schedule.Appointment.RecurrenceState" />プロパティを変更するときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentCustomAction">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのカスタムアクションを実行するときに発生します。
      </summary>
      <example>
        <code><![CDATA[
            private void c1Schedule1_AppointmentAdded(object sender, AppointmentEventArgs e)
            {
            	// 新規アクションを追加します。
            	Action action = new Action();
            	action.Command = "http://www.grapecity.com/japan/";
            	// 予定のアクションを追加します。
            	e.Appointment.Action = action;
            }
            ]]></code>
      </example>
      <remarks>デフォルトの処理をキャンセルする場合は、CancelAppointmentEventArgs.Cancel プロパティに true を設定してください。</remarks>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentAdded">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />を追加するときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentDeleted">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />を削除するときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.AppointmentChanged">
      <summary>
        <see cref="T:C1.C1Schedule.Appointment" />を変更するときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderAdd">
      <summary>
        <see cref="T:C1.C1Schedule.Reminder" />を追加した後に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderChange">
      <summary>
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトを変更した後に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderFire">
      <summary>
        <see cref="T:C1.C1Schedule.Reminder" />を実行する前に発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderSnooze">
      <summary>
        〈再通知〉ボタンを使用して
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトが消去されるときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.ReminderRemove">
      <summary>
        コレクションから
        <see cref="T:C1.C1Schedule.Reminder" />オブジェクトを削除したときに発生します。
      </summary>
      <remarks>
        アラームは、以下の方法のいずれかによって
        <see cref="T:C1.C1Schedule.ReminderCollection" />コレクションから削除できます。 -
        <see cref="T:C1.C1Schedule.ReminderCollection" />の Remove メソッド。 -
        <see cref="M:C1.C1Schedule.Reminder.Dismiss" />メソッド。 - ユーザーによる〈消去〉ボタンのクリック。 - ユーザーが関連付けられた項目内から一致するアラームをオフにする。 - ユーザーがアラームを含む項目を削除する。
      </remarks>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforeOptionsFormShow">
      <summary>印刷オプションフォームが表示される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforePrint">
      <summary>印刷を行う前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.BeforePrintPreview">
      <summary>印刷プレビューを表示する前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.C1Schedule.PrintDocumentStarting">
      <summary>印刷ドキュメントの生成を開始したときに発生します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.Theme">
      <summary>
        コントロールの外観を決定する
        <see cref="P:C1.Win.C1Schedule.C1Schedule.Theme" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.VisualStyle">
      <summary>
        コントロールの視覚スタイルを決定する
        <see cref="P:C1.Win.C1Schedule.C1Schedule.VisualStyle" />値を 取得または設定します。 デフォルトは、
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue" />です。
      </summary>
      <remarks>
        <para>
          このプロパティを任意の値に設定すると、
          <see cref="P:C1.Win.C1Schedule.C1Schedule.Theme" />プロパティの値が変更されます。
        </para>
        <para>
          このプロパティを
          <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom" />値に設定すると、 現在使用しているテーマの編集可能なコピーが作成されます。新しいテーマは
          <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Custom" />スタイルと、 Name プロパティに一意の文字列を持っています。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.LargeButtons">
      <summary>
        コントロールとそのダイアログが大きいアイコンおよびボタンを使用するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.AppointmentHeight">
      <summary>
        MonthView モードおよび Office 2003形式の WeekView モードで、予定要素の高さを決定する
        <see cref="T:System.Int32" />値を取得または設定します。 デフォルト値は -1 です。このプロパティにデフォルト値を設定すると、予定の高さはビューのフォントサイズに従って自動的に決定されます。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.WeekViewStyle">
      <summary>
        週ビューのスタイルを決定する
        <see cref="T:C1.Win.C1Schedule.WeekViewStyleEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.TimeLineStyle">
      <summary>
        タイムラインスタイルを決定する
        <see cref="T:C1.Win.C1Schedule.TimeLineStyleEnum" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowTitle">
      <summary>
        コントロールがタイトルパネルを表示するかどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ViewType">
      <summary>
        現在表示しているビューを決定する
        <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowWorkTimeOnly">
      <summary>
        コントロールが日ビューに稼働時間帯のみを表示するかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowAllDayArea">
      <summary>
        コントロールが日ビューに終日領域を表示するかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。 デフォルト値は True です。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowWeekends">
      <summary>
        コントロールの月ビューに週末を表示するかどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。デフォルト値は True です。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.WeekTabFormat">
      <summary>
        月ビューモードの週タブのコンテンツを決定します。 デフォルト値は
        <see cref="F:C1.Win.C1Schedule.WeekTabFormat.Floating" />です。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.EditOptions">
      <summary>
        エンドユーザーに許可するアクションを決定する
        <see cref="P:C1.Win.C1Schedule.C1Schedule.EditOptions" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowContextMenu">
      <summary>
        コントロールがコンテキストメニューを表示するかどうかを示す
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ContextMenuStrip">
      <summary>
        このコントロールに関連付けられた
        <see cref="P:C1.Win.C1Schedule.C1Schedule.ContextMenuStrip" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowAppointmentToolTip">
      <summary>
        マウスが予定の上に置かれたときにコントロールがツールチップを表示するかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.ShowReminderForm">
      <summary>
        アラームが警告を出すとき、コントロールがアラームフォームを表示するかどうかを示す
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
      <remarks>
        実行時、ユーザーはフォーム右上の 'x' ボタンをクリックすることにより、アラームフォームを閉じることができます。 この操作は、アラームフォームを解放したり、
        <see cref="P:C1.Win.C1Schedule.C1Schedule.ShowReminderForm" />プロパティを変更しません。ただフォームを非表示にするだけです。
        <see cref="P:C1.Win.C1Schedule.C1Schedule.ShowReminderForm" />プロパティに true を設定することで、任意のタイミングでアラームフォームを設定することができます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.DataStorage">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="T:C1.C1Schedule.C1ScheduleStorage" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.BoldedDates">
      <summary>
        予定を含む日付を決定する
        <see cref="T:C1.C1Schedule.DateList" />オブジェクトを 取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.Locations">
      <summary>
        利用可能な場所の文字列の説明を含む
        <see cref="T:System.Collections.Generic.List`1" />リストを取得します。
      </summary>
      <remarks>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールは、 このリストを使用して
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />フォームに場所コンボボックスを作成します。 アプリケーションの起動時にこのリストを事前に作成できます。
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールは、
        <see cref="T:C1.C1Schedule.Appointment" />オブエクトのいずれかに新しい場所値が使用されるたびに、このリストを自動的に展開します。 このリストを使用して、場所コンボボックスをカスタム予定ダイアログに埋め込むことができます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedDates">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロール内の現在選択されている日付を決定する
        <see cref="T:C1.C1Schedule.DateList" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.CurrentDate">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロール内の現在選択されている日付を決定する
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedInterval">
      <summary>
        現在選択されている時間間隔を表す
        <see cref="T:C1.Win.C1Schedule.TimeInterval" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.SelectedAppointments">
      <summary>
        現在選択されている
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトのリストを含む
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.AllowDrop">
      <summary>ユーザーがコントロールにドラッグしたデータを、そのコントロールが受け入れることができるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.PrintInfo">
      <summary>
        印刷処理をサポートするための
        <see cref="P:C1.Win.C1Schedule.C1Schedule.PrintInfo" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.BorderStyle">
      <summary>コントロールの境界線タイプを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1Schedule.Cursor">
      <summary>マウス ポインタがコントロールの上にあるときに表示されるカーソルを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.WeekTabFormat">
      <summary>C1Schedule 月ビューの週タブのコンテンツを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.WeekTabFormat.Floating">
      <summary>利用可能なスペースに応じて長い日付パターンまたは短い日付パターンを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.WeekTabFormat.Short">
      <summary>短い日付パターンを使用する日付範囲を常に表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.WeekTabFormat.WeekNumber">
      <summary>年の週番号を表示します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.ScheduleViewEnum">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールに表示するビューのタイプを決定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.DayView">
      <summary>日ビュー。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.WorkWeekView">
      <summary>稼働日ビュー。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.WeekView">
      <summary>週ビュー。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.MonthView">
      <summary>月ビュー。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.ScheduleViewEnum.TimeLineView">
      <summary>タイムラインビュー。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.WeekViewStyleEnum">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールに表示する週ビューのタイプを決定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.WeekViewStyleEnum.Office2003">
      <summary>Office 2003 スタイルの週ビュー。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.WeekViewStyleEnum.Office2007">
      <summary>Office 2007 スタイルの週ビュー（日ビューと同様、全７日表示）。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.TimeLineStyleEnum">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールで表示するタイムラインのタイプを決定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.TimeLineStyleEnum.Hours">
      <summary>
        タイムスケールが
        <see cref="P:C1.C1Schedule.CalendarInfo.TimeScale" />プロパティ値で定義されたタイムライン。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.TimeLineStyleEnum.Days">
      <summary>タイムスケールが１日のタイムライン。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.EditOptions">
      <summary>エンドユーザーに使用可能な編集オプションのセットを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.None">
      <summary>エンドユーザーに使用できる編集オプションはありません。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.AllowInplaceEdit">
      <summary>予定のインプレースエディタのアクティブ化を許可します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.AllowDrag">
      <summary>予定のドラッグ操作とサイズ変更の操作を許可します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.AllowAppointmentEdit">
      <summary>エンドユーザーによる予定の編集を許可します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.AllowAppointmentCreate">
      <summary>エンドユーザーによる新しい予定の作成を許可します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.AllowAppointmentDelete">
      <summary>エンドユーザーによる予定の削除を許可します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.EditOptions.All">
      <summary>すべての編集操作を許可します。デフォルト値です。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.SelectionChangedEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.SelectionChanged" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.SelectionChangedEventArgs.Selection">
      <summary>選択した日の配列を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.TimeInterval">
      <summary>
        時間の継続間隔を表す
        <see cref="T:C1.Win.C1Schedule.TimeInterval" />オブジェクトです。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.TimeInterval.#ctor(System.DateTime,System.DateTime)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.TimeInterval" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="start">
        時間間隔の開始を表す
        <see cref="T:System.DateTime" />値。
      </param>
      <param name="end">
        時間間隔の終了を表す
        <see cref="T:System.DateTime" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.TimeInterval.Contains(System.DateTime)">
      <summary>
        指定された
        <see cref="T:System.DateTime" />値が現在の時間間隔に属するかどうかを示す値を返します。
      </summary>
      <param name="date">
        チェックする
        <see cref="T:System.DateTime" />値。
      </param>
      <returns>値が間隔内にある場合は true、そうでない場合は false。</returns>
    </member>
    <member name="P:C1.Win.C1Schedule.TimeInterval.Start">
      <summary>
        時間間隔の開始を表す
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.TimeInterval.End">
      <summary>
        時間間隔の終了を表す
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.SelectedIntervalChangedEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.SelectedIntervalChanged" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.SelectedIntervalChangedEventArgs.Interval">
      <summary>
        現在選択されている時間間隔を表す
        <see cref="T:C1.Win.C1Schedule.TimeInterval" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeViewChangeEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeViewChange" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeViewChangeEventArgs.ViewType">
      <summary>
        選択するビュータイプを決定する
        <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeViewChangeEventArgs.Dates">
      <summary>ビュー内で選択される日付範囲を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.SelectionType">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロール UI で現在選択されている UI 要素のタイプを決定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.SelectionType.Appointment">
      <summary>予定要素。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.SelectionType.TimeInterval">
      <summary>日要素または時間帯要素。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.SelectionType.DayTitle">
      <summary>日タイトル。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.SelectionType.TimeRuler">
      <summary>タイムルーラ要素。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.SelectionType.GroupHeader">
      <summary>グループヘッダー。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.SelectionType.None">
      <summary>
        選択領域は
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールに属しますが、 他の
        <see cref="T:C1.Win.C1Schedule.SelectionType" />メンバによって記述されたアクティブな領域には属しません。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeContextMenuShow" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.Appointment">
      <summary>
        コンテキストメニューを表示しようとしている
        <see cref="!:Appoinment" />オブジェクトを取得または設定します。
      </summary>
      <remarks>このプロパティは null である場合があります。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.SelectionType">
      <summary>
        コンテキストメニューが表示しようとする UI 要素のタイプを判定する
        <see cref="P:C1.Win.C1Schedule.BeforeContextMenuShowEventArgs.SelectionType" />値を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeAppointmentTooltipShowEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentTooltipShow" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeAppointmentTooltipShowEventArgs.Text">
      <summary>ツールチップテキストを取得または設定します。</summary>
      <remarks>テキストのフォーマットには html エンコードが使用されます。</remarks>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeDayTooltipShowEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Calendar.BeforeDayTooltipShow" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeDayTooltipShowEventArgs.Text">
      <summary>ツールチップテキストを取得または設定します。 デフォルトのテキストは空の文字列です。</summary>
      <remarks>テキストを書式設定するには、HTML エンコードを使用します。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeDayTooltipShowEventArgs.Day">
      <summary>ツールチップが表示されようとする日付を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeDayFormatEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Calendar" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Calendar.BeforeDayFormat" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeDayFormatEventArgs.Date">
      <summary>
        現在書式設定されている日付を判定する
        <see cref="T:System.DateTime" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeDayFormatEventArgs.Style">
      <summary>
        日付の表示に使用される
        <see cref="P:C1.Win.C1Schedule.BeforeDayFormatEventArgs.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.AppointmentIcons">
      <summary>予定要素内に表示されるデフォルトアイコンのセットを決定します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.AppointmentIcons.None">
      <summary>なし。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.AppointmentIcons.Occurrence">
      <summary>'occurrence' アイコンを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.AppointmentIcons.Exception">
      <summary>'exception' アイコンを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.AppointmentIcons.Locked">
      <summary>'locked' アイコンを表示します（プライベートの予定用）。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.AppointmentIcons.Reminder">
      <summary>予定にアラームが設定されている場合に 'reminder' アイコンを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.AppointmentIcons.Continued">
      <summary>要素が単一の予定の２番目またはそれ以降の部分の場合に 'continued' アイコンを表示します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeAppointmentFormat" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.Text">
      <summary>予定要素内に表示されるテキストを取得または設定します。</summary>
      <remarks>HTML エンコードを使用してテキストを書式設定します。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.Icons">
      <summary>
        予定要素内に表示するアイコンのセットを指定する
        <see cref="T:C1.Win.C1Schedule.AppointmentIcons" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.BackColor">
      <summary>
        予定要素のカスタム背景色を指定する
        <see cref="T:System.Drawing.Color" />値を取得または設定します。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.Appointment.Label" />プロパティで決定されるデフォルトの背景色を使用するには、この値を
        <see cref="F:System.Drawing.Color.Empty" />に戻します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.BackColor2">
      <summary>
        予定要素のカスタムグラデーション背景色を指定する
        <see cref="T:System.Drawing.Color" />値を取得または設定します。
      </summary>
      <remarks>
        <see cref="P:C1.C1Schedule.Appointment.Label" />プロパティで決定されるデフォルトのグラデーション背景色を使用するには、この値を
        <see cref="F:System.Drawing.Color.Empty" />に戻します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeAppointmentFormatEventArgs.UIElementDate">
      <summary>予定を表す現在の UI 要素の日付を取得します。</summary>
      <remarks>複数日の予定は複数の UI 要素によって表されます。 このプロパティを使用して、最初の UI 要素、２番目の UI 要素、以下同様に要素を順番に識別します。</remarks>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeTimeFormatEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeTimeFormat" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Group">
      <summary>
        現在書式設定されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Start">
      <summary>
        書式設定する時間間隔の開始日と時間を決定する
        <see cref="T:System.DateTime" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Duration">
      <summary>
        書式設定する時間間隔の持続時間を決定する
        <see cref="T:System.TimeSpan" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.WorkTime">
      <summary>時間間隔を勤務時間として表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.Background">
      <summary>
        時間間隔要素のカスタム背景色を指定する
        <see cref="T:System.Drawing.Color" />値を取得または設定します。
      </summary>
      <remarks>
        <see cref="P:C1.Win.C1Schedule.C1Schedule.CalendarInfo" />設定および
        <see cref="P:C1.Win.C1Schedule.BeforeTimeFormatEventArgs.WorkTime" />プロパティ値によって決まるデフォルトの背景色を使用するには、 この値を
        <see cref="F:System.Drawing.Color.Empty" />のままにします。
      </remarks>
    </member>
    <member name="T:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs">
      <summary>
        <see cref="E:C1.Win.C1Schedule.C1Schedule.AppointmentLinkClicked" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs.Button">
      <summary>リンク上でクリックされたマウスボタンを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs.HRef">
      <summary>リンクの HREF 属性の値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.AppointmentLinkClickedEventArgs.Target">
      <summary>リンクの TARGET 属性の値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.SelectedAppointmentsChangedEventArgs">
      <summary>
        <see cref="E:C1.Win.C1Schedule.C1Schedule.SelectedAppointmentsChanged" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.SelectedAppointmentsChangedEventArgs.Appointments">
      <summary>
        現在選択されている予定を表す
        <see cref="T:C1.C1Schedule.AppointmentList" />オブジェクトを取得します。選択された予定がない場合、この値を null に設定できます。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeGroupHeaderFormat" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Group">
      <summary>
        現在書式設定されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Html">
      <summary>グループヘッダーに表示される HTML テキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.TriangleTab">
      <summary>
        グループヘッダータブの外観を決定する
        <see cref="T:System.Boolean" />値を取得または設定します。 このプロパティ値が true の場合、C1Schedule は MS Outlook 2010 に類似したグループヘッダーを表示します。 このプロパティ値が false の場合、C1Schedule は矩形のグループヘッダーを表示します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Style">
      <summary>
        グループヘッダーの表示に使用される
        <see cref="P:C1.Win.C1Schedule.BeforeGroupHeaderFormatEventArgs.Style" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.ExchangeEventArgs">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールの
        <see cref="E:C1.Win.C1Schedule.C1Schedule.BeforeExport" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ExchangeEventArgs.Data">
      <summary>
        エクスポートされるデータを取得または設定します。このプロパティには次のいずれかが含まれます。
        <list type="bullet"><item><term>null</term><description>C1Schedule.DataStorage.AppointmentStorage.Appointments コレクションのすべてのコンテンツをエクスポートする場合</description></item><item><term><see cref="T:C1.C1Schedule.Appointment" />;
            </term></item><item><term><see cref="T:System.Collections.Generic.IList`1" />.
            </term></item></list></summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ExchangeEventArgs.Format">
      <summary>
        エンドユーザーによって選択された
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.Localization.Strings">
      <summary>
        ローカライズに使用される静的プロパティを含む
        <see cref="T:C1.Win.C1Schedule.Localization.Strings" />クラスです。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Localization.Strings.ResourceManager">
      <summary>
        ルックアップリソースのために使用される
        <see cref="P:C1.Win.C1Schedule.Localization.Strings.ResourceManager" />オブジェクトです。
      </summary>
      <remarks>カスタムコントロールアセンブリにリソースを定義するには、有効な値をこのプロパティに設定してください。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.Localization.Strings.UICulture">
      <summary>
        代替のカルチャとして使用されるデフォルトの
        <see cref="T:System.Globalization.CultureInfo" />オブジェクトを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Localization.Strings.C1Schedule.Exceptions.StartEndValidationFailed">
      <summary>Appointment End プロパティ値が Start プロパティ値より大きいときに表示される警告メッセージを決定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Localization.Strings.MiscStrings.PrintdocInitializationFailed">
      <summary>C1PrintDocument が初期化できない場合に表示する警告メッセージを決定します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.Printing.PrintOptionsForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Printing.PrintOptionsForm" />は利用可能なスタイルのリストから印刷スタイルを選択し、他の印刷オプションを設定することを許可します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Printing.PrintOptionsForm.#ctor(C1.C1Schedule.Printing.PrintInfo,C1.C1Schedule.Printing.PrintStyle,C1.C1Schedule.Printing.PrintContextType)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Printing.PrintOptionsForm" />フォームの当新しいインスタンスを初期化します。
      </summary>
      <param name="info">
        <see cref="T:C1.C1Schedule.Printing.PrintInfo" />オブジェクト。
      </param>
      <param name="defaultStyle">
        初期化時に選択されるThe
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクト。
      </param>
      <param name="printContext">
        フォーム内に表示すべきスタイルのフィルタを決定する
        <see cref="T:C1.C1Schedule.Printing.PrintContextType" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Printing.PrintOptionsForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.SelectedStyle">
      <summary>
        現在選択されている
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />オブジェクトを返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.StartDate">
      <summary>
        印刷範囲の開始日時を決定する
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
      <remarks>このプロパティは PrintContextType.DateRange を持つスタイルでのみ意味をなします。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.EndDate">
      <summary>
        印刷範囲の終了日時を決定する
        <see cref="T:System.DateTime" />値を取得または設定します。
      </summary>
      <remarks>このプロパティは PrintContextType.DateRange を持つスタイルでのみ意味をなします。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.HidePrivateAppointments">
      <summary>
        ドキュメント内のプライベートな予定の詳細を隠すかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintOptionsForm.PrintSelectedCalendar">
      <summary>
        コントロールが結果のドキュメントで現在選択されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />からの予定のみを表示するかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。 デフォルトでは、C1Schedule グルーピングに関係なく、すべての予定が結果のドキュメントに含まれます。 現在選択されている
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />からの予定を表示するには、このプロパティを true に設定します。
      </summary>
      <remarks>
        このプロパティは
        <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy" />プロパティが設定されている場合にのみ有効になります。
      </remarks>
    </member>
    <member name="T:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm">
      <summary>
        指定された印刷スタイルのプロパティ設定を許可する
        <see cref="T:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm" />です。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm.#ctor(C1.C1Schedule.Printing.PrintStyle,System.Globalization.CultureInfo)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="style">
        編集する
        <see cref="T:C1.C1Schedule.Printing.PrintStyle" />。
      </param>
      <param name="culture">
        フォームで使用する
        <see cref="T:System.Globalization.CultureInfo" />。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Printing.PrintStyleOptionsForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="T:C1.Win.C1Schedule.Printing.PrintProgressForm">
      <summary>印刷進行状況フォーム。</summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Printing.PrintProgressForm.#ctor(C1.C1Schedule.Printing.PrintInfo)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Printing.PrintProgressForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="info">
        <see cref="T:C1.C1Schedule.Printing.PrintInfo" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Printing.PrintProgressForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.TxtPrinting">
      <summary>印刷／プレビュー中の現在の進行状況を表示するために使用されるテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.TxtTitle">
      <summary>ウィンドウのキャプションを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.Progress">
      <summary>
        ０（０％完了）から１（100％完了）までの概算進捗率を指定する
        <see cref="T:System.Double" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Printing.PrintProgressForm.CancelClicked">
      <summary>印刷／プレビューがキャンセルされたかどうかを示す値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.ScheduleGroupItem">
      <summary>
        <see cref="P:C1.Win.C1Schedule.C1Schedule.GroupBy" />プロパティが設定されているか、 デフォルトの UI が使用されている場合、単一のリソース、カテゴリ、 または連絡先用の個々の UI 部分を表示するのに必要なすべてのデータを保持します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.ScheduleGroupItem.ToString">
      <summary>
        現在の
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトの文字列表現を返します。
      </summary>
      <returns>
        <see cref="P:C1.Win.C1Schedule.ScheduleGroupItem.DisplayName" />プロパティ値。
      </returns>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.IsSelected">
      <summary>
        この
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />を持つ UI が DataContext として選択されかどうかを決定する値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Scheduler">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />が属する
        <see cref="P:C1.Win.C1Schedule.ScheduleGroupItem.Scheduler" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Owner">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトのオーナーを表す
        <see cref="T:C1.C1Schedule.BaseObject" />オブジェクトを取得します。 このプロパティは空のグループ項目には null にできます。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Name">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトの名前を表す
        <see cref="T:System.String" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.DisplayName">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトの表示名を表す
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
      <value>表示名。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.PaletteColor">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを表示するために使用するパレットを決定する
        <see cref="T:System.Drawing.Color" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.IsChecked">
      <summary>
        この
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを UI 内で表示するかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItem.Tag">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトに関するカスタムデータを含むオブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.ScheduleGroupItemCollection">
      <summary>
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトのコレクションを表します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItemCollection.Item(System.Int32)">
      <summary>
        指定したインデックスの
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.ScheduleGroupItemCollection.Item(System.Object)">
      <summary>
        指定したオーナーを持つ
        <see cref="T:C1.Win.C1Schedule.ScheduleGroupItem" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.C1ScheduleSettings">
      <summary>
        異なる
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト設定を提供する補助プロパティを決定します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.C1ScheduleSettings.#ctor">
      <summary>
        <see cref="T:C1.Win.C1Schedule.C1ScheduleSettings" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsEditing">
      <summary>連絡先を編集する権限をエンドユーザーに付与するかどうかを決定します。</summary>
      <remarks>このプロパティが false の場合、デフォルトダイアログは既存の項目からの選択のみを許可します。 このプロパティが false で ContactCollection が空の場合、 デフォルトの［予定］ダイアログでは、連絡先を編集するためのコントロールが表示されません。</remarks>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsMultiSelection">
      <summary>複数の Contact オブジェクトを単一の Appointment オブジェクトに割り当てることができるかどうかを決定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsMultiSelection" />プロパティと
          <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowContactsEditing" />プロパティの両方が false の場合、デフォルトの［予定］ダイアログには、単一の Contact オブジェクトを選択するためのコンボボックスが表示されます。
        </para>
        <para>このプロパティが true の場合、デフォルトの［予定］ダイアログでは、別個のダイアログで複数の連絡先を選択できます。</para>
      </remarks>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesEditing">
      <summary>リソースを編集する権限をエンドユーザーに付与するかどうかを決定します。</summary>
      <remarks>このプロパティが false の場合、デフォルトダイアログは既存の項目からの選択のみを許可します。 このプロパティが false で ResourceCollection が空の場合、 デフォルトの［予定］ダイアログでは、リソースを編集するためのコントロールが表示されません。</remarks>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesMultiSelection">
      <summary>複数の Resource オブジェクトを単一の Appointment オブジェクトに割り当てることができるかどうかを決定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesMultiSelection" />プロパティと
          <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowResourcesEditing" />プロパティの両方が false の場合、 デフォルトの［予定］ダイアログには、単一の Resource オブジェクトを選択するためのコンボボックスが表示されます。
        </para>
        <para>このプロパティが true の場合、デフォルトの［予定］ダイアログでは、別個のダイアログで複数のリソースを選択できます。</para>
      </remarks>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesEditing">
      <summary>カテゴリを編集する権限をエンドユーザーに付与するかどうかを決定します。</summary>
      <remarks>このプロパティが false の場合、デフォルトダイアログは既存の項目からの選択のみを許可します。 このプロパティが false で CategoryCollection が空の場合、 デフォルトの［予定］ダイアログでは、カテゴリを編集するためのコントロールが表示されません。</remarks>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesMultiSelection">
      <summary>複数の Category オブジェクトを単一の Appointment オブジェクトに割り当てることができるかどうかを決定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesMultiSelection" />プロパティと
          <see cref="P:C1.Win.C1Schedule.C1ScheduleSettings.AllowCategoriesEditing" />プロパティの両方が false の場合、デフォルトの［予定］ダイアログには、単一の Category オブジェクトを選択するためのコンボボックスが表示されます。
        </para>
        <para>このプロパティが true の場合、デフォルトの［予定］ダイアログでは、別個のダイアログで複数のカテゴリを選択できます。</para>
      </remarks>
      <value>デフォルト値は true です。</value>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.FirstVisibleTime">
      <summary>
        日／稼働日／週ビューで最初に表示される時間帯を表す
        <see cref="T:System.TimeSpan" />値を取得または設定します。
      </summary>
      <remarks>このプロパティは、日／稼働日／週ビューの初期スクロール位置にのみ影響を与えます。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.AutoScrollToFirstAppointment">
      <summary>
        コントロールが現在のビューで最先の予定に自動的にスクロールするかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。 このプロパティは、日／稼働日／週ビューにのみ影響を与えます。
      </summary>
      <remarks>このプロパティは、初期スクロール位置にのみ影響を与えます。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.SetReminder">
      <summary>新しく作成された予定に再通知を設定するかどうかを取得または設定します。</summary>
      <remarks>
        このプロパティは、初期設定にのみ影響を与えます。 エンドユーザーは、個々のすべての
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに対する再通知設定を変更できます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.ReminderTimeBeforeStart">
      <summary>
        <see cref="P:C1.C1Schedule.Appointment.ReminderTimeBeforeStart" />プロパティの初期値として使用される
        <see cref="T:System.TimeSpan" />値を取得または設定します。
      </summary>
      <remarks>ユーザーがコードから予定を作成する場合、このプロパティを優先する必要があります。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.C1ScheduleSettings.DefaultFileFormat">
      <summary>
        インポートとエクスポート操作のデフォルトファイル形式を指定する
        <see cref="T:C1.C1Schedule.FileFormatEnum" />値を取得または設定します。 ［データのインポート］と［データのエクスポート］ダイアログで使用可能になります。
      </summary>
      <remarks>
        デフォルト値は
        <see cref="F:C1.C1Schedule.FileFormatEnum.XML" />です。
      </remarks>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.AppointmentForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />は、
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトを編集するためのダイアログフォームを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule)">
      <summary>
        デフォルト設定を持つ
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />フォームの 新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネント。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,System.DateTime,System.DateTime,System.Boolean,System.Boolean)">
      <summary>
        デフォルト設定を持つ
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />フォームの 新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネント。
      </param>
      <param name="start">予定の開始。</param>
      <param name="end">予定の終了。</param>
      <param name="allDay">新しい予定が AllDay イベントかどうかを 決定します。</param>
      <param name="recurring">新しい予定が定期的かどうかを決定します。</param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.Appointment)">
      <summary>
        指定した
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトを編集するための
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネント。
      </param>
      <param name="appointment">
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.Appointment,System.Boolean)">
      <summary>
        指定された
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトを編集するための
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネント。
      </param>
      <param name="appointment">
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクト。
      </param>
      <param name="editRecurrence">
        フォームを開いた後に
        <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm" />ダイアログを表示するかどうかを決定します。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.Appointment,System.Boolean,System.Boolean)">
      <summary>
        指定された
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトを編集するための
        <see cref="T:C1.Win.C1Schedule.Forms.AppointmentForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有側の
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネント。
      </param>
      <param name="appointment">
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクト。
      </param>
      <param name="editRecurrence">
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトが新しいオブジェクトであり、AppointmentStorage にまだ追加されていないかどうかを判定します。
      </param>
      <param name="isNew">
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトが新しいオブジェクトであり、AppointmentStorage にまだ追加されていないかどうかを判定します。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.AppointmentForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment">
      <summary>
        <see cref="P:C1.Win.C1Schedule.Forms.AppointmentForm.Appointment" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm" />は、
        <see cref="T:C1.C1Schedule.CategoryCollection" />オブジェクトを編集するためのダイアログフォームを表します。 このフォームを使用し、使用可能な分類項目の完全リストを編集します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.#ctor(C1.C1Schedule.CategoryCollection)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="collection">
        <see cref="T:C1.C1Schedule.CategoryCollection" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.CategoryCollection)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="collection">
        <see cref="T:C1.C1Schedule.CategoryCollection" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.CategoryCollectionForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.CategoryListForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.CategoryListForm" />は、
        <see cref="T:C1.C1Schedule.CategoryList" />オブジェクトを編集するためのダイアログフォームを表します。 このフォームを使用し、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに 割り当てられた分類項目のリストを編集します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.#ctor(C1.C1Schedule.CategoryList)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="list">
        編集する
        <see cref="T:C1.C1Schedule.CategoryList" />リスト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.CategoryList)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.CategoryCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="list">
        編集する
        <see cref="T:C1.C1Schedule.CategoryList" />リスト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.CategoryListForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.CategoryListForm.List">
      <summary>
        <see cref="T:C1.C1Schedule.CategoryList" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.CategoryListForm.AllowMasterListEditing">
      <summary>
        マスタコレクションを編集する権限をエンドユーザーに付与するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.CategoryListForm.AllowMultiSelection">
      <summary>
        複数の項目を ON にできるかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.ContactCollectionForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ContactCollectionForm" />は、
        <see cref="T:C1.C1Schedule.ContactCollection" />オブジェクトを編集するためのダイアログフォームを表します。 このフォームを使用し、使用可能な連絡先の完全リストを編集します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.#ctor(C1.C1Schedule.ContactCollection)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ContactCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="collection">
        <see cref="T:C1.C1Schedule.ContactCollection" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ContactCollection)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ContactCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="collection">
        <see cref="T:C1.C1Schedule.ContactCollection" />オブジェクト
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ContactCollectionForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.ContactListForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ContactListForm" />は、
        <see cref="T:C1.C1Schedule.ContactList" />オブジェクトを編集するためのダイアログフォームを表します。 このフォームを使用し、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに割り当てられた 連絡先リストを編集します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.#ctor(C1.C1Schedule.ContactList)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ContactListForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="list">
        編集する
        <see cref="T:C1.C1Schedule.ContactList" />リスト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ContactList)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ContactListForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="list">
        編集する
        <see cref="T:C1.C1Schedule.ContactList" />リスト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ContactListForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.ContactListForm.List">
      <summary>
        <see cref="T:C1.C1Schedule.ContactList" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.ContactListForm.AllowMasterListEditing">
      <summary>
        マスタコレクションを編集する権限をエンドユーザーに付与するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.ContactListForm.AllowMultiSelection">
      <summary>
        複数の項目を ON にできるかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.GoToDate">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.GoToDate" />は、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネントの 切り替え先のターゲット日付とビューを指定するためのダイアログフォームを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.GoToDate.#ctor(System.String,System.DateTime)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.GoToDate" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="dateFormat">日付を表示する書式文字列。</param>
      <param name="initialDate">ダイアログ内で選択された初期の日付。</param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.GoToDate.#ctor(C1.Win.C1Schedule.C1Schedule,System.String,System.DateTime)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.GoToDate" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="dateFormat">日付を表示するための書式文字列。</param>
      <param name="initialDate">ダイアログ内に表示する選択された日付の初期値。</param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.GoToDate.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.GoToDate.Date">
      <summary>
        ユーザーによって選択されたターゲット日付を指定する
        <see cref="T:System.DateTime" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.GoToDate.ViewType">
      <summary>
        ユーザーによって選択されたターゲットビュータイプを指定する
        <see cref="T:C1.Win.C1Schedule.ScheduleViewEnum" />値を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.PaletteForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm" />は、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネントの 背景色を選択するためのダイアログフォームを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.PaletteForm.#ctor(C1.Win.C1Schedule.C1Schedule)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネントへの参照。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.PaletteForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.RecurrenceForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm" />は、定期パターンの プロパティを編集するためのダイアログフォームを表します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.RecurrenceForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.RecurrencePattern,System.Boolean)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.RecurrenceForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コンポーネント。
      </param>
      <param name="pattern">
        <see cref="T:C1.C1Schedule.RecurrencePattern" />オブジェクト。
      </param>
      <param name="isNew">
        ダイアログフォームを新規パターンの入力、既存パターンの編集の どちらに使用するかを示す
        <see cref="T:System.Boolean" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.RecurrenceForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm" />は、
        <see cref="T:C1.C1Schedule.ResourceCollection" />オブジェクトを編集するためのダイアログフォームを表します。 このフォームを使用し、使用可能なリソースの全リストを編集します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.#ctor(C1.C1Schedule.ResourceCollection)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="collection">
        <see cref="T:C1.C1Schedule.ResourceCollection" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ResourceCollection)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ResourceCollectionForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="collection">
        <see cref="T:C1.C1Schedule.ResourceCollection" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ResourceCollectionForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="T:C1.Win.C1Schedule.Forms.ResourceListForm">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ResourceListForm" />は、
        <see cref="T:C1.C1Schedule.ResourceList" />オブジェクトを編集するためのダイアログフォームを表します。 このフォームを使用し、
        <see cref="T:C1.C1Schedule.Appointment" />オブジェクトに割り当てられた リソースのリストを編集します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.#ctor(C1.C1Schedule.ResourceList)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ResourceListForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="list">
        編集する
        <see cref="T:C1.C1Schedule.ResourceList" />リスト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.#ctor(C1.Win.C1Schedule.C1Schedule,C1.C1Schedule.ResourceList)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.Forms.ResourceListForm" />フォームの新しいインスタンスを初期化します。
      </summary>
      <param name="schedule">
        所有する
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />オブジェクト。
      </param>
      <param name="list">
        編集する
        <see cref="T:C1.C1Schedule.ResourceList" />リスト。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.Forms.ResourceListForm.Dispose(System.Boolean)">
      <summary>使用されているすべてのリソースをクリーンアップします。</summary>
      <param name="disposing">マネージドリソースが破棄される場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.ResourceListForm.List">
      <summary>
        <see cref="T:C1.C1Schedule.ResourceList" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.ResourceListForm.AllowMasterListEditing">
      <summary>
        マスタコレクションを編集する権限をエンドユーザーに付与するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.Forms.ResourceListForm.AllowMultiSelection">
      <summary>
        複数の項目を ON にできるかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.VisualStyle">
      <summary>C1Calendar と C1Schedule コントロールの視覚スタイルを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Custom">
      <summary>［カスタム］視覚スタイル。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.System">
      <summary>［システム］視覚スタイル（現在のデスクトップ設定を使用）。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue">
      <summary>［Office 2007 青］視覚スタイル</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Black">
      <summary>［Office 2007 黒］視覚スタイル</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Silver">
      <summary>［Office 2007 シルバー］視覚スタイル</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Black">
      <summary>Office 2010 Black 視覚スタイル。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Blue">
      <summary>Office 2010 Blue 視覚スタイル。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Silver">
      <summary>Office 2010 Silver 視覚スタイル。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.BaseTheme">
      <summary>C1Calendar と C1Schedule コントロールのテーマの基本クラス。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.BaseTheme._themeStyle">
      <summary>
        <see cref="T:C1.Win.C1Schedule.UI.BaseTheme" />オブジェクトのタイプを指定する
        <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.VisualStyle" />値。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.BaseTheme._locked">
      <summary>テーマが編集用にロックされているかどうかを決定します。</summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.BaseTheme.#ctor">
      <summary>
        <see cref="T:C1.Win.C1Schedule.UI.BaseTheme" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.BaseTheme.Dispose">
      <summary>アンマネージリソースの解放（free/release）またはリセットに関連付けられた アプリケーション定義のタスクを実行します。</summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.BaseTheme.ToString">
      <summary>
        <see cref="P:C1.Framework.Theme.Name" />プロパティの値を返します。
      </summary>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.BaseTheme.OnThemeChanged">
      <summary>
        <see cref="E:C1.Win.C1Schedule.UI.BaseTheme.ThemeChanged" />イベントを発生させます。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.BaseTheme.SetStyle(C1.Framework.Style,System.String)">
      <summary>
        名前付きの
        <see cref="T:C1.Framework.Style" />オブジェクトの値を設定します。
      </summary>
      <param name="value"></param>
      <param name="name"></param>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Name">
      <summary>テーマの名前（例："RedMoon"）を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.VisualStyle">
      <summary>
        テーマのタイプを指定する
        <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.VisualStyle" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.BaseFont">
      <summary>
        このプロパティを設定すると、すべての
        <see cref="T:C1.Framework.Style" />オブジェクトの
        <see cref="P:C1.Framework.Style.Font" />値が即時に変更されます。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ImagePrevious">
      <summary>
        「前へ」ボタンを表示するために使用される
        <see cref="T:System.Drawing.Image" />オブジェクトを取得または設定します。 このプロパティが null 以外の場合、
        <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolPrevious" />は無効になります。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ImageNext">
      <summary>
        「次へ」ボタンを表示するために使用される
        <see cref="T:System.Drawing.Image" />オブジェクトを取得または設定します。 このプロパティが null 以外の場合、
        <see cref="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolNext" />は無効になります。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolPrevious">
      <summary>
        「前へ」ボタンを表示するために使用されるシンボルを決定するための
        <see cref="T:System.Char" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.SymbolNext">
      <summary>
        「次」ボタンを表示するために使用されるシンボルを決定するための
        <see cref="T:System.Char" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.ToolTipRoundedCorners">
      <summary>
        角に丸みのあるツールチップを表示するかどうかを決める
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Count">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Comparer">
      <summary>コレクション内のキーの等価性の決定に使用する汎用の 等価比較子を取得します。</summary>
    </member>
    <member name="E:C1.Win.C1Schedule.UI.BaseTheme.Disposed">
      <summary>コンポーネントの Disposed イベントを処理するメソッドを表します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.BaseTheme.Site">
      <summary>IComponent に関連付けられた ISite を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.CalendarTheme">
      <summary>
        C1Calendar コントロールのテーマを表す
        <see cref="T:C1.Framework.Theme" />クラス。 コントロールの外観を決定する表示属性を含む
        <see cref="T:C1.Framework.Style" />オブジェクトのセットです。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.LoadThemes(System.String)">
      <summary>XML ファイルからテーマのコレクションをロードします。</summary>
      <param name="fileName">テーマを含む XML ファイルの名前。</param>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.OnThemeChanged">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.ReadCustomData(System.Xml.XmlNode)">
      <summary></summary>
      <param name="node"></param>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.CalendarTheme.WriteCustomData(System.Xml.XmlWriter)">
      <summary></summary>
      <param name="writer"></param>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.System">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.System" />タイプの定義済みのテーマを取得します。
      </summary>
      <remarks>このテーマを使用し、アプリケーションに、現在のデスクトップ設定に従って その外観を自動的に変更させます。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2007Blue">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2007Black">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Black" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2007Silver">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Silver" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2010Blue">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Blue" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2010Black">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Black" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.Office2010Silver">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Silver" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.ComponentType">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.XmlDefinition">
      <summary>
        XML エンコードの VisualStyle を表す
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.CalendarTheme.BaseFont">
      <summary>
        このプロパティを設定し、すべての
        <see cref="T:C1.Framework.Style" />オブジェクトの
        <see cref="P:C1.Framework.Style.Font" />値を一度に変更します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.Palettes">
      <summary>
        <see cref="T:C1.Win.C1Schedule.UI.Palettes" />クラスは、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />視覚スタイルで利用可能な カラーパレットのコレクションを示します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.Palettes.GetKeyForItem(C1.Win.C1Schedule.UI.Palette)">
      <summary>
        その
        <see cref="P:C1.Win.C1Schedule.UI.Palette.PaletteType" />プロパティに合わせて、
        <see cref="T:C1.Win.C1Schedule.UI.Palette" />オブジェクトのキーカラーを返します。
      </summary>
      <param name="item">
        <see cref="T:C1.Win.C1Schedule.UI.Palette" />オブジェクト。
      </param>
      <returns>
        キー
        <see cref="T:System.Drawing.Color" />値。
      </returns>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.PaletteType">
      <summary>
        <see cref="T:C1.Win.C1Schedule.UI.Palette" />オブジェクトのタイプを指定する列挙体です。 このタイプはパレットの動作を定義します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.PaletteType.Office2007">
      <summary>Office 2007 パレットには、自由時間および稼働時間の時および日、日付ヘッダ、グリッド境界線、カレンダータブの背景色および境界色が含まれます。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.PaletteType.Custom">
      <summary>独自のパレットを定義するにはこのタイプを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.PaletteType.Office2010">
      <summary>Office 2010 パレットには、 空き時間と空き日および勤務時間と勤務日、日ヘッダー、グリッドの枠、 およびカレンダータブが含まれています。</summary>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.Palette">
      <summary>
        <see cref="T:C1.Win.C1Schedule.UI.Palette" />クラスは、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />に表示するために 使用する
        <see cref="T:System.Drawing.Color" />値のセットを提供します。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.Palette.#ctor(C1.Win.C1Schedule.UI.PaletteType)">
      <summary>
        <see cref="T:C1.Win.C1Schedule.UI.Palette" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="type">
        <see cref="P:C1.Win.C1Schedule.UI.Palette.PaletteType" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.Palette.CreateOffice2007Palette(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.PaletteType.Office2007" />タイプの
        <see cref="T:C1.Win.C1Schedule.UI.Palette" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="freeHour">
        自由時間および選択された日付の背景と、稼働時間の細い水平線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="freeHourBorder">
        自由時間および稼働時間の水平線と、１カ月おきの日および終日領域の背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="freeHourLightBorder">
        自由時間の細い水平線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="dayHeaderBorder">
        日ヘッダの枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="dayHeaderBack">
        日ヘッダの表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="dayHeaderBack2">
        日ヘッダのグラデーション色の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="border">
        日ビュー内の垂直線および他のビューの枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="selectedSlot">
        選択された時間帯の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="monthGridBorder">
        タブ内の月グリッド線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <param name="monthGridText">
        タブ内の月グリッドのテキストの表示に使用する
        <see cref="T:System.Drawing.Color" />値。
      </param>
      <returns></returns>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.AlternateMonth">
      <summary>
        １カ月おきの日の背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 Office 2007 パレットでは、このフィールドが常に一意の
        <see cref="T:System.Drawing.Color" />を含むようにしてください。 他のパレットでは、このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.WorkHour">
      <summary>
        稼働時間の背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 Office 2003 パレットでは、このフィールドが常に一意の
        <see cref="T:System.Drawing.Color" />を含むようにしてください。 Office 2007 パレットでは、このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.FreeHour">
      <summary>
        自由時間の背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.FreeHourBorder">
      <summary>
        自由時間の水平の枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.FreeHourLightBorder">
      <summary>
        自由時間の水平の細い枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールは
        <see cref="F:C1.Win.C1Schedule.UI.Palette.FreeHourBorder" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.WorkHourBorder">
      <summary>
        稼働時間の水平の枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.WorkHourLightBorder">
      <summary>
        稼動時間の水平の細い枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールは
        <see cref="F:C1.Win.C1Schedule.UI.Palette.FreeHourBorder" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.DayHeaderBorder">
      <summary>
        日ヘッダの枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.DayHeaderBackground">
      <summary>
        日ヘッダの背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.DayHeaderBackground2">
      <summary>
        日ヘッダのグラデーション背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.Border">
      <summary>
        日付の枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.SelectedSlot">
      <summary>
        選択された時間帯の背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールは
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.MonthDayHeaderSelected" />スタイルの背景色を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.MonthGridBorder">
      <summary>
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007GroupTabs" />が true のとき、タブ内の月グリッドヘッダの枠線の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.MonthGridText">
      <summary>
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007GroupTabs" />が true のとき、タブ内の月グリッドヘッダのテキストの表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールはテーマ定義から対応する
        <see cref="T:System.Drawing.Color" />値を使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1Schedule.UI.Palette.SelectedDay">
      <summary>
        選択された日付の背景の表示に使用する
        <see cref="T:System.Drawing.Color" />値。 このフィールドには
        <see cref="F:System.Drawing.Color.Empty" />を指定することができます。 この場合、コントロールは
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.MonthDayHeaderSelected" />スタイルの背景色を使用します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.Palette.PaletteType">
      <summary>
        <see cref="P:C1.Win.C1Schedule.UI.Palette.PaletteType" />値を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.Palette.KeyColor">
      <summary>
        現在のパレットのキー
        <see cref="T:System.Drawing.Color" />値を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1Schedule.UI.ScheduleTheme">
      <summary>
        C1Schedule コントロールのテーマを表す
        <see cref="T:C1.Framework.Theme" />。 コントロールの外観を決定する表示属性を含む
        <see cref="T:C1.Framework.Style" />オブジェクトの セットです。
      </summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.ReadCustomData(System.Xml.XmlNode)">
      <summary></summary>
      <param name="node"></param>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.WriteCustomData(System.Xml.XmlWriter)">
      <summary></summary>
      <param name="writer"></param>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.OnThemeChanged">
      <summary></summary>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.LoadThemes(System.String)">
      <summary>XML ファイルからテーマのコレクションをロードします。</summary>
      <param name="fileName">テーマを含む XML ファイルの名前。</param>
    </member>
    <member name="M:C1.Win.C1Schedule.UI.ScheduleTheme.UpdatePalette">
      <summary>現在選択されているパレットに基づいてすべての C1Schedule スタイルを更新します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ComponentType">
      <summary></summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.System">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.System" />タイプの定義済みのテーマを取得します。
      </summary>
      <remarks>このテーマを使用し、アプリケーションに、現在のデスクトップ設定に従って その外観を自動的に変更させます。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007Blue">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Blue" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007Black">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Black" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2007Silver">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2007Silver" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2010Blue">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Blue" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2010Black">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Black" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Office2010Silver">
      <summary>
        <see cref="F:C1.Win.C1Schedule.UI.VisualStyle.Office2010Silver" />タイプの定義済みのテーマを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.XmlDefinition">
      <summary>
        XML エンコードの VisualStyle を表す
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.BaseFont">
      <summary>
        このプロパティを設定し、すべての
        <see cref="T:C1.Framework.Style" />オブジェクトの
        <see cref="P:C1.Framework.Style.Font" />値を一度に変更します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TitleImage">
      <summary>
        タイトルの右隅に画像を表示するために使用する
        <see cref="T:System.Drawing.Image" />オブジェクトを 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeRulerMinutesFont">
      <summary>
        時間ルーラー上に分を表示するために使用する
        <see cref="T:System.Drawing.Font" />オブジェクトを 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TimeRulerFormat2">
      <summary>
        時間の始まり以外の時刻を表示するタイムルーラで使用される時刻書式文字列を決定する
        <see cref="T:System.String" />値を取得または設定します。
      </summary>
      <remarks>デフォルト値は空の文字列です。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.TitleText">
      <summary>タイトルに表示する文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowMinuteLine">
      <summary>
        時間ルーラー上の分と分の間に線を表示するかどうかを決定する
        <see cref="T:System.Boolean" />値を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowEndTimeMonthView">
      <summary>月ビュー内に予定の終了時刻を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowTimeMonthView">
      <summary>
        MonthView モード時に予定の時間を表示するかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.AppointmentCornerRadius">
      <summary>
        予定の角の丸みを決定する
        <see cref="T:System.Int32" />値を取得または設定します。
      </summary>
      <remarks>このプロパティは、吹き出し状の予定の場合にのみ有効になります。</remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowEndTimeWeekView">
      <summary>Office 2003 スタイルの週ビュー内に予定の終了時刻を表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowNavigationPanels">
      <summary>ビューの側面にナビゲーションパネルを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowBrowseButtons">
      <summary>タイトル内にブラウズボタンを表示するかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.RoundBrowseButtons">
      <summary>
        タイトル内の参照ボタンを丸くするかどうかを決定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.HighlightDayStatus">
      <summary>有効なステータスを強調表示するかどうかを示す値を取得または設定します。 true を設定すると、予定の有効なステータスによって日付や時間帯の背景を変更します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.PaletteType">
      <summary>
        使用されるパレットのタイプを決定する
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.PaletteType" />値を取得または設定します。
      </summary>
      <remarks>
        このプロパティを変更すると、それに応じて
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.UseOffice2007Pallettes" />が変化します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowTodayBorder">
      <summary>コントロールが今日の日付の周りに（Office 2007 のような）オレンジ色の枠線を表示させるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.ShowWeekTabs">
      <summary>コントロールが月ビュー内に週タブを表示させるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.CurrentPalette">
      <summary>
        現在使用されているパレットを決定付ける
        <see cref="T:System.Drawing.Color" />値を取得または設定します。 このプロパティを設定すると、
        <see cref="T:C1.Win.C1Schedule.C1Schedule" />コントロールは
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes" />コレクション内の対応するパレットを検索し、それをビューにアタッチします。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palette">
      <summary>
        現在使用されている
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palette" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes">
      <summary>
        現在のテーマで利用可能な
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes" />コレクションを取得します。
      </summary>
      <remarks>
        アプリケーションにとって、組み込みの
        <see cref="T:C1.Win.C1Schedule.Forms.PaletteForm" />の内容が十分であれば、 コード内で
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palettes" />、
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.Palette" />、
        <see cref="P:C1.Win.C1Schedule.UI.ScheduleTheme.CurrentPalette" />を使用せず、それを利用できます。
      </remarks>
      <example>
        次のサンプルは、実行時にコード上でパレットを切り替える方法を示します。
        <code>// 利用可能なパレットを取得します。 Palettes pals = c1Schedule.Theme.Palettes; // パレットからキー色を取得します。 Palette pal = pals[0]; Color key; if ( pal.PaletteType == PaletteType.Office2007 ) { key = pal.AlternateMonth; } else { key = pal.WorkHour; } // ここで、エンドユーザーが好みの色を選択できるように、 // すべてのパレットからキー色を取得し、それを示すことができます。 // ... // コントロール内のパレットを選択します。 c1Schedule.Theme.CurrentPalette = key;</code></example>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean)">
      <summary>BasePersistableObject から派生された内部オブジェクトに、 指定された連結オブジェクトの値を挿入します。</summary>
      <param name="internalObject"></param>
      <param name="boundObject"></param>
      <param name="raiseChanged">このメソッドの呼び出し時に internalObject が Changed イベントを発生するかどうかを指定します。</param>
      <returns>このメソッドによって連結オブジェクトが変更されたかどうかを示す値。</returns>
      <remarks>派生クラスのオーバーライドメソッドでは、基本クラスの ReadObject メソッドを呼び出すか、自分自身の BasePersistableObject プロパティを 設定する必要があります。</remarks>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.ReadObject(`0,System.Object,System.Boolean,System.Boolean)">
      <summary>BasePersistableObject から派生された内部オブジェクトに、 指定された連結オブジェクトの値を挿入します。</summary>
      <param name="internalObject"></param>
      <param name="boundObject"></param>
      <param name="raiseChanged">このメソッドの呼び出し時に internalObject が Changed イベントを発生するかどうかを指定します。</param>
      <param name="dirty">オブジェクトが変更されているかどうかを指定します。</param>
      <returns>このメソッドによって連結オブジェクトが変更されたかどうかを示す値。</returns>
      <remarks>派生クラスのオーバーライドメソッドでは、基本クラスの ReadObject メソッドを呼び出すか、自分自身の BasePersistableObject プロパティを 設定する必要があります。</remarks>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.WriteObject(`0,System.Object)">
      <summary>派生クラスで実装されて、指定された internalObject の値を boundObject に挿入します。</summary>
      <param name="internalObject">C1Schedule コレクションに含まれるオブジェクト。</param>
      <param name="boundObject">カスタムデータソースのオブジェクト。</param>
      <remarks>派生クラスのオーバーライドメソッドでは、基本クラスの WriteObject メソッドを呼び出すか、自分自身の boundObject プロパティを 設定する必要があります。</remarks>
    </member>
    <member name="M:C1.C1Schedule.MappingCollectionBase`1.NewItem">
      <summary>派生クラスの実装では、型 T の新しいオブジェクトを返す必要があります。</summary>
      <returns>型 T の新しいオブジェクト。</returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentMappingCollection.ReadObject(C1.C1Schedule.Appointment,System.Object,System.Boolean)">
      <summary>指定された boundObject に含まれる値を BaseObject オブジェクトに挿入します。</summary>
      <param name="internalObject"></param>
      <param name="boundObject"></param>
      <param name="raiseChanged"></param>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.AppointmentMappingCollection.WriteObject(C1.C1Schedule.Appointment,System.Object)">
      <summary>指定された BaseObject オブジェクトに含まれる値を boundObject に挿入します。</summary>
      <param name="internalObject">予定オブジェクト。</param>
      <param name="boundObject">カスタムデータソースのオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.AppointmentMappingCollection.NewItem">
      <summary>新しい Appointment オブジェクトを作成します。</summary>
      <returns>作成された予定オブジェクトを返します。</returns>
    </member>
    <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.ReadObject(`0,System.Object,System.Boolean)">
      <summary>指定された boundObject に含まれる値を BaseObject オブジェクトに挿入します。</summary>
      <param name="internalObject"></param>
      <param name="boundObject"></param>
      <param name="raiseChanged"></param>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.BaseObjectMappingCollection`1.WriteObject(`0,System.Object)">
      <summary>指定された BaseObject オブジェクトに含まれる値を boundObject に挿入します。</summary>
      <param name="internalObject">T オブジェクト。</param>
      <param name="boundObject">カスタムデータソースのオブジェクト。</param>
    </member>
    <member name="M:C1.C1Schedule.MappingInfo.#ctor(System.Type,System.Type,System.String,System.Boolean,System.Object)">
      <summary>連結オブジェクトのプロパティが内部オブジェクトのプロパティとは異なる型を持つ 必要がある場合は、この ctor を使用します。</summary>
      <param name="type"></param>
      <param name="dataType"></param>
      <param name="propName"></param>
      <param name="required"></param>
      <param name="defaultValue"></param>
    </member>
    <member name="M:C1.C1Schedule.MappingInfo.GetPropertyValue(System.Object)">
      <summary>指定されたオブジェクトのプロパティを返します。</summary>
      <param name="obj"></param>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.MappingInfo.SetPropertyValue(System.Object,System.Object)">
      <summary>指定されたオブジェクトのプロパティを指定された値に設定します。</summary>
      <param name="obj"></param>
      <param name="value"></param>
      <returns></returns>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.#ctor(C1.C1Schedule.StorageComponent)">
      <summary>
        <see cref="T:C1.C1Schedule.BaseStorage`2" />コンポーネントの新しいインスタンスを初期化します。
      </summary>
      <param name="scheduleStorage">
        所有側の
        <see cref="T:C1.C1Schedule.StorageComponent" />コンポーネント。
      </param>
    </member>
    <member name="M:C1.C1Schedule.BaseStorage`2.CommitItemChanges(`0)">
      <summary>データ項目内のすべての変更をコミットします。</summary>
      <param name="item">Data item to apply changes.</param>
    </member>
    <member name="P:C1.C1Schedule.BaseStorage`2.Objects">
      <summary>これは内部使用専用です。</summary>
    </member>
    <member name="M:C1.C1Schedule.AppointmentStorage.CommitItemChanges(C1.C1Schedule.Appointment)">
      <summary>データ項目内のすべての変更をコミットします。</summary>
      <param name="item">変更を適用するデータ項目。</param>
    </member>
    <member name="T:C1.C1Schedule.StorageComponent">
      <summary>
        <see cref="T:C1.C1Schedule.StorageComponent" />は、データストレージの基本コンポーネントです。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.StorageComponent.#ctor">
      <summary>
        <see cref="T:C1.C1Schedule.StorageComponent" />コンポーネントの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.StorageComponent.#ctor(System.ComponentModel.IContainer)">
      <summary>
        <see cref="T:C1.C1Schedule.StorageComponent" />コンポーネントの新しいインスタンスを初期化します。
      </summary>
      <param name="container">親コンテナ。</param>
    </member>
    <member name="M:C1.C1Schedule.StorageComponent.Dispose(System.Boolean)">
      <summary>使用されているリソースをすべてクリーンアップします。</summary>
      <param name="disposing">マネージリソースを破棄する場合は true、そうでない場合は false。</param>
    </member>
    <member name="P:C1.C1Schedule.StorageComponent.DesignMode">
      <summary>
        コンポーネントが設計モードかどうかを指定する
        <see cref="T:System.Boolean" />値を取得します。
      </summary>
    </member>
    <member name="M:C1.C1Schedule.BasePersistableObject.#ctor">
      <summary>新しい BasePersistableObject オブジェクトを作成します。</summary>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.BeginUpdate">
      <summary>派生クラスでオーバーライドされて、バッチ操作を開始します。</summary>
    </member>
    <member name="M:C1.C1Schedule.BaseCollection`1.EndUpdate">
      <summary>派生クラスでオーバーライドされて、バッチ操作を終了します。</summary>
    </member>
    <member name="P:C1.C1Schedule.BaseCollection`1.SuppressedDataChanging">
      <summary>
        変更イベントを発生させないかどうかを指定する
        <see cref="T:System.Boolean" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.C1Schedule.AppointmentMappingCollection.Collection">
      <summary>マッピングに使用される AppointmentCollection を取得または設定します。</summary>
    </member>
  </members>
</doc>