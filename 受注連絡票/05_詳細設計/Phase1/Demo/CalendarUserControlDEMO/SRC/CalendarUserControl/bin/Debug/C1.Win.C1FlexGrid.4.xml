<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>C1.Win.C1FlexGrid.4</name>
  </assembly>
  <members>
    <member name="T:C1.C1Excel.Strings">
      <summary>デザイナによって使用される UI 文字列を含む静的クラス。</summary>
    </member>
    <member name="T:C1.Design.UITypeEditorStrings">
      <summary>デザイナによって使用される UI 文字列を含む静的クラス。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ColumnFilter">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.ColumnFilter.ValueFilter" />および
        <see cref="P:C1.Win.C1FlexGrid.ColumnFilter.ConditionFilter" />を含むフィルタを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.IC1ColumnFilter">
      <summary>列のフィルタオブジェクトにより実装されるインタフェース。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1ColumnFilter.Reset">
      <summary>フィルタをリセットして無効にします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1ColumnFilter.Apply(System.Object)">
      <summary>値にフィルタを適用します。</summary>
      <param name="value">フィルタされる値。</param>
      <returns>
        <paramref name="value" />がフィルタを満たす場合、true。そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1ColumnFilter.GetEditor">
      <summary>実行時にフィルタの変更に使用されるエディタを取得します。</summary>
      <returns>
        実行時にフィルタの変更に使用される
        <see cref="T:System.Windows.Forms.Control" />。
      </returns>
      <remarks>
        返されたコントロールは、
        <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilterEditor" />インタフェースを実装しなければなりません。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.IC1ColumnFilter.IsActive">
      <summary>フィルタが有効かどうかを決定する値を取得します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnFilter.Reset">
      <summary>フィルタをリセットして無効にします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnFilter.Apply(System.Object)">
      <summary>値にフィルタを適用します。</summary>
      <param name="value">フィルタされる値。</param>
      <returns>
        <paramref name="value" />がフィルタを満たした場合は、 true。そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnFilter.GetEditor">
      <summary>実行時にフィルタの変更に使用されるエディタを取得します。</summary>
      <returns>
        実行時にフィルタの編集に使用される
        <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilterEditor" />。
      </returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnFilter.ValueFilter">
      <summary>
        この
        <see cref="T:C1.Win.C1FlexGrid.ColumnFilter" />に含まれる
        <see cref="P:C1.Win.C1FlexGrid.ColumnFilter.ValueFilter" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnFilter.ConditionFilter">
      <summary>
        この
        <see cref="T:C1.Win.C1FlexGrid.ColumnFilter" />に含まれる
        <see cref="P:C1.Win.C1FlexGrid.ColumnFilter.ConditionFilter" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnFilter.IsActive">
      <summary>フィルタが有効かどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.IC1ColumnFilterEditor">
      <summary>列のフィルタエディタコントロールにより実装されたインタフェース。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1ColumnFilterEditor.Initialize(C1.Win.C1FlexGrid.C1FlexGridBase,System.Int32,C1.Win.C1FlexGrid.IC1ColumnFilter)">
      <summary>編集されたフィルタのパラメータでエディタを初期化します。</summary>
      <param name="grid">
        フィルタされる列を含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="columnIndex">フィルタされる値を含む列のインデックス。</param>
      <param name="filter">
        編集されている
        <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilter" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1ColumnFilterEditor.ApplyChanges">
      <summary>編集されたフィルタに変更を適用します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.IC1ColumnFilterEditor.KeepFormOpen">
      <summary>無効な場合にも、フォームを開いたままにしておくかどうかと決定する値を取得します。</summary>
      <remarks>このプロパティにより、カスタムエディタがモーダルダイアログを表示することが可能になります。</remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ValueFilter">
      <summary>一連の値に基づくフィルタを表します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ValueFilter.Reset">
      <summary>フィルタをリセットして無効にします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ValueFilter.Apply(System.Object)">
      <summary>値にフィルタを適用します。</summary>
      <param name="value">フィルタされる値。</param>
      <returns>
        <paramref name="value" />がフィルタを満たす場合、ture。そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ValueFilter.GetEditor">
      <summary>実行時にフィルタの変更に使用されるエディタを取得します。</summary>
      <returns>
        実行時にフィルタの編集に使用される
        <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilterEditor" />。
      </returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ValueFilter.ShowValues">
      <summary>出力に含める値の配列を取得または設定します。</summary>
      <remarks>このプロパティを null に設定すると、フィルタはすべての値を出力に含めます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ValueFilter.IsActive">
      <summary>フィルタが有効かどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ComboBoxEditor">
      <summary>現在アクティブな ComboBox エディタに関する情報を提供するヘルパークラス。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ComboBoxEditor.SelectedIndex">
      <summary>現在アクティブな ComboBox エディタ内で選択されたインデックスを取得または設定します。</summary>
      <remarks>アクティブエディタが存在しないか、エディタがコンボボックスでない場合、 戻り値は -1 です。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ComboBoxEditor.SelectedItem">
      <summary>現在アクティブな ComboBox エディタ内で選択された項目を取得または設定します。</summary>
      <remarks>アクティブエディタが存在しないか、エディタがコンボボックスでない場合、 戻り値は null です。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ComboBoxEditor.SelectedKey">
      <summary>現在アクティブな ComboBox エディタ内で選択された項目に対応する キーを取得します。</summary>
      <remarks>
        アクティブなエディタが存在しない場合、エディタが
        <see cref="P:C1.Win.C1FlexGrid.ComboBoxEditor.ComboBox" />でない場合、 または編集されるセルが関連付けられた
        <b>DataMap</b>を持たない場合、戻り値は null です。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ComboBoxEditor.Items">
      <summary>現在アクティブな ComboBox エディタ内の項目のコレクションを取得します。</summary>
      <remarks>アクティブエディタが存在しないか、エディタがコンボボックスでない場合、 戻り値は null です。</remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.IC1EmbeddedEditor">
      <summary>セル上に編集コントロールを提供するために、エディタによって実装され、グリッドによって使用されるインタフェース。</summary>
      <remarks>
        <para>
          <b>IC1EmbeddedEditor</b>は、グリッドエディタによって実装され、グリッドによってセル上の編集コントロールをホストするために使用されます。すべての内部グリッドエディタが IC1EmbeddedEditor をサポートします。
        </para>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />でサードパーティのエディタを使用する場合は、派生クラスを作成して、このインタフェースを実装することを検討してください。
        </para>
        <para>
          <b>IC1EmbeddedEditor</b>内のメソッドは、リフレクションを使用して呼び出されることに注意してください。コントロールではインタフェース全体を実装する必要はありません。 他のコントロール（サードパーティのコントロール）がいくつかのメソッドを実装している場合もあります。実装している場合は、対応する署名（名前、パラメータ、および戻り値）を持つパブリックメソッドがグリッドによって呼び出されます。実装していない場合、グリッドはコントロールによって実装されないすべてのメソッドに対してデフォルトのハンドラを提供します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorInitialize(System.Object,System.Collections.IDictionary)">
      <summary>エディタの内容とスタイルを初期化するために呼び出されます。</summary>
      <param name="value">エディタに表示するグリッドデータを格納します。</param>
      <param name="editorAttributes">編集するセルのスタイル要素の名と値に対応するキーを含む辞書を格納します。</param>
      <remarks>
        <para>
          <paramref name="editorAttributes" />辞書は以下のキーを含みます。
        </para>
        <para>
          <b>BackColor</b>：セルの背景色。
        </para>
        <para>
          <b>ForeColor</b>：セルの前景色。
        </para>
        <para>
          <b>Font</b>：セルのフォント。
        </para>
        <para>
          <b>Format</b>：セルの書式文字列（例："#,##0.##"）。
        </para>
        <para>
          <b>ContentAlignment</b>：セルのテキスト配置。
        </para>
        <para>
          <b>Margins</b>：セル内容の周囲の余分な空白（ピクセル単位）。
        </para>
        <para>
          <b>Wrap</b>：ワードラップが有効かどうか。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorGetValue">
      <summary>エディタの現在の値を取得します。</summary>
      <returns>エディタの現在の値（任意のデータ型）。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorValueIsValid">
      <summary>エディタの現在の内容が有効かどうかを決定する値を取得します。</summary>
      <returns>
        エディタが現在有効な内容を持っている場合 true （
        <b>EditMask</b>を含み、 すべての必要な位置に入力されている場合など）。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorUpdateBounds(System.Drawing.Rectangle)">
      <summary>エディタのサイズと位置を更新するために呼び出されます。</summary>
      <param name="rc">クライアント座標での、編集するセルの範囲。</param>
      <remarks>このメソッドは、初期化時、およびグリッドのスクロール時に呼び出されます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorKeyDownFinishEdit(System.Windows.Forms.KeyEventArgs)">
      <summary>特定のキーが編集を終了するかどうかを決定する値を取得します。</summary>
      <param name="e">テストするキー。</param>
      <returns>キーが編集を終了してエディタを閉じる場合 true 。</returns>
      <remarks>
        <para>
          このメソッドが true を返す場合、グリッドはエディタ値をセルにコピーして 編集モードを終了します。キーはグリッドで処理されます（
          <b>e.Handled</b>パラメータが true に設定されていない場合）。
        </para>
        <para>たとえば、下矢印を押すと、通常、グリッドは編集モードを終了してカーソルを 次の行に移動させます。</para>
        <para>
          デフォルトのハンドラは、［ Tab ］、［ Enter ］、［ Esc ］の各キーに true を返します。 また、
          <b>TextBox</b>、
          <b>ComboBox</b>、
          <b>DateTimePicker</b>の各コントロールに基づいて エディタの矢印キーも処理します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorFormat(System.Object,System.String)">
      <summary>指定したマスクを使用して特定の値を書式設定します。</summary>
      <param name="value">書式設定する値。</param>
      <param name="mask">書式マスク。</param>
      <returns>書式設定された値を含む文字列。</returns>
      <remarks>
        デフォルトの実装は、マスクを無視して
        <b>value.ToString()</b>を返します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1EmbeddedEditor.C1EditorGetStyle">
      <summary>編集前と編集中に表示するボタンの種類を決定する エディタスタイル（ DropDown 、 Modal 、 None ）を取得します。</summary>
      <remarks>
        <para>
          デフォルトのハンドラは、 ComboBox 、 DateTimePicker 、 UpDown の各コントロールの場合、
          <b>DropDown</b>を返します。その他のコントロールタイプの場合
          <b>None</b>を返します。
        </para>
        <para>
          <b>UITypeEditorEditStyle</b>列挙体は、
          <b>System.Drawing.Design</b>名前空間で定義します。 使用可能な設定は、
          <b>DropDown</b>、
          <b>Modal</b>、
          <b>None</b>です。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.IC1MultiColumnDictionary">
      <summary>
        <see cref="T:System.Collections.IDictionary" />を拡張し、複数列データマップを実装するために使用できるインタフェース。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1MultiColumnDictionary.GetDisplayValue(System.Object)">
      <summary>編集モードでない場合にグリッドに表示される文字列を取得します。</summary>
      <param name="key">ディレクトリで検索する値。</param>
      <returns>編集モードでない場合にグリッドに表示される文字列。</returns>
      <remarks>
        <see cref="T:C1.Win.C1FlexGrid.IC1MultiColumnDictionary" />を使用して
        <see cref="T:System.Windows.Forms.ComboBox" />に項目を挿入する場合、コンボボックスがドロップダウンされると、すべての列が表示されます。コンボボックスが閉じられると、１つの列だけが表示されます。このメソッドは、その値を返します。
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.MultiColumnDictionary">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.IC1MultiColumnDictionary" />を実装し、複数列コンボエディタを作成するための DataMap 列として使用できるクラス。
      </summary>
      <remarks>
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスを使用して、文字列に基づく単純なデータマップ、またはデータソースオブジェクトからデータを取得する連結データマップを実装できます。
      </remarks>
      <example>
        <para>次のコードは、非連結２列データマップを作成し、それをグリッド列に割り当てます。</para>
        <code lang="VB.NET">' 文字列に基づく MultiColumnDictionary を作成し、それを列に割り当てます。 ' メモ : これは、項目ごとに int 型のキーを自動的に生成します。 ' キー値はグリッドに格納されます。 Dim text As String = "Row1, Col1\tRow1, Col2|Row2, Col1\tRow2, Col2".Replace("\t", vbTab) Dim map As MultiColumnDictionary = New MultiColumnDictionary(text, 0, True) flex.Cols(1).DataMap = map</code>
        <code lang="C#">// 文字列に基づく MultiColumnDictionary を作成し、それを列に割り当てます。 // メモ : これは、項目ごとに int 型のキーを自動的に生成します。 // キー値はグリッドに格納されます。 string text = "Row1, Col1\tRow1, Col2|Row2, Col1\tRow2, Col3|Row2, Col1\tRow3, Col2"; MultiColumnDictionary map = new MultiColumnDictionary(text, 0, true); flex.Cols[1].DataMap = map;</code>
        <para>
          マップは３つの項目で構成され、各項目に２つの列があります。
          <paramref name="autoKeys" />パラメータはマップのコンストラクタで true に設定されるため、マップの各値には一意の整数キーが対応し、これらの整数がグリッドセルに格納されます。
          <paramref name="autoKeys" />が false に設定されている場合は、文字列自身がキーとして使用され、グリッドセルに格納されます。
        </para>
        <para>次のコードは、連結データマップを作成し、それをグリッド列に割り当てます。</para>
        <para></para>
        <code lang="VB.NET">' データに基づく MultiColumnDictionary を作成し、それを列に割り当てます。 ' メモ : データソースが変更されると、リストが自動的に更新されます。 Dim dt As DataTable = GetDataTable("employees") Dim columnNames() As String = New String() {"FirstName", "LastName", "Country"} Dim map As MultiColumnDictionary = New MultiColumnDictionary(dt, "EmployeeID", columnNames, 1) flex.Cols(2).DataMap = map</code>
        <code lang="C#">// データに基づく MultiColumnDictionary を作成し、それを列に割り当てます。 // メモ : データソースが変更されると、リストが自動的に更新されます。 DataTable dt = GetDataTable("employees"); string[] columnNames = new string[] { "FirstName", "LastName", "Country" }; MultiColumnDictionary map = new MultiColumnDictionary(dt, "EmployeeID", columnNames, 1); flex.Cols[2].DataMap = map;</code>
        <para>
          このマップは Employees DataTable に連結されます。
          <paramref name="keyColumn" />パラメータは「 EmployeeID 」に設定され、このフィールドがキーとして使用されます。グリッドが編集されると、これらのセルに格納された値が従業員の ID になります。ただし、この値がグリッドに表示されることはありません。
        </para>
        <para>
          ドロップダウンリストには、
          <paramref name="columnNames" />パラメータで指定された従業員の名、姓、国が表示されます。
        </para>
        <para>
          リストが閉じられると、グリッドには、
          <paramref name="displayColumn" />パラメータで指定された従業員の姓が表示されます。
        </para>
        <para>このマップはデータソースに動的に連結されているため、従業員テーブルが変更されると、エディタリストは自動的に変更を反映します。</para>
        <para>また、自動検索やダブルクリックによる順次選択など、通常のコンボボックス編集機能も動作します。</para>
        <para>MultiColumnDictionary サンプルも参照してください。</para>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.#ctor(System.String)">
      <summary>
        連結
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="items">パイプ文字（「|」）で区切られた項目を含む文字列。各項目は、タブ（ vbTab または「\t 」）で区切られた複数の列から成ります。</param>
      <remarks>このコンストラクタを使用した場合、マップは、エディタがドロップダウンされるとすべての列を表示し、エディタが閉じるか非アクティブになると最初の列だけを表示します。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.#ctor(System.String,System.Int32,System.Boolean)">
      <summary>
        連結
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="items">項目を含む文字列。項目はパイプ文字（「|」）で区切られます。各項目は、タブ（ vbTab または「\t 」）で区切られた複数の列から成ります。</param>
      <param name="displayColumn">グリッドに表示される列のインデックス。</param>
      <param name="autoKeys">キーを自動的に生成する場合は、 true 。項目自身をキーとして使用する場合は、 false 。false の場合、項目の重複は許可されません。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.#ctor(System.ComponentModel.ITypedList,System.String,System.String[],System.Int32)">
      <summary>
        連結
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="list">データソースオブジェクト。</param>
      <param name="keyColumn">一意のキーを含むデータソース列の名前。</param>
      <param name="columnNames">マップに含まれる列の名前から成る配列。</param>
      <param name="displayColumn">グリッドに表示される列の名前。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.#ctor(System.ComponentModel.ITypedList,System.String)">
      <summary>
        連結
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="list">データソースオブジェクト。</param>
      <param name="keyColumn">一意のキーを含むデータソース列の名前。</param>
      <remarks>このコンストラクタを使用した場合、マップは、エディタがドロップダウンされるとすべての列を表示し、エディタが閉じるか非アクティブになると最初の列だけを表示します。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.#ctor(System.Data.DataTable,System.String,System.String[],System.Int32)">
      <summary>
        連結
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="table">データソースオブジェクト。</param>
      <param name="keyColumn">一意のキーを含むデータソース列の名前。</param>
      <param name="columnNames">マップに含まれる列の名前から成る配列。</param>
      <param name="displayColumn">グリッドに表示される列の名前。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.#ctor(System.Data.DataTable,System.String)">
      <summary>
        連結
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="table">データソースオブジェクト。</param>
      <param name="keyColumn">一意のキーを含むデータソース列の名前。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.Clear">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />からすべてのエントリを削除します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AllowMergingEnum">
      <summary>隣接するセルをマージして表示する方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.None">
      <summary>どのセルもマージしません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.Free">
      <summary>同じ内容の隣接するセルをマージします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.RestrictRows">
      <summary>上にあるセルもマージされる場合にのみ行をマージします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.RestrictCols">
      <summary>左にあるセルもマージされる場合にのみ列をマージします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.RestrictAll">
      <summary>上または左にあるセルもマージされる場合にのみセルをマージします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.FixedOnly">
      <summary>固定セルだけをマージします。この設定は、データに複雑なヘッダを設定し、データ自身がマージされないようにする場合に役立ちます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.Spill">
      <summary>長いエントリが隣接する空のセルにはみ出るようにします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.Nodes">
      <summary>ノード行内の長いエントリが隣接する空のセルにはみ出るようにします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.Custom">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGrid.MergedRanges" />コレクションを使用してマージされるセルを決定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowMergingEnum.Default">
      <summary>
        <b>AllowMerging</b>プロパティに指定された設定を使用します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.C1FlexGrid">
      <summary>
        <para>C1FlexGrid コントロールは、多彩な表現力と柔軟性を兼ね備えたグリッドです。</para>
        <para>C1FlexGrid は、アウトラインツリー、セルのマージ、マスク編集、値変換付きのコンボ／画像リスト、オーナー描画セル、自動データ集計などの高度な機能を提供します。</para>
      </summary>
      <remarks>
        <para>C1FlexGrid は、連結モードでも非連結モードでも使用できます。連結モードでは、.NET データソースからデータを取得して表示します。非連結モードでは、グリッド自身がデータを管理します。</para>
        <para>C1FlexGrid を使用して、 Excel ファイル（.xls ）を読み書きしたり、 Xml ファイルとの間でグリッドの内容を読み書きすることができます。</para>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />から派生されるクラスは、その派生コントロールを使用するプロジェクトに Visual Studio によって適切なライセンス情報が埋め込まれるように、 LicenseProvider 属性を持つ必要があります。
        </para>
        <para>次に例を示します。</para>
        <para></para>
        <code lang="VB.NET">&lt;LicenseProviderAttribute(GetType(LicenseProvider))&gt; _ Public Class MyControl Inherits C1.Win.C1FlexGrid.C1FlexGrid ' 実装 End Class</code>
        <code lang="C#">[LicenseProvider(typeof(LicenseProvider))] public class MyGrid : C1FlexGrid { // 実装 }</code>
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.C1FlexGridBase">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />コントロールの基本クラス。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl">
      <summary>自動スクロール動作をサポートするコントロールの基本クラス。</summary>
      <remarks>
        このクラスは、
        <see cref="T:System.Windows.Forms.ScrollableControl" />に似ていますが、さらに追加のカスタマイズ、高度なスクロール通知、スクロールトラッキング、 Windows XP テーマをサポートします。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl" />クラスの新しいインスタンスを作成します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.BeginUpdate">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.EndUpdate" />メソッドが呼び出されるまで、コントロールの更新を抑制することで、パフォーマンスを維持します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.EndUpdate">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.BeginUpdate" />メソッドに対する呼び出し後、コントロールの更新を再開します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnThemeChanged">
      <summary>コントロールが WM_THEMECHANGED メッセージを受け取ったときに呼び出されます。</summary>
      <remarks>WM_THEMECHANGED メッセージは、テーマ変更イベントに続いてすべてのウィンドウにブロードキャストされます。 テーマ変更イベントの例としては、テーマのアクティブ化、テーマの非アクティブ化、 あるテーマから別のテーマへの移行が挙げられます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnImeStartComposition">
      <summary>コントロールが WM_IME_STARTCOMPOSITION メッセージを受け取ったときに呼び出されます。</summary>
      <remarks>WM_IME_STARTCOMPOSITION メッセージは、キーストロークの結果として IME で合成文字列が作成される直前に送られます。このメッセージは、 合成ウィンドウを開くことを IME ウィンドウに通知します。アプリケーション自体で合成文字を表示する場合は、 そのアプリケーションでこのメッセージを処理する必要があります。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnScroll(System.Windows.Forms.ScrollBars)">
      <summary>
        コントロールがスクロールした後に呼び出されます（
        <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを参照）。
      </summary>
      <param name="sb">
        スクロール方向を示す
        <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBars" />の値。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnScrollTip(System.Int32)">
      <summary>コントロールがスクロールの先端を表示する前に呼び出されます。</summary>
      <param name="newValue">垂直スクロールバーの新しい値。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.BuildScrollableRectangle(System.Int32,System.Int32)">
      <summary>スクロールオフセットの特定のペアについて、コントロールのスクロール可能な部分を定義する矩形を作成します。</summary>
      <param name="dx">水平スクロールオフセット。</param>
      <param name="dy">垂直スクロールオフセット。</param>
      <returns>
        コントロールのスクロール可能な部分を定義する
        <see cref="T:System.Drawing.Rectangle" />。
      </returns>
      <remarks>このメソッドは内部用です。これにより、派生クラスでコントロールのスクロール動作をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Paint" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnSizeChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.SizeChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseWheel" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.MouseEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnClientSizeChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ClientSizeChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.OnChangeScrollBarPosition(System.Int32,System.Boolean,System.Int32,System.Int32)">
      <summary>ユーザーコマンドに反応してスクロールバーの新しい位置を計算します。</summary>
      <param name="cmd">スクロールコマンド（SB_LINEUP など）。</param>
      <param name="verticalBar">垂直スクロールバーの場合は true、水平スクロールバーの場合は false。</param>
      <param name="curPos">現在のスクロールバーの位置。</param>
      <param name="trackPos">スクロールバーのつまみの位置。</param>
      <returns>スクロールバーの新しい位置。</returns>
      <remarks>派生クラスで、このメソッドをオーバーライドしてスクロール動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBars">
      <summary>コントロールに表示されるスクロールバーを取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ScrollOptions" />プロパティで
          <see cref="F:C1.Win.C1FlexGrid.ScrollFlags.AlwaysVisible" />フラグを設定していない場合、スクロールバーが表示されるのはコントロールの内容がクライアント領域に入りきらない場合だけです。たとえば、
          <b>ScrollBars</b>が
          <b>ScrollBars.Horizontal</b>に設定されている場合、水平スクロールバーが表示されるのは、コントロールの幅が狭すぎてすべての列を一度に表示できない場合だけです。スクロールバーがない場合でも、コントロールは、選択範囲が表示されるようにスクロールします。スクロールを抑止する場合は、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScroll" />イベントを処理し、その
          <see cref="F:C1.Win.C1FlexGrid.RangeEventArgs.Cancel" />パラメータを true に設定します。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ScrollOptions" />プロパティで
          <see cref="F:C1.Win.C1FlexGrid.ScrollFlags.AlwaysVisible" />フラグを設定している場合、コントロールの内容に関わらず、スクロールバーが表示されます。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBarsVisible" />プロパティにより、現在可視になるスクロールバーを決定できます。
        </para>
      </remarks>
      <seealso cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBarsVisible" />
      <seealso cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ForceScrollBars" />
    </member>
    <member name="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition">
      <summary>自動スクロール位置を取得または設定します。</summary>
      <remarks>
        <para>
          スクロール位置をピクセル座標で取得または設定するには、
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを使用します。
        </para>
        <para>
          スクロール位置をセル座標で取得または設定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />プロパティと
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />プロパティを使用します。
        </para>
      </remarks>
      <example>
        <para>次のコードは、２つのグリッド（_flexLeft と _flexRight ）を連結し、垂直スクロールを同期させます。水平方向にはグリッドを独立にスクロールできます。</para>
        <code lang="VB.NET">' グリッドを連結します。 fgRight.DataSource = fgLeft fgLeft.ScrollBars = ScrollBars.Horizontal ' 垂直方向のスクロールを同期させます。 ' これは両方のグリッドの AfterScroll イベントを処理します。 Private Sub flex_AfterScroll(sender As Object, _ e As C1.Win.C1FlexGrid.RangeEventArgs) ' 送信元のグリッド（_flexLeft または _flexRight）を更新します。 Dim fg As C1FlexGrid.C1FlexGrid = CType(sender, C1FlexGrid) ' fg.Update() ' 送信元のグリッドから新しい垂直位置を取得します。 Dim y As Integer = fg.ScrollPosition.Y ' 新しい垂直位置をもう一方のグリッドに適用します。 If fg = fgLeft Then fgRight.ScrollPosition = New Point(fgRight.ScrollPosition.X, y) Else fgLeft.ScrollPosition = New Point(fgLeft.ScrollPosition.X, y) End If End Sub</code>
        <code lang="C#">// グリッドを連結します _flexRight.DataSource = _flexLeft; _flexLeft.ScrollBars = ScrollBars.Horizontal; // 垂直スクロールを同期させます // これは両方のグリッドの AfterScroll イベントを処理します private void flex_AfterScroll(object sender, C1.Win.C1FlexGrid.RangeEventArgs e) { // 送信元のグリッド（_flexLeft または _flexRight ）を更新します C1FlexGrid.C1FlexGrid src = ((C1FlexGrid)sender); src.Update(); // 送信元のグリッドから新しい垂直位置を取得します int y = src.ScrollPosition.Y; // 新しい垂直位置をもう一方のグリッドに適用します if (src.Equals(_flexLeft)) { _flexRight.ScrollPosition = new Point(_flexRight.ScrollPosition.X, y); } else { _flexLeft.ScrollPosition = new Point(_flexLeft.ScrollPosition.X, y); } }</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.BorderStyle">
      <summary>コントロールの境界線の種類を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBarsVisible">
      <summary>
        現在表示されているスクロールバーを示す
        <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBars" />値を取得します。
      </summary>
      <seealso cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollBars" />
      <seealso cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ForceScrollBars" />
    </member>
    <member name="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollableRectangle">
      <summary>コントロールのスクロール可能な部分を定義する四角形を取得します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Dispose(System.Boolean)">
      <summary>
        <see cref="T:System.Windows.Forms.Control" />で使用されるすべてのリソースを解放します。
      </summary>
      <param name="disposing">true では、マネージドリソースとアンマネージドリソースが両方とも解放され、 false では、アンマネージドリソースのみが解放されます。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.BeginInit">
      <summary>オブジェクトに初期化が開始されたことを通知します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndInit">
      <summary>オブジェクトに初期化が完了したことを通知します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGetLocalizedString(C1.Win.C1FlexGrid.GetLocalizedStringEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetLocalizedString" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CreateAccessibilityInstance">
      <summary>コントロールの新しいアクセス可能オブジェクトを作成します。</summary>
      <returns>
        コントロールの新しい
        <see cref="T:System.Windows.Forms.AccessibleObject" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetAccessibilityObjectById(System.Int32)">
      <summary>
        指定された
        <see cref="T:System.Windows.Forms.AccessibleObject" />を取得します。
      </summary>
      <param name="objectId">返されるアクセス可能オブジェクトの行のインデックス。</param>
      <returns>
        指定された行の
        <see cref="T:System.Windows.Forms.AccessibleObject" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBindingContextChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.BindingContextChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeMouseDown(C1.Win.C1FlexGrid.BeforeMouseDownEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントを発生させます。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeDoubleClick(C1.Win.C1FlexGrid.BeforeMouseDownEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDoubleClick" />イベントを発生させます。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeDragRow(C1.Win.C1FlexGrid.DragRowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDraggingRow(C1.Win.C1FlexGrid.DragRowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.DraggingRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterDragRow(C1.Win.C1FlexGrid.DragRowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeDragColumn(C1.Win.C1FlexGrid.DragRowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDraggingColumn(C1.Win.C1FlexGrid.DragRowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.DraggingColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterDragColumn(C1.Win.C1FlexGrid.DragRowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeSort(C1.Win.C1FlexGrid.SortColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSort" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.SortColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterSort(C1.Win.C1FlexGrid.SortColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSort" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.SortColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeAutosizeRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAutosizeRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeAutosizeColumn(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAutosizeColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeResizeRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAutosizeRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterResizeRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeResizeColumn(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterResizeColumn(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeFreezeRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeFreezeRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterFreezeRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterFreezeRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeFreezeColumn(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeFreezeColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterFreezeColumn(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterFreezeColumn" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnMouseEnterCell(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.MouseEnterCell" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnMouseLeaveCell(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.MouseLeaveCell" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeScroll(C1.Win.C1FlexGrid.RangeEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScroll" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterScroll(C1.Win.C1FlexGrid.RangeEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterScroll" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnShowScrollTip(C1.Win.C1FlexGrid.ToolTipEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ShowScrollTip" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.ToolTipEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeRowColChange(C1.Win.C1FlexGrid.RangeEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterRowColChange(C1.Win.C1FlexGrid.RangeEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterRowColChange" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeSelChange(C1.Win.C1FlexGrid.RangeEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterSelChange(C1.Win.C1FlexGrid.RangeEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSelChange" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnRowColChange(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowColChange" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnSelChange(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SelChange" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnLeaveCell(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveCell" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnEnterCell(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.EnterCell" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeEdit(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnStartEdit(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterEdit(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnLeaveEdit(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnCellButtonClick(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnSetupEditor(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetupEditor" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnValidateEdit(C1.Win.C1FlexGrid.ValidateEditEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.ValidateEditEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnCellChecked(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellChecked" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.ValidateEditEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnChangeEdit(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ChangeEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnComboDropDown(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboDropDown" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnComboCloseUp(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboCloseUp" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnKeyDownEdit(C1.Win.C1FlexGrid.KeyEditEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyDownEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.KeyEditEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnKeyUpEdit(C1.Win.C1FlexGrid.KeyEditEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyUpEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.KeyEditEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnKeyPressEdit(C1.Win.C1FlexGrid.KeyPressEditEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyPressEdit" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.KeyPressEditEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnCellChanged(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDataRefresh(System.ComponentModel.ListChangedEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDataRefresh" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.ComponentModel.ListChangedEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGridError(C1.Win.C1FlexGrid.GridErrorEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GridErrorEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGetUnboundValue(C1.Win.C1FlexGrid.UnboundValueEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetUnboundValue" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.UnboundValueEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnSetUnboundValue(C1.Win.C1FlexGrid.UnboundValueEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetUnboundValue" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.UnboundValueEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDataBindingComplete(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.DataBindingComplete" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDataSourceChanged(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.DataSourceChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDataMemberChanged(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.DataMemberChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeCollapse(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeCollapse" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterCollapse(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterCollapse" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnOwnerDrawCell(C1.Win.C1FlexGrid.OwnerDrawCellEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforePageBreak(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforePageBreak" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeginPrint" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.EndPrint" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Drawing.Printing.PrintEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.PrintPage" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnStartDrag(System.Windows.Forms.DragEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartDrag" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.DragEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeAddRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAddRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterAddRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterAddRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnCancelAddRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CancelAddRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeDeleteRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDeleteRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterDeleteRow(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDeleteRow" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGetCellErrorInfo(C1.Win.C1FlexGrid.GetErrorInfoEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellErrorInfo" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GetErrorInfoEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGetRowErrorInfo(C1.Win.C1FlexGrid.GetErrorInfoEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetRowErrorInfo" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GetErrorInfoEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeSubtotal(C1.Win.C1FlexGrid.SubtotalEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSubtotal" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.SubtotalEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterSubtotal(C1.Win.C1FlexGrid.SubtotalEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSubtotal" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.SubtotalEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBeforeFilter(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeFilter" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.ComponentModel.CancelEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAfterFilter(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterFilter" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellStyle(System.Int32,System.Int32)">
      <summary>
        セルに関連付けられた独自の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得します。
      </summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>
        セルに関連付けられた
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクト、またはセルがカスタムスタイルを含まない場合は null 。
      </returns>
      <remarks>
        セルにカスタムスタイルがない場合、グリッドは、組み込みスタイルの１つを使用してセルを描画します。組み込みスタイルは、セルの位置と状態（固定、スクロール可能、強調表示など）に基づいて選択されます。セルの描画に使用されるスタイル（独自または組み込み）を取得するには、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellStyleDisplay(System.Int32,System.Int32)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellStyle(System.Int32,System.Int32,C1.Win.C1FlexGrid.CellStyle)">
      <summary>
        独自の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />をセルに割り当てます。
      </summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="newStyle">
        セルに関連付ける
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />。
      </param>
      <remarks>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellStyle(System.Int32,System.Int32,C1.Win.C1FlexGrid.CellStyle)" />メソッドは、新しいスタイルを１つのセルに割り当てる場合に便利です。セルスタイルを null （ VB では Nothing ）に設定すると、セルスタイルをリセットできます。
        </para>
        <para>
          独自のセルスタイルを１つの行または列全体に適用するには、
          <b>Row.Style</b>プロパティまたは
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Style" />プロパティを設定します。
        </para>
        <para>
          カスタムスタイルをセル範囲に適用するには、
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを使用します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">Dim rg As CellRange = flex.GetCellRange(3, 3, 10, 10) rg.Style = flex.Styles("MyRangeStyle")</code>
        <code lang="C#">CellRange rg = flex.GetCellRange(3, 3, 10, 10); rg.Style = flex.Styles["MyRangeStyle"];</code>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellStyle(System.Int32,System.Int32,System.String)">
      <summary>
        独自の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />をセルに割り当てます。
      </summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="styleName">新しいスタイルの名前。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellStyleDisplay(System.Int32,System.Int32)">
      <summary>セルのレンダリングに使用されるスタイルを取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>
        セルの表示に使用される
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクト。
      </returns>
      <remarks>
        <para>
          返される
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトは、複数のスタイルに含まれる要素から成る場合があります。たとえば、フォーカスがあるセルは、
          <b>Styles.Focus</b>、セル／行／列に関連付けられているカスタムスタイル（ある場合）、および
          <b>Styles.Normal</b>スタイルに含まれる要素から成るスタイルで描画されます。
        </para>
        <para>
          このメソッドではNullを返すことはありません。セルに設定されたカスタムスタイル、またはカスタムスタイルを持たない場合は組み込みスタイルのどちらかのスタイルが返されます。セルがカスタムスタイルを持っているかどうかを特定したり、カスタムスタイルを取得するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellStyle(System.Int32,System.Int32)" />メソッドを使用してください。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellImage(System.Int32,System.Int32)">
      <summary>グリッドセルに表示される画像を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellImage(System.Int32,System.Int32,System.Drawing.Image)" />メソッドを使用して前にセルに割り当てられた
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellImage(System.Int32,System.Int32,System.Drawing.Image)">
      <summary>グリッドセルに表示される画像を設定します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="newImage">
        セルに表示する画像を含む
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </param>
      <remarks>
        <para>通常のセルの内容に加えて、セルに画像を表示できます。セルに画像を表示するためのメソッドは、次の２つがあります。</para>
        <para>
          1.
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellImage(System.Int32,System.Int32,System.Drawing.Image)" />および
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellImage(System.Int32,System.Int32)" />メソッドを使用して、セルに直接画像を割り当てることができます。この場合、セルの内容と画像は独立しています。画像を更新するには、再度
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellImage(System.Int32,System.Int32,System.Drawing.Image)" />を呼び出す必要があります。
        </para>
        <para>
          2.
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageMap" />プロパティを使用して、特定のセル値に画像を関連付けることができます。この場合、セルの内容が変更されると、画像も自動的に更新されます。
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageAndText" />プロパティを使用すると、セルテキストと共に画像を表示するか、セルテキストの代わりに画像を表示するかを指定できます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(System.Int32,System.Int32,System.Object,System.Boolean)">
      <summary>値をグリッドセルに割り当てます。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="value">セルに割り当てる値。</param>
      <param name="coerce">値を列のデータ型に変換する必要があるかどうか。</param>
      <returns>値がセルに割り当てられた場合は true 。</returns>
      <remarks>
        <para>
          <paramref name="coerce" />が true に設定され、値を適切なデータ型に変換できない場合、グリッドは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントを発生させ、セルは元の値を維持します。
        </para>
        <para>
          <paramref name="coerce" />を true に設定して
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(System.Int32,System.Int32,System.Object,System.Boolean)" />を使用することは、グリッドのインデクサを設定することと同じです。たとえば、次のコード行は同じです。
        </para>
        <para></para>
        <code lang="VB.NET">flex.SetData(1, 1, "Hello", True) flex(1, 1) = "Hello" ' 同じです</code>
        <code lang="C#">flex.SetData(1, 1, "Hello", true); flex[1, 1] = "Hello"; // 同じです</code>
        <para>データ値をセルに割り当てると、グリッドは列のデータ型を調べて自動的に値を適切な型に変換します。たとえば、列のDataTypeプロパティが整数に設定されている場合に、ユーザが文字列または倍精度値を割り当てると、グリッドはその値をグリッドに格納する前に整数に変換しようとします。変換に失敗した場合、SetDataメソッドはfalseを返します。</para>
        <para>
          オプションで引数
          <paramref name="coerce" />をfalseに設定すると、データは変換せずにグリッドに格納されます。これによって、列のデータ型に関係なく任意の値をセルに格納できます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(C1.Win.C1FlexGrid.CellRange,System.Object,System.Boolean)">
      <summary>値をセル範囲に割り当てます。</summary>
      <param name="rg">
        新しい値が割り当てられるセルを指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
      <param name="value">範囲内のすべてのセルに割り当てられる値。</param>
      <param name="coerce">値を列のデータ型に変換する必要があるかどうか。</param>
      <returns>値が目的の範囲内のすべてのセルに割り当てられた場合は、 true 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(System.Int32,System.Int32,System.Object)">
      <summary>値をグリッドセルに割り当て、値をセルに指定された DataType に変換します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="value">セルに割り当てる値。</param>
      <returns>値がセルに割り当てられた場合は、 true 。値が割り当てられなかった場合は、 false （通常は、適切な型に変換できなかったため）。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(C1.Win.C1FlexGrid.CellRange,System.Object)">
      <summary>値をセル範囲に割り当て、値を各セルに指定された DataType に変換します。</summary>
      <param name="rg">
        新しい値が割り当てられるセルを指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
      <param name="value">範囲内のすべてのセルに割り当てられる値。</param>
      <returns>値が目的の範囲内のすべてのセルに割り当てられた場合は、 true 。値が範囲内のすべてのセルに割り当てられなかった場合は、 false （通常は、適切な型に変換できなかったため）。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(System.Int32,System.String,System.Object,System.Boolean)">
      <summary>値をグリッドセルに割り当てます。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <param name="value">セルに割り当てる値。</param>
      <param name="coerce">値を列のデータ型に変換する必要があるかどうか。</param>
      <returns>値がセルに割り当てられた場合は true 。そうでない場合は、 false 。</returns>
      <remarks>
        <para>
          <paramref name="coerce" />が true に設定され、値を適切なデータ型に変換できない場合、グリッドは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントを発生させ、セルは元の値を維持します。
        </para>
        <para>
          <paramref name="coerce" />を true に設定して
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(System.Int32,System.Int32,System.Object,System.Boolean)" />を使用することは、グリッドのインデクサを設定することと同じです。たとえば、次のコード行は同じです。
        </para>
        <para></para>
        <code lang="VB.NET">flex.SetData(1, "ColName", "Hello", True) flex(1, "ColName") = "Hello" ' 同じです</code>
        <code lang="C#">flex.SetData(1, "ColName", "Hello", true); flex[1, "ColName"] = "Hello"; // 同じです</code>
        <para>データ値をセルに割り当てると、グリッドは列のデータ型を調べて自動的に値を適切な型に変換します。たとえば、列のDataTypeプロパティが整数に設定されている場合に、ユーザが文字列または倍精度値を割り当てると、グリッドはその値をグリッドに格納する前に整数に変換しようとします。変換に失敗した場合、SetDataメソッドはfalseを返します。</para>
        <para>
          オプションで引数
          <paramref name="coerce" />をfalseに設定すると、データは変換せずにグリッドに格納されます。これによって、列のデータ型に関係なく任意の値をセルに格納できます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetData(System.Int32,System.String,System.Object)">
      <summary>値をグリッドセルに割り当て、値をセルに指定されたデータ型に変換します。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <param name="value">セルに割り当てる値。</param>
      <returns>値がセルに割り当てられた場合は true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetDataEdit(System.Int32,System.Int32,System.Object,System.Boolean)">
      <summary>値をグリッドセルに割り当てます。その値をセルの指定されたデータ型に強制的に変換するよう指定することもできます。</summary>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="value">セルに割り当てる値。</param>
      <param name="coerce">値をセルの指定されたデータ型に強制的に変換するかどうか。</param>
      <returns>値がセルに割り当てられた場合は true、その他の場合は false です。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetData(System.Int32,System.Int32)">
      <summary>グリッドセルの値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルの値。</returns>
      <remarks>
        <para>
          <b>GetData</b>メソッドは、特定グリッドセルに格納されている生データ（書式設定などがされていない値）を返します。グリッドのインデクサを使用することと同じです。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">Dim foo As Object = flex.GetData(1, 1) Dim bar As Object = flex(1, 1) ' 同じです</code>
        <code lang="C#">object foo = flex.GetData(1, 1); object bar = flex[1, 1]; // 同じです</code>
        <para>
          グリッドに表示されるデータは、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Format" />および
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataMap" />プロパティの設定によって生データとは異なる場合があります。表示値（常に文字列）を取得するには、代わりに
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetDataDisplay(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetData(System.Int32,System.Int32,System.Boolean)">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellCheck(System.Int32,System.Int32)" />メソッドによって返される値を考慮して、グリッドセルの値を取得します。
      </summary>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="getCheck">
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellCheck(System.Int32,System.Int32)" />メソッドの値を考慮するかどうか。
      </param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetData(System.Int32,System.String)">
      <summary>グリッドセルの値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <returns>セルの値。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetUserData(System.Int32,System.Int32)">
      <summary>セルに関連付けられたユーザーデータを取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルに関連付けられたオブジェクト。</returns>
      <remarks>ユーザーデータは、グリッドの内部では使用されません。これは、セルに追加データを関連付ける場合のために保持されます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetUserData(System.Int32,System.String)">
      <summary>セルに関連付けられたユーザーデータを取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <returns>セルに関連付けられたオブジェクト。</returns>
      <remarks>ユーザーデータは、グリッドの内部では使用されません。これは、セルに追加データを関連付ける場合のために保持されます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetUserData(System.Int32,System.Int32,System.Object)">
      <summary>ユーザーデータをセルに割り当てます。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="data">セルに割り当てるユーザーデータ。</param>
      <remarks>ユーザーデータは、グリッドの内部では使用されません。これは、セルに追加データを関連付ける場合のために保持されます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetUserData(System.Int32,System.String,System.Object)">
      <summary>ユーザーデータをセルに割り当てます。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <param name="data">セルに割り当てるユーザーデータ。</param>
      <remarks>ユーザーデータは、グリッドの内部では使用されません。これは、セルに追加データを関連付ける場合のために保持されます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetDataDisplay(System.Int32,System.Int32)">
      <summary>グリッドセル内の値を文字列に書式設定して取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>指定されたグリッドセルに表示されるデータを含む文字列。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetDataDisplay(System.Int32,System.String)">
      <summary>グリッドセル内の値を文字列に書式設定して取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <returns>指定されたグリッドセルに表示されるデータを含む文字列。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetDataDisplay(System.Int32,System.Int32,System.Drawing.Image@,C1.Win.C1FlexGrid.CheckEnum@)">
      <summary>文字列として書式設定されたグリッドセルの値、およびセル内の画像またはチェックボックスを取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="img">セル内の画像を返します。</param>
      <param name="chk">セル内のチェックボックス値を返します。</param>
      <returns>特定のグリッドセルに表示するデータを含む文字列。</returns>
      <remarks>
        <para>このメソッドは、１回の呼び出しでセル内に表示されるすべてのデータを取得する方法を提供します。</para>
        <para>
          <paramref name="img" />パラメータに返される画像は、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellImage(System.Int32,System.Int32,System.Drawing.Image)" />メソッドを使用して セルに割り当てられた画像、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageMap" />から取得されたマップ値、セルデータとして格納された画像 （セルの
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataType" />が Image に設定された場合）のいずれかを設定できます。
        </para>
        <para>
          <paramref name="chk" />パラメータに返される
          <see cref="T:C1.Win.C1FlexGrid.CheckEnum" />値 は、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellCheck(System.Int32,System.Int32)" />メソッドによって返される値です。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetDataDisplay(System.Int32,System.String,System.Drawing.Image@,C1.Win.C1FlexGrid.CheckEnum@)">
      <summary>文字列として書式設定されたグリッドセルの値、およびセル内の画像またはチェックボックスを取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="colName">列名。</param>
      <param name="img">セル内の画像を返します。</param>
      <param name="chk">セル内のチェックボックス値を返します。</param>
      <returns>特定のグリッドセルに表示するデータを含む文字列。</returns>
      <remarks>
        <para>このメソッドは、１回の呼び出しでセル内に表示されるすべてのデータを取得する方法を提供します。</para>
        <para>
          <paramref name="img" />パラメータに返される画像は、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellImage(System.Int32,System.Int32,System.Drawing.Image)" />メソッドを使用して セルに割り当てられた画像、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageMap" />から取得されたマップ値、セルデータとして格納された画像 （セルの
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataType" />が Image に設定された場合）のいずれかを設定できます。
        </para>
        <para>
          <paramref name="chk" />パラメータに返される
          <see cref="T:C1.Win.C1FlexGrid.CheckEnum" />値 は、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellCheck(System.Int32,System.Int32)" />メソッドによって返される値です。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)">
      <summary>セルの範囲を選択します。</summary>
      <param name="rg">
        選択されるセルを指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
      <param name="show">新しい選択範囲を表示範囲までスクロールするかどうか。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange)">
      <summary>セル範囲を選択し、選択範囲を表示範囲までスクロールします。</summary>
      <param name="rg">
        選択されるセルを指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>セルの範囲を選択します。</summary>
      <param name="row">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />プロパティの新しい値。
      </param>
      <param name="col">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティの新しい値。
      </param>
      <param name="rowSel">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />プロパティの新しい値。
      </param>
      <param name="colSel">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティの新しい値。
      </param>
      <param name="show">新しい選択範囲を表示範囲までスクロールするかどうか。</param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用することは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティを設定することと同じです。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>セル範囲を選択し、選択範囲を表示範囲までスクロールします。</summary>
      <param name="row">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />プロパティの新しい値。
      </param>
      <param name="col">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティの新しい値。
      </param>
      <param name="rowSel">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />プロパティの新しい値。
      </param>
      <param name="colSel">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティの新しい値。
      </param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用することは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティを設定することと同じです。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(System.Int32,System.Int32,System.Boolean)">
      <summary>セルを選択します。</summary>
      <param name="row">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />プロパティの新しい値。
      </param>
      <param name="col">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティの新しい値。
      </param>
      <param name="show">新しい選択範囲を表示範囲までスクロールするかどうか。</param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用することは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティを設定することと同じです。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(System.Int32,System.Int32)">
      <summary>セルを選択し、選択範囲を表示範囲までスクロールします。</summary>
      <param name="row">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />プロパティの新しい値。
      </param>
      <param name="col">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティの新しい値。
      </param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用することは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティを設定することと同じです。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)">
      <summary>列に基づいてグリッドの内容をソートします。</summary>
      <param name="order">
        ソートの方向とオプションを指定する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値。
      </param>
      <param name="col">ソートする列。</param>
      <remarks>
        <para>ソートの動作は、グリッドがデータソースに連結されているかどうかによって異なります。</para>
        <para>
          連結モードでは、グリッドがソート要求を基底のデータソースオブジェクトに渡します。この場合は、グリッドデータが変更されても、ソート設定は維持されます。ソート列の値を編集すると、データソースがデータを再ソートし、グリッドには変更内容が自動的に表示されます。これは、たとえば、
          <see cref="T:System.Data.DataView" />オブジェクトの
          <see cref="P:System.Data.DataView.Sort" />プロパティを設定することと同じです。
        </para>
        <para>
          非連結モードでは、
          <b>Sort</b>メソッドは、現在グリッドに格納されているデータをソートします。ソート後にデータを変更しても、ソートは自動的に更新されません。
        </para>
        <para>
          グリッドが新しいデータソースに連結される場合、グリッドは、新しいデータソースオブジェクトに現在適用されているソート設定を継承します。このため、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />プロパティを設定する直前に
          <b>Sort</b>を呼び出した場合、グリッドには何も影響しません。
        </para>
        <para>非連結モードでは、安定したソートアルゴリズムが使用されます。つまり、ソートを実行しても、ソートキーが同じレコードの相対的な順序が維持されます。たとえば、ファイルのリストを名前でソートし、次に拡張子でソートした場合、同じ拡張子内では、名前でソートした順序が維持されます。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32,System.Int32)">
      <summary>列範囲に基づいてグリッドの内容をソートします。</summary>
      <param name="order">
        ソートの方向とオプションを指定する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値。
      </param>
      <param name="col1">範囲内の最初の列。</param>
      <param name="col2">範囲内の最後の列。</param>
      <remarks>
        <para>複数の列をソートする場合は、範囲内の左端の列から右に向かって同じソートオプションが各列に適用されます。</para>
        <para>
          各列に異なるソート順序を使用して複数の列をソートするには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを複数回呼び出すか、各列の
          <see cref="P:C1.Win.C1FlexGrid.Column.Sort" />プロパティを設定し、
          <paramref name="order" />パラメータに
          <see cref="F:C1.Win.C1FlexGrid.SortFlags.UseColSort" />フラグを指定して
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを呼び出します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,C1.Win.C1FlexGrid.CellRange)">
      <summary>グリッド内のセルの範囲をソートします。</summary>
      <param name="order">
        ソートの方向とオプションを指定する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値。
      </param>
      <param name="rg">
        ソートするセル範囲を指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </param>
      <remarks>
        <para>複数の列をソートする場合は、範囲内の左端の列から右に向かって同じソートオプションが各列に適用されます。</para>
        <para>
          各列に異なるソート順序を使用して複数の列をソートするには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを複数回呼び出すか、各列の
          <see cref="P:C1.Win.C1FlexGrid.Column.Sort" />プロパティを設定し、フラグパラメータに
          <see cref="F:C1.Win.C1FlexGrid.SortFlags.UseColSort" />フラグを指定して
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを呼び出します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(System.Int32,System.Int32,System.Collections.IComparer)">
      <summary>指定された比較子を使用して行のグループをソートします。</summary>
      <param name="rowStart">ソート範囲内の最初の行。</param>
      <param name="rowCount">ソート範囲内の行数。</param>
      <param name="comparer">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />オブジェクトを比較する
        <see cref="T:System.Collections.IComparer" />オブジェクト。
      </param>
      <remarks>
        <para>
          <see cref="T:System.Collections.IComparer" />インタフェースには、
          <see cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />という名前の１つのメソッドがあります。このメソッドは、２つのオブジェクト（この場合は
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />オブジェクト）を引数として受け取り、-1 、０、または１を返します。詳細については、
          <see cref="T:System.Collections.IComparer" />のドキュメントを参照してください。
        </para>
        <para>独自のソートは、グリッドが非連結モードの場合にのみ使用できます。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(System.Collections.IComparer)">
      <summary>指定された比較子を使用してグリッドをソートします。</summary>
      <param name="comparer">
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />オブジェクトを比較する
        <see cref="T:System.Collections.IComparer" />オブジェクト。
      </param>
      <remarks>
        <para>
          <see cref="T:System.Collections.IComparer" />インタフェースには、
          <see cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />という名前の１つのメソッドがあります。このメソッドは、２つのオブジェクト（この場合は
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />オブジェクト）を引数として受け取り、-1 、０、または１を返します。詳細については、
          <see cref="T:System.Collections.IComparer" />のドキュメントを参照してください。
        </para>
        <para>独自のソートは、グリッドが非連結モードの場合にのみ使用できます。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowSortAt(C1.Win.C1FlexGrid.SortFlags,System.Int32)">
      <summary>列ヘッダにソートグリフを表示します。</summary>
      <param name="order">
        表示するグリフを指定する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値。
      </param>
      <param name="col">列インデックス。</param>
      <remarks>このメソッドは、独自のソートを実行し、ソートグリフ（ソートされる列のヘッダに表示される小さな三角形）の外観と位置を制御する必要がある場合に便利です。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)">
      <summary>セルを表示範囲までスクロールします。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <remarks>
        このメソッドは、現在の選択範囲には影響しません。カーソルを特定のセルに移動し、オプションでそのセルを表示範囲に移動するには、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Invalidate">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Redraw" />プロパティが true に設定された場合に、コントロールの全体を無効化して、コントロールを再描画します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Invalidate(System.Int32,System.Int32)">
      <summary>セルを無効にして再描画します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <remarks>グリッドは必要に応じて自動的に無効化を実行するため、このメソッドをプログラマが使用することはほとんどありません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Invalidate(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>セル範囲を無効にして再描画します。</summary>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Invalidate(C1.Win.C1FlexGrid.CellRange)">
      <summary>セル範囲を無効にして再描画します。</summary>
      <param name="rg">
        無効にする
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
      <remarks>グリッドは必要に応じて自動的に無効化を実行するため、このメソッドをプログラマが使用することはほとんどありません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest(System.Int32,System.Int32)">
      <summary>コントロール面上の指定された点にあるコントロールの情報を返します。</summary>
      <param name="x">クライアント座標の水平位置。</param>
      <param name="y">クライアント座標の垂直位置。</param>
      <returns>
        点に関する情報を含む
        <see cref="T:C1.Win.C1FlexGrid.HitTestInfo" />オブジェクト。
      </returns>
      <remarks>
        このメソッドは、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントを処理するときに特に便利です。これを使用して、マウスが特定のセル内にあるか、グリッドボタン上にあるか、要素のサイズ変更中であるかなどを判定できます。
      </remarks>
      <example>
        <para>次のコードは、ユーザーがクリックしたときにヒットテスト情報を表示します。</para>
        <code lang="VB.NET">Private Sub flex_BeforeMouseDown(・・・ Dim hti As HitTestInfo = flex.HitTest(e.X, e.Y) Console.WriteLine("at {0},{1}: row {2} col {3} type {4}", _ hti.X, hti.Y, hti.Row, hti.Column, hti.Type) End Sub</code>
        <code lang="C#">private void flex_BeforeMouseDown(・・・ { HitTestInfo hti = flex.HitTest(e.X, e.Y); Console.WriteLine("at {0},{1}: row {2} col {3} type {4}", hti.X, hti.Y, hti.Row, hti.Column, hti.Type); }</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest(System.Drawing.Point)">
      <summary>コントロール面上の指定された点にあるコントロールの情報を返します。</summary>
      <param name="pt">
        クライアント座標の
        <see cref="T:System.Drawing.Point" />。
      </param>
      <returns>
        点に関する情報を含む
        <see cref="T:C1.Win.C1FlexGrid.HitTestInfo" />オブジェクト。
      </returns>
      <remarks>
        このメソッドは、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントを処理するときに特に便利です。これを使用して、マウスが特定のセル内にあるか、グリッドボタン上にあるか、要素のサイズ変更中であるかなどを判定できます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest">
      <summary>現在のマウス位置にあるコントロールの情報を返します。</summary>
      <returns>
        点に関する情報を含む
        <see cref="T:C1.Win.C1FlexGrid.HitTestInfo" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRect(System.Int32,System.Int32,System.Boolean)">
      <summary>
        コントロール内のセルの座標で指定された
        <see cref="T:System.Drawing.Rectangle" />オブジェクトを取得します。
      </summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="show">四角形を計算する前に、セルを表示範囲までスクロールするかどうか。</param>
      <returns>
        セルの座標で指定された
        <see cref="T:System.Drawing.Rectangle" />オブジェクト。座標はピクセル単位で、コントロールのクライアント領域に相対的です。
      </returns>
      <remarks>このプロパティは、セル上に配置されるカスタムエディタなどの要素を実装する必要がある場合に便利です。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRect(System.Int32,System.Int32)">
      <summary>
        コントロール内のセルの座標で指定された
        <see cref="T:System.Drawing.Rectangle" />オブジェクトを取得します。
      </summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <remarks>
        <para>このプロパティは、セル上に配置されるカスタムエディタなどの要素を実装する必要がある場合に便利です。</para>
        <para>このメソッドは、セルが可視かどうかに関知しません。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.FindRow(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>指定された文字列を含む行を見つけます。</summary>
      <param name="strFind">検索する文字列。</param>
      <param name="rowStart">検索を開始する行のインデックス。</param>
      <param name="col">検索するデータを含む列。</param>
      <param name="caseSensitive">検索で大文字小文字を区別するかどうか。</param>
      <param name="fullMatch">完全一致が必要かどうか。このパラメータを false に設定した場合は、「 John 」を検索すると、「 Johnson 」を含む行も返されます。</param>
      <param name="wrap">検索をグリッドの下端で停止するか、それともスクロール可能な最初の行に戻って検索を再開するか。</param>
      <returns>文字列を含む行のインデックス。文字列が見つからない場合は、-1。</returns>
      <remarks>
        ユーザーの入力に合わせてデータを検索するには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch" />プロパティを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.FindRow(System.Object,System.Int32,System.Int32,System.Boolean)">
      <summary>指定された値を含む行を見つけます。</summary>
      <param name="objFind">検索するオブジェクト。</param>
      <param name="rowStart">検索を開始する行のインデックス。</param>
      <param name="col">検索するオブジェクトを含む列。</param>
      <param name="wrap">検索をグリッドの下端で停止するか、それともスクロール可能な最初の行に戻って検索を再開するか。</param>
      <returns>データを含む行のインデックス。データが見つからない場合は、-1。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.FindRowRegex(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <b>RegularExpression</b>を使用して、特定の列内に指定された値を含む行を検索します。
      </summary>
      <param name="pattern">一致する正規表現のパターン。</param>
      <param name="rowStart">検索を開始する行のインデックス。</param>
      <param name="col">検索対象のデータを含む列。</param>
      <param name="wrap">検索をグリップの下部で停止するか、または折り返してスクロール可能な最初の行から検索を再開するかどうか。</param>
      <returns>パターンに一致する行のインデックス。一致が見つからなかった場合は -1。</returns>
      <remarks>
        <paramref name="pattern" />パラメータは、 通常の
        <see cref="T:System.Text.RegularExpressions.Regex" />構文で表される正規表現のパターンを指定します。 正規表現構文は、文字のクラス、範囲、繰り返し回数、代替一致、その他をサポートします。 詳細な説明と例については、.NET マニュアルを参照してください。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.BeginUpdate">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndUpdate" />メソッドが呼び出されるまでコントロールの更新を抑制することで、パフォーマンスを維持します。
      </summary>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.BeginUpdate" />メソッドおよび
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndUpdate" />メソッドはグリッドのパフォーマンスを最適化するために使用されます。多数の変更を行う前に
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.BeginUpdate" />を呼び出し、再描画の保留が完了したときに、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndUpdate" />を呼び出してください。これにより、ちらつきが減少し、パフォーマンスが向上します。グリッドに多数の行を追加する場合、１行追加されるたびに領域を計算してスクロールバーを更新する必要があるため、この最適化が特に効果的です。
      </remarks>
      <example>
        以下のコードは、グリッドに効果的に多数の行を追加する方法を示しています。確実に、再描画の適切な再開が行われるように
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndUpdate" />メソッドが"finally"ブロック内でどのように呼び出されているかに注目してください。
        <code lang="VB.NET">Private Sub UpdateGrid(ByVal flex As C1.Win.C1FlexGrid.C1FlexGrid) Try ' 画面のちらつきを防ぐために描画を保留します。 flex.BeginUpdate() flex.Rows.Count = 1 For i As Integer = 1 To 10000 flex.AddItem("Row " + i.ToString) Next Finally ' 常に描画を再開します。 flex.EndUpdate() End Try End Sub</code><code lang="C#">void UpdateGrid(C1FlexGrid flex) { try { flex.BeginUpdate(); // ちらつきを避けるため描画を保留します。 flex.Rows.Count = 1; for (int i = 1; i &lt; 10000; i++) flex.AddItem("Row " + i.ToString()); } finally { flex.EndUpdate(); // 常に再描画を再開します。 } }</code></example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndUpdate">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.BeginUpdate" />メソッドに対する呼び出し後、コントロールの更新を再開します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags,C1.Win.C1FlexGrid.CellRange)">
      <summary>範囲をクリアします。</summary>
      <param name="clearFlags">
        クリアする要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
      <param name="rg">クリアする範囲。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>範囲をクリアします。</summary>
      <param name="clearFlags">
        クリアする要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags,System.Int32,System.Int32)">
      <summary>セルをクリアします。</summary>
      <param name="clearFlags">
        クリアする要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags)">
      <summary>グリッドをクリアします。</summary>
      <param name="clearFlags">
        クリアする要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags,C1.Win.C1FlexGrid.CellRange)" />メソッドは、グリッド内の行と列の数に影響しません。また、グリッドがデータソースに連結されている場合は、データをクリアできません。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear">
      <summary>グリッドをクリアします。</summary>
      <remarks>
        <para>このメソッドは、グリッド内のすべてのセル、行、および列からすべてのデータ、スタイル、およびユーザーデータを削除します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags,C1.Win.C1FlexGrid.CellRange)" />メソッドは、グリッド内の行と列の数に影響しません。また、グリッドがデータソースに連結されている場合は、データをクリアできません。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRange(System.Int32,System.Int32)">
      <summary>
        セルの書式設定と操作に使用できる
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを取得します。
      </summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>
        セルの書式設定と操作に使用できる
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        範囲の書式設定と操作に使用できる
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを取得します。
      </summary>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <returns>
        範囲の書式設定と操作に使用できる
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </returns>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを使用して、範囲内のセルのプロパティにアクセスできます。たとえば、次のコードは範囲のスタイルを設定します。
        </para>
        <para></para>
        <code lang="VB.NET">Dim rg As CellRange = flex.GetCellRange(5, 5, 20, 8) rg.Style = flex.Styles("MyStyle")</code>
        <code lang="C#">CellRange rg = flex.GetCellRange(5, 5, 20, 8); rg.Style = flex.Styles["MyStyle"];</code>
        <para>
          <b>メモ :</b>
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />は、構造体ではなくクラスです。このため、値を変数に代入し、その変数を使用する必要があります。たとえば、次のコードはコンパイルされません。
        </para>
        <para></para>
        <code lang="VB.NET">' このコードはコンパイルできません。 flex.GetCellRange(5, 5, 20, 8).Style = flex.Styles("MyStyle")</code>
        <code lang="C#">// このコードはコンパイルできません。 flex.GetCellRange(5, 5, 20, 8).Style = flex.Styles["MyStyle"];</code>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CreateImage">
      <summary>グリッド全体の画像を作成します。</summary>
      <returns>
        グリッドのメタファイル画像を含む
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </returns>
      <remarks>このメソッドを使用して、グリッド画像をクリップボードにコピーします。この画像をドキュメントや他のアプリケーションに貼り付けることができます。</remarks>
      <example>
        <para>次のコードは、グリッド範囲の画像を作成し、それを PNG ファイルに保存します。このファイルを Web ページなどのドキュメントに挿入できます。</para>
        <code lang="VB.NET">Dim img As Image = flex.CreateImage(0, 0, 10, 5) img.Save("c:\temp\flex.png") '</code>
        <code lang="C#">Image img = flex.CreateImage(0, 0, 10, 5); img.Save(@"c:\temp\grid.png", System.Drawing.Imaging.ImageFormat.Png);</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CreateImage(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>グリッドの一部の画像を作成します。</summary>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <returns>
        グリッドのメタファイル画像を含む
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </returns>
      <remarks>返される画像には、指定された範囲に加えて、固定セルとフリーズセルが含まれます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CreateImage(C1.Win.C1FlexGrid.CellRange)">
      <summary>グリッドの一部の画像を作成します。</summary>
      <param name="rg">
        画像に入れるセルを指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
      <returns>
        グリッドのメタファイル画像を含む
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </returns>
      <remarks>返される画像には、指定された範囲に加えて、固定セルとフリーズセルが含まれます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CreateImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.EmfType)">
      <summary>グリッドの一部の画像を作成します。</summary>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <param name="emfType">
        作成するメタファイルの種類を指定する
        <see cref="T:System.Drawing.Imaging.EmfType" />値。
      </param>
      <returns>
        グリッドのメタファイル画像を含む
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </returns>
      <remarks>返される画像には、指定された範囲に加えて、固定セルとフリーズセルが含まれます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CreateImage(C1.Win.C1FlexGrid.CellRange,System.Drawing.Imaging.EmfType)">
      <summary>グリッドの一部の画像を作成します。</summary>
      <param name="rg">
        画像に入れるセルを指定する
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />。
      </param>
      <param name="emfType">
        作成するメタファイルの種類を指定する
        <see cref="T:System.Drawing.Imaging.EmfType" />値。
      </param>
      <returns>
        グリッドのメタファイル画像を含む
        <see cref="T:System.Drawing.Image" />オブジェクト。
      </returns>
      <remarks>返される画像には、指定された範囲に加えて、固定セルとフリーズセルが含まれます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.DrawCellImage(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>グリッドセルを表示します。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />セルが表示されるオブジェクト。
      </param>
      <param name="row">セルの行のインデックス。</param>
      <param name="col">セルの列のインデックス。</param>
      <param name="rcBounds">
        セルの位置を定義する
        <see cref="T:System.Drawing.Rectangle" />。
      </param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.StartEditing(System.Int32,System.Int32,System.Char)">
      <summary>グリッドを編集モードにし、セルの編集を開始します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="key">エディタに送信される最初の文字。</param>
      <returns>グリッドが正常に編集モードに入った場合は、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.StartEditing(System.Int32,System.Int32)">
      <summary>グリッドを編集モードにし、セルの編集を開始します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>グリッドが正常に編集モードに入った場合は、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.StartEditing">
      <summary>グリッドを編集モードにし、現在のセルの編集を開始します。</summary>
      <returns>グリッドが正常に編集モードに入った場合は、 true 。そうでない場合は、 false 。</returns>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />プロパティが true が設定されている場合、ユーザーが編集キー（ F2 ）、スペースバー、または印刷可能な文字を押すと、コントロールは自動的に編集モードになります。
          <b>StartEditing</b>メソッドを使用すると、コントロールを強制的にセル編集モードに移行できます。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />に false が設定されている場合でも、
          <b>StartEditing</b>メソッドはコントロールを編集モードにします。この方法で固定セルを編集することもできます。
        </para>
      </remarks>
      <example>
        <para>
          次のコードは、ユーザーが選択範囲を移動する間（.NET DataGrid コントロールなど）、
          <b>StartEditing</b>メソッドを使用してグリッドの編集モードを維持します。
        </para>
        <code lang="VB.NET">Private Sub flex_RowColChange(・・・ flex.StartEditing() End Sub</code>
        <code lang="C#">private void flex_RowColChange(・・・ { flex.StartEditing(); }</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.FinishEditing">
      <summary>現在のセルの編集を終了し、グリッドの編集モードを終了します。</summary>
      <returns>グリッドが正常に編集モードを離れた場合は、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.FinishEditing(System.Boolean)">
      <summary>現在のセルの編集を終了し、グリッドの編集モードを終了し、オプションで編集をキャンセルします。</summary>
      <param name="cancel">現在の編集をキャンセルし、セルを元の値に戻すかどうか。</param>
      <returns>グリッドが正常に編集モードを離れた場合は、 true 。そうでない場合は、 false 。</returns>
      <remarks>
        <para>
          cancel パラメータが false に設定された場合、グリッドは編集を適用しようとして、通常の
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit" />、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveEdit" />、および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterEdit" />イベントが発生します。検証が失敗した場合、グリッドは編集モードのままになり、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.FinishEditing" />は false を返します。
        </para>
        <para>
          cancel パラメータが true に設定された場合、元のセル値が復元され、グリッドは編集モードを離れます。この場合は、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveEdit" />イベントだけが発生します。
        </para>
        <para>
          グリッドが編集モードかどうかを判定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Editor" />プロパティが null かどうかを確認します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.StartEditing(System.Int32,System.Int32,System.Char,System.Boolean)">
      <summary>キーの押下に応答してセルの編集を開始します。</summary>
      <remarks>これは内部使用専用です。このメソッドを使用して、継承クラスは、編集プロセスをカスタマイズできます。</remarks>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="key">編集プロセスを開始したキー。</param>
      <param name="force">編集できないセル（固定セルなど）でも編集を開始するかどうか。</param>
      <returns>編集プロセスが正常に開始された場合は、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.StartEditing(System.Int32,System.Int32,System.Drawing.Point,System.Boolean)">
      <summary>マウス操作に応答してセルの編集を開始します。</summary>
      <remarks>これは内部使用専用です。このメソッドを使用して、継承クラスは、編集プロセスをカスタマイズできます。</remarks>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="ptMouse">クライアント座標でのマウス位置。</param>
      <param name="dblClick">操作がダブルクリックであったかどうか。</param>
      <returns>編集プロセスが正常に開始された場合は、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetDataBinding(System.Object,System.String)">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataMember" />プロパティを設定します。
      </summary>
      <param name="dataSource">新しいデータソースオブジェクト。</param>
      <param name="dataMember">データソースオブジェクト内の連結先のテーブル。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetDataBinding(System.Object,System.String,System.Boolean)">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataMember" />プロパティを設定し、オプションで現在の列のレイアウトを維持します。
      </summary>
      <param name="dataSource">新しいデータソースオブジェクト。</param>
      <param name="dataMember">データソースオブジェクト内の連結先のテーブル。</param>
      <param name="preserveLayout">現在の列のレイアウトを維持するか、それともデータソーススキーマに基づいて自動的にレイアウトを再作成するか。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.CellRange,C1.Win.C1FlexGrid.AggregateFlags)">
      <summary>範囲の集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="rg">
        集計する値を含む
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </param>
      <param name="flags">
        集計オプションを指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateFlags" />値。
      </param>
      <returns>
        集計値を表す
        <see cref="T:System.Double" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AggregateFlags)">
      <summary>範囲の集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <param name="flags">
        集計オプションを指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateFlags" />値。
      </param>
      <returns>
        集計値を表す
        <see cref="T:System.Double" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.AggregateFlags)">
      <summary>現在の選択範囲の集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="flags">
        集計オプションを指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateFlags" />値。
      </param>
      <returns>
        集計値を表す
        <see cref="T:System.Double" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum)">
      <summary>現在の選択範囲の集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <returns>
        集計値を表す
        <see cref="T:System.Double" />。
      </returns>
      <example>
        <para>
          次のコードは、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.CellRange,C1.Win.C1FlexGrid.AggregateFlags)" />メソッドを使用して、現在の選択範囲の集計値を計算します。選択範囲を変更すると、新しい集計値が計算されてコンソールに書き込まれます。
        </para>
        <code lang="VB.NET">Private Sub flex_SelChange(sender As Object, e As System.EventArgs) Dim fmt As String = "Count {0:0}, Sum {1:#,##0.00}, " &amp; _ "Avg {2:#,##0.00}, Stdev {3:#,##0.00}" Dim agg As String = String.Format(fmt, _ flex.Aggregate(AggregateEnum.Count), _ flex.Aggregate(AggregateEnum.Sum), _ flex.Aggregate(AggregateEnum.Average), _ flex.Aggregate(AggregateEnum.Std)) Console.WriteLine(agg) End Sub</code>
        <code lang="C#">private void flex_SelChange(object sender, System.EventArgs e) { string fmt = "Count {0:0}, Sum {1:#,##0.00}, " + "Avg {2:#,##0.00}, Stdev {3:#,##0.00}"; Console.WriteLine(fmt, flex.Aggregate(AggregateEnum.Count), flex.Aggregate(AggregateEnum.Sum), flex.Aggregate(AggregateEnum.Average), flex.Aggregate(AggregateEnum.Std)); }</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.CellRange)">
      <summary>範囲の集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="rg">
        集計する値を含む
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </param>
      <returns>
        集計値を表す
        <see cref="T:System.Double" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>範囲の集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <returns>
        集計値を表す
        <see cref="T:System.Double" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>セルの内容に基づいて行をグループ化し、集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータを使用して、複数レベルの小計を作成できます。また、アウトラインツリーの表示に影響します。</param>
      <param name="groupFrom">グループの境界を検出するために使用する範囲内の最初の列。</param>
      <param name="groupTo">グループの境界を検出するために使用する範囲内の最後の列。</param>
      <param name="totalOn">集計する値（通常は数値）を含む列。</param>
      <param name="caption">小計行に挿入するテキスト。</param>
      <remarks>
        <para>
          <b>Subtotal</b>メソッドは、集計値を含む行を挿入します。これらの新しい行は、ツリーノードとして動作するように設定され、これを折りたたんだり展開して動的な階層アウトラインを表示できます。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Tree" />プロパティを使用すると、アウトラインツリーの外観や動作を制御できます。
        </para>
        <para>
          <b>Subtotal</b>メソッドによって追加されるノード行は、
          <b>Row.Style</b>プロパティが自動的に Styles.Subtotal* スタイルの１つに設定されます。
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Styles" />コレクションを使用すると、グリッド内のすべての小計行の外観を変更できます。
        </para>
        <para>
          アウトラインツリーを手作業で作成するには、
          <b>Rows.InsertNode</b>メソッドを使用してノード行を挿入するか、ノード行の
          <b>Row.IsNode</b>プロパティを true に設定して、通常の行をノードに変換します。次に、
          <b>Row.Node.Level</b>プロパティを使用して、新しいノードのアウトラインレベルを設定します。
        </para>
      </remarks>
      <example>
        <para>次のコードでは、グリッドに４つの列（Product、Region、Employee、Sales）があるとします。このコードは、最初の２つの列に基づいてグループ化を行い、各製品の売上高と各製品内の各地域の売上高を計算します。ユーザーが１つの列を別の位置にドラッグすると、ツリーが自動的に再構成され、（Employee、Region などに基づく）新しいグループが表示されます。</para>
        <code lang="VB.NET">Private Sub UpdateTotals() ' 完了するまで再描画しません。 flex.BeginUpdate() ' 古い小計があればクリアします。 flex.Subtotal(AggregateEnum.Clear) ' グループ化される列に基づいてグリッドをソートします。 flex.Sort(SortFlags.Ascending, 0, 3) ' 列０のアウトラインツリーを表示します。 flex.Tree.Column = 0 ' 総計を取得します（列インデックスではなく -1 を使用）。 flex.Subtotal(AggregateEnum.Sum, -1, -1, 3, "Grand Total") ' 列０（最初は Product）を小計します。 flex.Subtotal(AggregateEnum.Sum, 0, 0, 3) ' 列１（最初は Region）を小計します。 flex.Subtotal(AggregateEnum.Sum, 1, 1, 3) ' アウトラインレベル１を表示します。 flex.Tree.Show(1) ' 描画を復元します。 flex.EndUpdate() End Sub Private Sub flex_AfterDragColumn(・・・ ' ユーザーが列を移動したので、合計を更新します。 UpdateTotals() End Sub</code>
        <code lang="C#">private void UpdateTotals() { // 完了するまで再描画しません。 flex.BeginUpdate(); // 古い小計があればクリアします。 flex.Subtotal(AggregateEnum.Clear); // グループ化される列に基づいてグリッドをソートします。 flex.Sort(SortFlags.Ascending, 0, 3); // 列０のアウトラインツリーを表示します。 flex.Tree.Column = 0; // 総計を取得します（列インデックスではなく -1 を使用）。 flex.Subtotal(AggregateEnum.Sum, -1, -1, 3, "Grand Total"); // 列０（最初は Product）を小計します。 flex.Subtotal(AggregateEnum.Sum, 0, 0, 3); // 列１（最初は Region）を小計します。 flex.Subtotal(AggregateEnum.Sum, 1, 1, 3); // アウトラインレベル１を表示します。 flex.Tree.Show(1); // 描画を復元します。 flex.EndUpdate(); } private void flex_AfterDragColumn(・・・ { // ユーザーが列を移動したので、合計を更新します。 UpdateTotals(); }</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>セルの内容に基づいて行をグループ化し、集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータを使用して、複数レベルの小計を作成できます。また、アウトラインツリーの表示に影響します。</param>
      <param name="groupOn">グループの境界を検出するために使用する列。</param>
      <param name="totalOn">集計する値（通常は数値）を含む列。</param>
      <param name="caption">小計行に挿入するテキスト。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32)">
      <summary>セルの内容に基づいて行をグループ化し、集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータを使用して、複数レベルの小計を作成できます。また、アウトラインツリーの表示に影響します。</param>
      <param name="groupOn">グループの境界を検出するために使用する列。</param>
      <param name="totalOn">集計する値（通常は数値）を含む列。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum)">
      <summary>セルの内容に基づいて行をグループ化し、集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <remarks>
        <para>
          このバージョンの
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドは列パラメータを受け取らず、小計をクリアする目的でのみ使用されます。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Subtotal(AggregateEnum.Clear) ' すべての小計をクリアします</code>
        <code lang="C#">flex.Subtotal(AggregateEnum.Clear); // すべての小計をクリアします</code>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>セルの内容に基づいて行をグループ化して集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータを使用すると、複数レベルの小計を作成でき、アウトラインツリーの表示に影響します。</param>
      <param name="groupFrom">グループの区切りの検出に使用する範囲の最初の列の名前。</param>
      <param name="groupTo">グループの区切りの検出に使用する範囲の最後の列の名前。</param>
      <param name="totalOn">集計する値（通常は数値）を含む列の名前。</param>
      <param name="caption">小計行に挿入するテキスト。</param>
      <remarks>
        これは、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドのバリアントで、 インデックスの代わりに列名を取ります。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.String,System.String,System.String)">
      <summary>セルの内容に基づいて行をグループ化して集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータを使用すると、複数レベルの小計を作成でき、アウトラインツリーの表示に影響します。</param>
      <param name="groupOn">グループの区切りの検出に使用する Name 列。</param>
      <param name="totalOn">集計する値（通常は数値）を含む列の名前。</param>
      <param name="caption">小計行に挿入するテキスト。</param>
      <remarks>
        これは、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.String)" />メソッドのバリアントで、 インデックスの代わりに列名を取ります。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.String,System.String)">
      <summary>セルの内容に基づいて行をグループ化して集計値を計算します。</summary>
      <param name="aggType">
        計算する集計の種類を指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータを使用すると、複数レベルの小計を作成でき、アウトラインツリーの表示に影響します。</param>
      <param name="groupOn">グループの区切りの検出に使用する Name 列。</param>
      <param name="totalOn">集計する値（通常は数値）を含む列の名前。</param>
      <remarks>
        これは、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32)" />メソッドのバリアントで、 インデックスの代わりに列名を取ります。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AddItem(System.String)">
      <summary>グリッドに行を追加し、その新しい行にデータを挿入します。</summary>
      <param name="item">
        新しい行のデータを含む文字列。デフォルトでは、項目はタブ文字で区切られます。
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipSeparators" />プロパティを使用して区切り文字を変更できます。
      </param>
      <returns>新しい行への参照。</returns>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Rows" />コレクションを使用して行を追加および削除することもできます。
          <b>AddItem</b>メソッドは、行を作成し、それにデータを挿入してグリッドに追加するための簡潔な構文を提供します。
        </para>
        <para>
          <b>AddItem</b>を使用してグリッドに多数の行を追加する場合は、事前に
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.BeginUpdate" />メソッドを呼び出してください。行の追加が完了したら、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.EndUpdate" />を呼び出します。これにより、パフォーマンスが大幅に向上します。
        </para>
      </remarks>
      <example>
        <para>次のコードは、グリッドに 300 行を追加します。</para>
        <code lang="VB.NET">' パフォーマンスを向上させるために描画を停止します。 flex.BeginUpdate() ' タブを区切りに使用して、100 行を追加します。 flex.ClipSeparators = vbTab + vbLf ' デフォルト Dim i As Integer For i = 0 To 100 flex.AddItem(vbTab &amp; "col1" &amp; vbTab &amp; "col2" &amp; vbTab &amp; "col3") Next ' パイプを区切りに使用して、先頭に 100 行を追加します。 flex.ClipSeparators = "|;" For i = 0 To 100 flex.AddItem("|col1|col2|col3", 0) Next ' オブジェクト配列を使用して、末尾に 100 行を追加します。 Dim items() As String = {"col1", "col2", "col3"} For i = 0 To 100 flex.AddItem(items, flex.Rows.Count, flex.Cols.Fixed) Next ' 描画を復元します。 flex.EndUpdate()</code>
        <code lang="C#">// パフォーマンスを向上させるために描画を停止します。 flex.BeginUpdate(); // タブを区切りに使用して、 100 行を追加します。 flex.ClipSeparators = "\t\n"; for (int i = 0; i &lt; 100; i++) flex.AddItem("\tcol1\tcol2\tcol3"); // パイプを区切りに使用して、先頭に 100 行を追加します。 flex.ClipSeparators = "|;"; for (int i = 0; i &lt; 100; i++) flex.AddItem("|col1|col2|col3", 0); // オブジェクト配列を使用して、末尾に 100 行を追加します。 object[] items = { "col1", "col2", "col3" }; for (int i = 0; i &lt; 100; i++) flex.AddItem(items, flex.Rows.Count, flex.Cols.Fixed); // 描画を復元します。 flex.EndUpdate();</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AddItem(System.Object[])">
      <summary>グリッドに行を追加し、その新しい行にデータを挿入します。</summary>
      <param name="items">新しい行に割り当てられるオブジェクトの配列。</param>
      <returns>新しい行への参照。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AddItem(System.String,System.Int32)">
      <summary>グリッドの指定された位置に行を追加し、その新しい行にデータを挿入します。</summary>
      <param name="item">
        新しい行のデータを含む文字列。デフォルトでは、項目はタブ文字で区切られます。
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipSeparators" />プロパティを使用して区切り文字を変更できます。
      </param>
      <param name="index">新しい行を挿入する位置。</param>
      <returns>新しい行への参照。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AddItem(System.Object[],System.Int32,System.Int32)">
      <summary>グリッドの指定された位置に行を追加し、その新しい行にデータを挿入します。</summary>
      <param name="items">新しい行に割り当てられるオブジェクトの配列。</param>
      <param name="rowIndex">新しい行を挿入する位置。</param>
      <param name="colIndex">
        <paramref name="items" />配列内の項目を挿入する最初の列。このパラメータは、通常、スクロール可能な最初の列のインデックスに設定されます。
      </param>
      <returns>新しい行への参照。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.RemoveItem">
      <summary>グリッドから最後の行を削除します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Rows" />コレクションを使用して行を追加および削除することもできます。
        </para>
        <para>
          グリッドは
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AddItem(System.String)" />メソッドを持つため、それに対応して
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.RemoveItem" />も用意されています。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.RemoveItem(System.Int32)">
      <summary>グリッドの指定された位置にある行を削除します。</summary>
      <param name="index">削除する行のインデックス。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)">
      <summary>グリッドを印刷します。オプションで、ページ設定ダイアログボックスまたは印刷プレビューダイアログボックスを表示します。</summary>
      <param name="docName">ドキュメント名。これは、進捗ダイアログボックスや印刷ジョブウィンドウに表示される</param>
      <param name="flags">印刷オプションを選択するためのフラグ。</param>
      <returns>グリッドが印刷された場合は、 true 。ユーザーが操作をキャンセルした場合は、 false 。</returns>
      <remarks>
        用紙の方向、マージン、ヘッダ／フッタのフォントなどのオプションを設定するには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters" />プロパティを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags,System.String,System.String)">
      <summary>グリッドを印刷します。オプションで、ページ設定ダイアログボックスまたは印刷プレビューダイアログボックスを表示します。</summary>
      <param name="docName">ドキュメント名。これは、進捗ダイアログボックスや印刷ジョブウィンドウに表示される</param>
      <param name="flags">印刷オプションを選択するためのフラグ。</param>
      <param name="header">各ページの上端に表示される文字列。</param>
      <param name="footer">各ページの下端に表示される文字列。</param>
      <returns>グリッドが印刷された場合は、 true 。ユーザーが操作をキャンセルした場合は、 false 。</returns>
      <remarks>
        <para>ヘッダとフッタの文字列は、タブで区切られた最大３つのセクションから成り、それらのセクションはそれぞれページの左、中央、右に揃えられます。文字列には、現在のページ番号とページ総数に置換されるプレースホルダ（{0} と {1}）を入れることもできます。</para>
        <para>
          用紙の方向、マージン、ヘッダ／フッタのフォントなどのオプションを設定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String)">
      <summary>グリッドを印刷します。オプションで、ページ設定ダイアログボックスまたは印刷プレビューダイアログボックスを表示します。</summary>
      <param name="docName">ドキュメント名。これは、進捗ダイアログボックスや印刷ジョブウィンドウに表示される</param>
      <returns>グリッドが印刷された場合は、 true 。ユーザーが操作をキャンセルした場合は、 false 。</returns>
      <remarks>
        用紙の方向、マージン、ヘッダ／フッタのフォントなどのオプションを設定するには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters" />プロパティを使用します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)">
      <summary>グリッドの内容をファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="format">使用するファイル形式。</param>
      <param name="flags">ファイルの保存時に使用するオプション。</param>
      <param name="encoding">
        ファイルの保存時に使用する
        <see cref="T:System.Text.Encoding" />。
      </param>
      <remarks>
        <para>CSV などのテキストファイルに保存されるグリッドは、データだけを含みます。書式情報は保存されません。</para>
        <para>Excel ファイルに保存されるグリッドは、データと書式情報を含みます。画像は保存されません。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.String)" />および
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.String)" />メソッドを使用して、グリッドを XML 形式に永続化することもできます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags)">
      <summary>グリッドの内容をファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="format">使用するファイル形式。</param>
      <param name="flags">ファイルの保存時に使用するオプション。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum)">
      <summary>グリッドの内容をファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="format">使用するファイル形式。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)">
      <summary>グリッドをファイルからロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
      <param name="format">使用するファイル形式。</param>
      <param name="flags">ファイルのロード時に使用するオプション。</param>
      <param name="encoding">
        ファイルの保存時に使用する
        <see cref="T:System.Text.Encoding" />。
      </param>
      <remarks>
        <para>
          このメソッドは、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)" />メソッドを使用してあらかじめ保存されたファイルからグリッドを読み込みます。サポートされるフォーマットには、カンマ区切りテキストファイル（CSV フォーマット）、タブ区切りテキストファイル、および Microsoft Excel ファイル（.xls）があります。
        </para>
        <para>テキストファイルを読み込む場合、ファイルの内容を収容するために必要なときは行と列が追加されます。テキストファイルにはデータだけが含まれ、書式設定情報は含まれません。</para>
        <para>
          Excel ファイルを読み込む場合、グリッドは指定したワークブックファイルから最初のワークシートを取得します。
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドを使用して、読み込むワークシートを指定できます。
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcelSheetNames(System.String)" />メソッドを使用して、XLS ファイルに格納されたワークシートの一覧を取得できます。グリッドは、XLS ファイルからのデータと書式設定情報を保存し、読み込むことができます。
        </para>
        <para>
          グリッドは、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.String)" />メソッドと
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.String)" />メソッドを使用して Xml フォーマットを維持することもできます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags)">
      <summary>グリッドをファイルからロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
      <param name="format">使用するファイル形式。</param>
      <param name="flags">ファイルのロード時に使用するオプション。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum)">
      <summary>グリッドをファイルからロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
      <param name="format">使用するファイル形式。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags,System.Drawing.Printing.PrinterSettings)">
      <summary>印刷方法に関する情報を指定してグリッドの内容を Microsoft Excel ファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="sheetName">Excel ブックに追加するシートの名前。</param>
      <param name="flags">ファイル保存時に使用するオプション。</param>
      <param name="ps">
        ファイル保存時に使用する
        <see cref="T:System.Drawing.Printing.PrinterSettings" /></param>
      <remarks>
        <para>指定されたファイルが存在する場合、コントロールは１つのワークシートを追加または置換します。既存のシートは、可能であれば維持されます。</para>
        <para>
          追加または置換するワークシートは、
          <paramref name="sheetName" />パラメータで指定されます。
        </para>
        <para>指定されたファイルが別のアプリケーション（通常は Excel ）で使用されている場合、メソッドは失敗します。</para>
        <para>このメソッドは、 Microsoft Excel がマシンにインストールされていなくても機能します。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)">
      <summary>グリッドの内容を Microsoft Excel （.xls ）ファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="sheetName">Excel ブックに追加するシートの名前。</param>
      <param name="flags">ファイル保存時に使用するオプション。</param>
      <remarks>
        <para>指定されたファイルが存在する場合、コントロールは１つのワークシートを追加または置換します。既存のシートは、可能であれば維持されます。</para>
        <para>
          追加または置換するワークシートは、
          <paramref name="sheetName" />パラメータで指定されます。
        </para>
        <para>指定されたファイルが別のアプリケーション（通常は Excel ）で使用されている場合、メソッドは失敗します。</para>
        <para>このメソッドは、 Microsoft Excel がマシンにインストールされていなくても機能します。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String)">
      <summary>グリッドの内容を Microsoft Excel （.xls ）ファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="sheetName">Excel ブックに追加するシートの名前。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,C1.Win.C1FlexGrid.FileFlags)">
      <summary>グリッドの内容を Microsoft Excel（.xls ）ファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <param name="flags">ファイル保存時に使用するオプション。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String)">
      <summary>グリッドの内容を Microsoft Excel （.xls ）ファイルに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)">
      <summary>Microsoft Excel（.xls ）ファイルから指定されたワークシートをグリッドにロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
      <param name="sheetName">ロードするワークシートの名前。</param>
      <param name="flags">ファイルのロード時に使用するオプション。</param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcelSheetNames(System.String)" />メソッドを使用して、xls ファイルからワークシートのリストを取得します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String)">
      <summary>Microsoft Excel（.xls ）ファイルから指定されたワークシートをグリッドにロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
      <param name="sheetName">ロードするワークシートの名前。</param>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcelSheetNames(System.String)" />メソッドを使用して、xls ファイルからワークシートのリストを取得します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,C1.Win.C1FlexGrid.FileFlags)">
      <summary>Microsoft Excel（.xls ）ファイルの最初のワークシートをグリッドにロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
      <param name="flags">ファイルのロード時に使用するオプション。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String)">
      <summary>Microsoft Excel（.xls ）ファイルの最初のワークシートをグリッドにロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcelSheetNames(System.String)">
      <summary>Microsoft Excel（.xls ）ファイルからワークシートの名前のリストを取得します。</summary>
      <param name="fileName">Excel ファイルの名前（パスを含む）。</param>
      <returns>ファイルで定義されているワークシートの名前を含む配列。</returns>
      <remarks>
        このメソッドは、シート名のリストを取得するために使用します。取得したリストと
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />および
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドを使用して、特定のシートをロードしたり保存することができます。
      </remarks>
      <example>
        <para>次のコードは、 Excel ブック内のすべてのシートを TabControl 内のグリッドのコレクションにロードします。</para>
        <code lang="VB.NET">' TabControl1 をクリアします。 TabControl1.TabPages.Clear() ' シート名をロードします。 Dim fileName As String = "c:\Book1.xls" Dim sheets() As String = flex.LoadExcelSheetNames(fileName) ' 各シートをロードします。 For Each sheetName As String In sheets ' このシートの新しいグリッドを作成します。 Dim fg As C1FlexGrid = New C1FlexGrid fg.Dock = DockStyle.Fill ' 新しいグリッドにシートをロードします。 fg.LoadExcel(fileName, sheetName) ' TabControl1 にグリッドを追加します。 Dim page As TabPage = New TabPage page.Controls.Add(fg) page.Text = sheetName TabControl1.TabPages.Add(page) Next</code>
        <code lang="C#">// tabControl をクリアします tabControl1.TabPages.Clear(); // シート名をロードします string fileName = @"c:\Book1.xls"; string[] sheets = flex.LoadExcelSheetNames(fileName); // 各シートをロードします foreach (string sheetName in sheets) { // このシートの新しいグリッドを作成します C1FlexGrid fg = new C1FlexGrid(); fg.Dock = DockStyle.Fill; // 新しいグリッドにシートをロードします fg.LoadExcel(fileName, sheetName); // tabControl にグリッドを追加します TabPage page = new TabPage(); page.Controls.Add(fg); page.Text = sheetName; tabControl1.TabPages.Add(page); }</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsCellCursor(System.Int32,System.Int32)">
      <summary>セルがカレントセルかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルがカレントセルの場合は、true 。そうでない場合は、false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsCellFixed(System.Int32,System.Int32)">
      <summary>セルが固定行または列に属するかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルが固定セルの場合は、true 。そうでない場合は、false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsCellSelected(System.Int32,System.Int32)">
      <summary>セルが選択されているかどうかを決定する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルが選択されている場合は、true 。そうでない場合は、false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsCellValid(System.Int32,System.Int32)">
      <summary>セル座標が有効であるかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セル座標が有効な場合は、true 。そうでない場合は、false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsCellHighlighted(System.Int32,System.Int32)">
      <summary>セルが選択範囲内にあり、強調表示されているかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルが強調表示されている場合は、true。そうでない場合は、false。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsCellCheckBox(System.Int32,System.Int32)">
      <summary>セルの内容がチェックボックスとして表示されているかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルの内容をチェックボックスとして表示されている場合、true 。そうでない場合は、false 。</returns>
      <remarks>
        <para>以下の条件に該当しないかぎり、ブール値はチェックボックスとして表示されます。</para>
        <para>
          1) セルが関連付けられた
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataMap" />を持っている。この場合、
          <b>DataMap</b>で指定された値がチェックボックスの代わりに表示されます。
        </para>
        <para>
          2) セルがマルチパートの
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Format" />文字列（"yes;no" など）を持っている。 この場合、
          <b>Format</b>がチェックボックスの代わりに使用されます。
        </para>
        <para>3) セルが小計行に属し、ブール値を含んでいない。</para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.String)">
      <summary>グリッドの内容を XML ドキュメントに保存します。</summary>
      <param name="fileName">保存するファイルの名前（パスを含む）。</param>
      <remarks>
        <para>グリッドは、そのすべての内容（セルに格納されたデータ、行と列のプロパティ、スタイル、画像など）を XML ドキュメントにシリアライズします。</para>
        <para>
          独自の型のオブジェクトがグリッドに格納されている場合も、文字列との変換を提供する
          <see cref="T:System.ComponentModel.TypeConverter" />を持つならシリアライズされます。
        </para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.String)" />メソッドには、複数のグリッドを他の情報と共に１つの XML ドキュメントに保存できるいくつかのオーバーロードメソッドがあります。
        </para>
      </remarks>
      <example>
        <para>次のコードは、１つのグリッドを XML ファイルに保存します。</para>
        <code lang="VB.NET">' １つのグリッドを XML ファイルに保存します。 flex.WriteXml(fileName)</code>
        <code lang="C#">// １つのグリッドを XML ファイルに保存します。 flex.WriteXml(fileName);</code>
        <para>次のコードは、２つのグリッドを XML ファイルに保存した後に、それを逆順に読み取ります。</para>
        <para></para>
        <code lang="VB.NET">' XmlTextWriter を準備します。 Dim w As New XmlTextWriter(fileName, New UTF8Encoding(False)) w.Formatting = Formatting.Indented w.WriteStartDocument() w.WriteStartElement("Grids") ' 最初のグリッドを保存します。 w.WriteStartElement(c1FlexGrid1.Name) c1FlexGrid1.WriteXml(w) w.WriteEndElement() ' 次のグリッドを保存します。 w.WriteStartElement(c1FlexGrid2.Name) c1FlexGrid2.WriteXml(w) w.WriteEndElement() ' ドキュメントを閉じます。 w.WriteEndElement() w.Close() ' ファイルからドキュメントをロードします。 Dim doc As New XmlDocument() doc.Load(fileName) Dim n As XmlNode = doc.SelectSingleNode("Grids") ' グリッドを逆順にロードします。 c1FlexGrid2.ReadXml(n.ChildNodes(0)) c1FlexGrid1.ReadXml(n.ChildNodes(1))</code>
        <code lang="C#">// XmlTextWriter を準備します。 XmlTextWriter w = new XmlTextWriter(fileName, new UTF8Encoding(false)); w.Formatting = Formatting.Indented; w.WriteStartDocument(); w.WriteStartElement("Grids"); // 最初のグリッドを保存します。 w.WriteStartElement(c1FlexGrid1.Name); c1FlexGrid1.WriteXml(w); w.WriteEndElement(); // 次のグリッドを保存します。 w.WriteStartElement(c1FlexGrid2.Name); c1FlexGrid2.WriteXml(w); w.WriteEndElement(); // ドキュメントを閉じます。 w.WriteEndElement(); w.Close(); // ファイルからドキュメントをロードします。 XmlDocument doc = new XmlDocument(); doc.Load(fileName); XmlNode n = doc.SelectSingleNode("Grids"); // グリッドを逆順にロードします c1FlexGrid2.ReadXml(n.ChildNodes[0]); c1FlexGrid1.ReadXml(n.ChildNodes[1]);</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.IO.TextWriter)">
      <summary>グリッドの内容を XML ドキュメントに保存します。</summary>
      <param name="tw">
        ドキュメントを保存するための
        <see cref="T:System.IO.TextWriter" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.IO.Stream)">
      <summary>グリッドの内容を XML ドキュメントに保存します。</summary>
      <param name="stream">
        ドキュメントを保存するための
        <see cref="T:System.IO.Stream" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.WriteXml(System.Xml.XmlTextWriter)">
      <summary>グリッドの内容を XML ドキュメントに保存します。</summary>
      <param name="w">
        ドキュメントを保存するための
        <see cref="T:System.Xml.XmlTextWriter" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.String)">
      <summary>XML ドキュメントからグリッドをロードします。</summary>
      <param name="fileName">ロードするファイルの名前（パスを含む）。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.IO.TextReader)">
      <summary>XML ドキュメントからグリッドをロードします。</summary>
      <param name="tr">
        グリッドのロードに使用する
        <see cref="T:System.IO.TextReader" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.IO.Stream)">
      <summary>XML ドキュメントからグリッドをロードします。</summary>
      <param name="stream">
        グリッドのロードに使用する
        <see cref="T:System.IO.Stream" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.Xml.XmlReader)">
      <summary>XML ドキュメントからグリッドをロードします。</summary>
      <param name="xr">
        グリッドのロードに使用する
        <see cref="T:System.Xml.XmlReader" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.Xml.XmlDocument)">
      <summary>XML ドキュメントからグリッドをロードします。</summary>
      <param name="doc">
        グリッドのロードに使用する
        <see cref="T:System.Xml.XmlDocument" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ReadXml(System.Xml.XmlNode)">
      <summary>XML ドキュメントからグリッドをロードします。</summary>
      <param name="node">
        グリッドのロードに使用する
        <see cref="T:System.Xml.XmlNode" />オブジェクト。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGridChanged(System.Object,C1.Win.C1FlexGrid.GridChangedEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridChanged" />イベントを発生させます。
      </summary>
      <param name="sender">イベントを起こすオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GridChangedEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.BuildScrollableRectangle(System.Int32,System.Int32)">
      <summary>スクロールオフセットの特定のペアについて、コントロールのスクロール可能な部分を定義する矩形を作成します。</summary>
      <param name="dx">水平スクロールオフセット。</param>
      <param name="dy">垂直スクロールオフセット。</param>
      <returns>
        コントロールのスクロール可能な部分を定義する
        <see cref="T:System.Drawing.Rectangle" />。
      </returns>
      <remarks>このメソッドは内部用です。これにより、派生クラスでコントロールのスクロール動作をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnVisibleChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.VisibleChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnRightToLeftChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.RightToLeftChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnSizeChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.SizeChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Paint" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>コントロールの背景をペイントします。</summary>
      <param name="e">
        ペイントするコントロールに関する情報を含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnThemeChanged">
      <summary>コントロールが WM_THEMECHANGED メッセージを受け取ったときに呼び出されます。</summary>
      <remarks>WM_THEMECHANGED メッセージは、テーマ変更イベントに続いてすべてのウィンドウにブロードキャストされます。 テーマ変更イベントの例としては、テーマのアクティブ化、テーマの非アクティブ化、 あるテーマから別のテーマへの移行が挙げられます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnBackColorChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.BackColorChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnForeColorChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.ForeColorChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnFontChanged(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.FontChanged" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnChangeScrollBarPosition(System.Int32,System.Boolean,System.Int32,System.Int32)">
      <summary>ユーザーコマンドに反応してスクロールバーの新しい位置を計算します。</summary>
      <param name="cmd">スクロールコマンド（SB_LINEUP など）。</param>
      <param name="verticalBar">垂直スクロールバーの場合は true、水平スクロールバーの場合は false。</param>
      <param name="curPos">現在のスクロールバーの位置。</param>
      <param name="trackPos">スクロールバーのつまみの位置。</param>
      <returns>スクロールバーの新しい位置。</returns>
      <remarks>派生クラスで、このメソッドをオーバーライドしてスクロール動作をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Validating" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.ComponentModel.CancelEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnValidated(System.EventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowValidated" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnRowValidating(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowValidating" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnRowValidated(C1.Win.C1FlexGrid.RowColEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowValidated" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.MoveSelection(C1.Win.C1FlexGrid.MoveCursorEnum,System.Boolean)">
      <summary>現在の選択を移動または拡張します。</summary>
      <param name="move">
        カーソルの移動のタイプを指定する
        <see cref="T:C1.Win.C1FlexGrid.MoveCursorEnum" />の値。
      </param>
      <param name="extend">現在の選択を拡張するかどうか。</param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.MoveSelection(C1.Win.C1FlexGrid.MoveCursorEnum,System.Boolean,System.Int32,System.Int32)">
      <summary>選択を指定のセルから移動または拡張します。</summary>
      <param name="move">
        カーソルの移動のタイプを指定する
        <see cref="T:C1.Win.C1FlexGrid.MoveCursorEnum" />の値。
      </param>
      <param name="extend">現在の選択を拡張するかどうか。</param>
      <param name="row">当初の選択の行のインデックス。</param>
      <param name="col">当初の選択の列のインデックス。</param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.CheckNodeChildren(System.Int32,System.Int32,System.Int32)">
      <summary>行に含まれる子ノードのタイプを示す値を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでアウトラインツリーをカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="level">アウトラインレベル。</param>
      <returns>行に子が含まれない場合は０、通常のデータ行だけが含まれる場合は１、 子ノードが含まれる場合は２、データノードと子ノードが含まれる場合は３。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRectDisplay(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>セル、行、または列の座標を表す矩形を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでセルの形状の計算方法を カスタマイズできます。</remarks>
      <param name="row">行のインデックス（または、列の範囲を取得する場合は -１）。</param>
      <param name="col">列のインデックス（または、行の範囲を取得する場合は -１）。</param>
      <param name="clipHorz">矩形をグリッドのクライアント領域に水平にクリップするかどうか。</param>
      <param name="clipVert">矩形をグリッドのクライアント領域に垂直にクリップするかどうか。</param>
      <returns>
        クライアント座標で行、列、またはセルの表示領域を含み、 スクロール位置を示す
        <see cref="T:System.Drawing.Rectangle" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRectDisplay(System.Int32,System.Int32)">
      <summary>セル、行、または列の座標を表す矩形を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでセルの形状の計算方法を カスタマイズできます。</remarks>
      <param name="row">行のインデックス（または、列の範囲を取得する場合は -１）。</param>
      <param name="col">列のインデックス（または、行の範囲を取得する場合は -１）。</param>
      <returns>
        クライアント座標で行、列、またはセルの表示領域を含み、 スクロール位置を示す
        <see cref="T:System.Drawing.Rectangle" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRectEditor(System.Int32,System.Int32)">
      <summary>セルエディタの座標を表す矩形を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでセルの形状の計算方法を カスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <returns>セルエディタの位置決めに使用される矩形。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.DrawRow(System.Windows.Forms.PaintEventArgs,System.Int32)">
      <summary>グリッドの行を表示します。</summary>
      <param name="e">
        行が表示される
        <see cref="T:System.Drawing.Graphics" />オブジェクトを含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
      <param name="row">表示する行のインデックス。</param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.DrawCell(System.Windows.Forms.PaintEventArgs,System.Int32,System.Int32)">
      <summary>グリッドセルを表示します。</summary>
      <param name="e">
        セルが表示される
        <see cref="T:System.Drawing.Graphics" />オブジェクトを含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
      <param name="row">セルの行のインデックス。</param>
      <param name="col">セルの列のインデックス。</param>
      <returns>
        ペイントされた最後の列のインデックス（列がマージされている場合は、
        <paramref name="col" />より大きい場合があります）。
      </returns>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetHeaderThemeState(System.Int32,System.Int32)">
      <summary>マウスポインタをセル上で動かしているときの Windows Xp テーマの状態を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでホットトラッキング動作をカスタマイズできます。</remarks>
      <param name="row">マウスポインタの下にある行。</param>
      <param name="col">マウスポインタの下にある列。</param>
      <returns>項目の状態を表す整数（２：ホットトラッキング、１：通常）。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellGlyphs(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Image@,System.Drawing.Image@,System.Drawing.Image@)">
      <summary>セル内に表示するセルのグリフを取得します。</summary>
      <remarks>このメソッドは内部用です。 これにより、継承クラスでソートグリフの表示をカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="rc">セルの矩形</param>
      <param name="glyphSort">セルコンテンツの上に表示するグリフ。</param>
      <param name="glyphLeft">セルの左側に表示するグリフ。</param>
      <param name="glyphRight">セルの右側に表示するグリフ。</param>
      <returns>グリフがセルに割り当てられた場合は true、その他の場合は false。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellCheck(System.Int32,System.Int32)">
      <summary>グリッドセル内のチェックボックスの状態を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>
        <see cref="T:C1.Win.C1FlexGrid.CheckEnum" />列挙型の値の１つ。
      </returns>
      <remarks>
        <para>
          デフォルトでは、グリッドは、ブール値列の値をチェックボックスとして表示します（列のデータ型は
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataType" />プロパティで決定される）。ブール値をチェックボックスとして表示しない場合は、列の
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Format" />プロパティを、 true および false 値として表示する値をセミコロンで区切った文字列に設定します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Cols("checkBoxes").DataType = GetType(Boolean) flex.Cols("yesNo").DataType = GetType(Boolean) flex.Cols("yesNo").Format = "Yes;No"</code>
        <code lang="C#">flex.Cols["checkBoxes"].DataType = typeof(bool); flex.Cols["yesNo"].DataType = typeof(bool); flex.Cols["yesNo"].Format := "Yes;No";</code>
        <para>
          非連結モードでは、
          <b>GetCellCheck</b>および
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellCheck(System.Int32,System.Int32,C1.Win.C1FlexGrid.CheckEnum)" />メソッドを使用して、任意のセルにチェックボックスを追加できます。このチェックボックスはセル内にテキストと共に表示され、列の
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageAlign" />プロパティを使用してチェックボックスの位置を指定できます。
        </para>
        <para>
          ２つの種類のチェックボックス（ブール値と３値）があります。ブール値チェックボックスは、
          <see cref="F:C1.Win.C1FlexGrid.CheckEnum.Checked" />および
          <see cref="F:C1.Win.C1FlexGrid.CheckEnum.Unchecked" />の間で状態が切り替わります。３値チェックボックスは、
          <see cref="F:C1.Win.C1FlexGrid.CheckEnum.TSChecked" />、
          <see cref="F:C1.Win.C1FlexGrid.CheckEnum.TSUnchecked" />、および
          <see cref="F:C1.Win.C1FlexGrid.CheckEnum.TSGrayed" />の間で順に設定が切り替わります。
        </para>
        <para>たとえば、次のコードは、セル (3,3) にブール値チェックボックス、セル (4,3) に３値チェックボックスを作成します。</para>
        <para></para>
        <code lang="VB.NET">flex.SetCellCheck(3, 3, CheckEnum.Unchecked) ' ブール値 flex.SetCellCheck(4, 3, CheckEnum.TSUnchecked) ' ３値</code>
        <code lang="C#">flex.SetCellCheck(3, 3, CheckEnum.Unchecked) // ブール値 flex.SetCellCheck(4, 3, CheckEnum.TSUnchecked) // ３値</code>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellCheck(System.Int32,System.Int32,C1.Win.C1FlexGrid.CheckEnum)">
      <summary>グリッドセル内のチェックボックスの状態を設定します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="check">
        セルに割り当てる
        <see cref="T:C1.Win.C1FlexGrid.CheckEnum" />値。
      </param>
      <remarks>
        例と詳細については、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellCheck(System.Int32,System.Int32)" />メソッドを参照してください。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetCellCheckEdit(System.Int32,System.Int32,C1.Win.C1FlexGrid.CheckEnum)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CheckEnum" />の値をセルまたはセル範囲に適用します。
      </summary>
      <remarks>このメソッドは内部用です。これにより、セル編集時にチェックボックスのデータをセルに適用する方法を 継承クラスでカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="check">セルに適用する値。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)">
      <summary>セル範囲内のデータに合わせて列範囲の幅を調整します。</summary>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <param name="extraSpace">列の幅に追加する余分な空白の量（ピクセル単位）。</param>
      <param name="flags">自動サイズ設定オプションを制御するフラグ。</param>
      <remarks>
        <para>
          デフォルトでは、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />メソッドは、セルの内容とスタイルを考慮して各列内の各セルを測定します。
        </para>
        <para>
          グリッドに多数の行がある場合、パフォーマンスを向上させるには、
          <paramref name="topRow" />および
          <paramref name="bottomRow" />パラメータを使用して行範囲を指定します。この処理には数百行ほどを含め、安全策として多少の余白を追加しておくことができます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols">
      <summary>データに合わせてすべての列の幅を調整します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32)">
      <summary>データに合わせて範囲内の列の幅を調整します。</summary>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <param name="extraSpace">列の幅に追加する余分な空白の量（ピクセル単位）。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32)">
      <summary>データに合わせてすべての列の幅を調整します。</summary>
      <param name="extraSpace">列の幅に追加する余分な空白の量（ピクセル単位）。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCol(System.Int32)">
      <summary>データに合わせて列の幅を調整します。</summary>
      <param name="col">列インデックス。</param>
      <remarks>
        このメソッドは、セルの内容とスタイルを考慮して、列内のすべてのセルを測定します。グリッドに大量の行がある場合は、より小さな（特定の）行と列のセットを指定し、測定することができる
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />メソッドを代わりに使用することを検討してください。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCol(System.Int32,System.Int32)">
      <summary>データに合わせて列の幅を調整します。</summary>
      <param name="col">列インデックス。</param>
      <param name="extraSpace">列の幅に追加する余分な空白の量（ピクセル単位）。</param>
      <remarks>
        このメソッドは、セルの内容とスタイルを考慮して、列内のすべてのセルを測定します。グリッドに大量の行がある場合は、代わりに
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />メソッドを使用することを検討してください。これにより、より小さな（特定の）行と列のセットを指定し、測定できます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeRows(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)">
      <summary>セル範囲内のデータに合わせて行範囲の高さを調整します。</summary>
      <param name="topRow">範囲内の上端の行。</param>
      <param name="leftCol">範囲内の左端の列。</param>
      <param name="bottomRow">範囲内の下端の行。</param>
      <param name="rightCol">範囲内の右端の列。</param>
      <param name="extraSpace">列の幅に追加する余分な空白の量（ピクセル単位）。</param>
      <param name="flags">自動サイズ設定オプションを制御するフラグ。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeRows">
      <summary>データに合わせてすべての行の高さを調整します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeRow(System.Int32)">
      <summary>データに合わせて行の高さを調整します。</summary>
      <param name="row">行インデックス。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)">
      <summary>最大のエントリに合わせてグリッド列を自動的にサイズ変更します。</summary>
      <param name="g">
        セルの内容の測定に使用される
        <see cref="T:System.Drawing.Graphics" />オブジェクト。
      </param>
      <param name="row1">測定する最初の行のインデックス。</param>
      <param name="col1">測定する最初の列のインデックス。</param>
      <param name="row2">測定する最後の行のインデックス。</param>
      <param name="col2">測定する最初の列のインデックス。</param>
      <param name="extra">最大のエントリに追加する余分な空白（Twips単位）。</param>
      <param name="flags">
        自動サイズ設定の動作を指定する
        <see cref="T:C1.Win.C1FlexGrid.AutoSizeFlags" />値。
      </param>
      <remarks>これは内部使用専用です。このメソッドを使用して、継承クラスは、グリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeRows(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)">
      <summary>最大のエントリに合わせてグリッド列を自動的にサイズ変更します。</summary>
      <param name="g">
        セルの内容の測定に使用される
        <see cref="T:System.Drawing.Graphics" />オブジェクト。
      </param>
      <param name="row1">測定する最初の行のインデックス。</param>
      <param name="col1">測定する最初の列のインデックス。</param>
      <param name="row2">測定する最後の行のインデックス。</param>
      <param name="col2">測定する最初の列のインデックス。</param>
      <param name="extra">最大のエントリに追加する余分な空白（Twips単位）。</param>
      <param name="flags">
        自動サイズ設定の動作を指定する
        <see cref="T:C1.Win.C1FlexGrid.AutoSizeFlags" />値。
      </param>
      <remarks>これは内部使用専用です。このメソッドを使用して、継承クラスは、グリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnHandleDestroyed(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.HandleDestroyed" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnGotFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.GotFocus" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.Leave" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnLostFocus(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.LostFocus" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsInputKey(System.Windows.Forms.Keys)">
      <summary>指定されたキーが通常の入力キーであるか、前処理を必要とする 特殊なキーであるかを判定します。</summary>
      <param name="keyData">
        <see cref="T:System.Windows.Forms.Keys" />の値の１つ。
      </param>
      <returns>指定されたキーが通常の入力キーである場合は true、その他の場合は false です。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.IsInputChar(System.Char)">
      <summary>文字がコントロールで認識できる入力文字であるかどうかを判定します。</summary>
      <param name="charCode">テストする文字。</param>
      <returns>文字を前処理なしでコントロールに直接送る場合は true、その他の場合は false です。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.KeyDown" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.KeyEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.KeyPress" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.KeyPressEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnMouseLeave(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseLeave" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseMove" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.MouseEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseDown" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.MouseEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseUp" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.MouseEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDoubleClick(System.EventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.DoubleClick" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.EventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnScroll(System.Windows.Forms.ScrollBars)">
      <summary>グリッドのコンテンツがスクロールされたときに呼び出されます。</summary>
      <param name="sb">
        スクロール方向を指定する
        <see cref="T:System.Windows.Forms.ScrollBars" />の値。
      </param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドのスクロール動作をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnScrollTip(System.Int32)">
      <summary>グリッドのコンテンツが垂直にスクロールされたときに呼び出され、スクロールの先端の値を更新します。</summary>
      <param name="newValue">垂直スクロールバーの新しい値。</param>
      <remarks>
        このメソッドは、新しいスクロール位置を処理して、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnShowScrollTip(C1.Win.C1FlexGrid.ToolTipEventArgs)" />を呼び出します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.DragEnter" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.DragEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.DragOver" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.DragEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
        <see cref="E:System.Windows.Forms.Control.DragDrop" />イベントを発生させます。
      </summary>
      <param name="e">
        イベントデータを含む
        <see cref="T:System.Windows.Forms.DragEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShouldSerializeVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.VisualStyle" />プロパティが明示的に設定され、 維持されるかどうかを決める値を取得します。
      </summary>
      <returns>プロパティがユーザーによって明示的に設定された場合は true です。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ResetVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.VisualStyle" />プロパティをリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.OnAmbientChangedVisualStyle">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.VisualStyle" />プロパティが変化したときに呼び出されるメソッド。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Copy">
      <summary>現在の選択をクリップボードにコピーします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Cut">
      <summary>現在選択されているコンテンツをクリップボードにコピーします。</summary>
      <remarks>このコマンドは、現在の選択をクリップボードにコピーし、 選択内の編集可能なコンテンツを削除します。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.Paste">
      <summary>クリップボードのコンテンツを現在の選択に貼り付けます。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ApplyFilters">
      <summary>グリッド上のデータにすべての列フィルタを適用します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.EditFilter(System.Int32)">
      <summary>指定の列に関連付けられたフィルタを編集します。</summary>
      <param name="col">編集されるフィルタの列のインデックス。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.EditFilter(C1.Win.C1FlexGrid.Column)">
      <summary>指定の列に関連付けられたフィルタを編集します。</summary>
      <param name="col">
        編集されるフィルタの
        <see cref="T:C1.Win.C1FlexGrid.Column" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ClearFilter(System.Int32)">
      <summary>指定の列に関連付けられたフィルタをクリアします。</summary>
      <param name="col">クリアされるフィルタの列のインデックス。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ClearFilter(C1.Win.C1FlexGrid.Column)">
      <summary>指定の列に関連付けられたフィルタをクリアします。</summary>
      <param name="col">
        クリアされるフィルタの
        <see cref="T:C1.Win.C1FlexGrid.Column" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridBase.ClearFilter">
      <summary>すべての列フィルタをクリアします。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetLocalizedString">
      <summary>フィルタがユーザーインタフェース内の文字列をローカライズするときに発生します。</summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />コントロールは、 システムの現在のカルチャと
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Language" />プロパティの設定に基づき、 列フィルタを自動的にローカライズします。
        </para>
        <para>このイベントにより、 フィルタの文字列をカスタマイズし、 グリッドの組み込みローカライズメカニズムではサポートされない言語へのローカライズを実装できます。</para>
        <para>
          フィルタの任意の UI 要素のコンテンツを変更するには、 このイベントを処理して、
          <b>e.Value</b>パラメータを、 表示するテキストに設定します。
        </para>
      </remarks>
      <example>
        以下の例は、 文字列値とローカライズ対象コントロールの名前に基づき、 フィルタ UI の文字列を変更する方法を示します。
        <code>void Initialize() { // enable filtering _flex.AllowFiltering = true; // set GetLocalizedString handler _flex.GetLocalizedString += _flex_GetLocalizedString; } void _flex_GetLocalizedString(object sender, C1.Win.C1FlexGrid.GetLocalizedStringEventArgs e) { // customize item based on text value if (e.Value == "(Select All)") { e.Value = "(Select Everything)"; } // customize item based on component name switch (e.ComponentName) { case "_btnApplyFilter": e.Value = "OK"; break; case "_btnClearFilter": e.Value = "Reset"; break; case "_btnCancel": e.Value = "Close"; break; } }</code></example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DefaultSize">
      <summary>コントロールのデフォルトサイズを取得します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridChanged">
      <summary>グリッドまたはその内容が変更されたときに発生します。</summary>
      <remarks>
        <para>
          これは、より特定されたイベントが発生する前の一般的なイベントです。 たとえば、ユーザーがマウスで列をドラッグすると、コントロールは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragColumn" />、
          <b>GridChanged</b>、および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragColumn" />イベントを発生します。
        </para>
        <para>
          <b>GridChanged</b>を使用して、すべてのタイプのグリッドイベントに対する中央ハンドラを作成できます。このハンドラは、すべてのイベントに対して詳細引数を提供したり、ユーザーアクションを取り消すオプションを提供することはありません。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown">
      <summary>
        <see cref="E:System.Windows.Forms.Control.MouseDown" />イベントがグリッドによって処理される前に発生します。
      </summary>
      <remarks>
        このイベントは、グリッドが
        <see cref="E:System.Windows.Forms.Control.MouseDown" />イベントを処理する前に発生し、プログラムがコントロールの動作をカスタマイズしたり、オプションでデフォルトのマウスの処理をキャンセルできるようにします。
      </remarks>
      <example>
        <para>
          次のコードは、
          <b>BeforeMouseDown</b>イベントを処理して、行ヘッダのクリックを検出し、 OLE ドラッグ＆ドロップ機能を提供します。
        </para>
        <code lang="VB.NET">Private Sub flex_BeforeMouseDown(・・・ ' ユーザーが行ヘッダをクリックしたときにドラッグを開始します。 Dim hti As HitTestInfo = flex.HitTest(e.X, e.Y) If hti.Type = HitTestTypeEnum.RowHeader Then ' デフォルトの処理をキャンセルします。 e.Cancel = True ' 行のドラッグ＆ドロップを処理します。 HandleRowDragDrop(hti.Row) End If End Sub</code>
        <code lang="C#">private void flex_BeforeMouseDown(・・・ { // ユーザーが行ヘッダをクリックしたときにドラッグを開始します。 HitTestInfo hti = _flex.HitTest(e.X, e.Y); if (hti.Type == HitTestTypeEnum.RowHeader) { // デフォルトの処理をキャンセルします。 e.Cancel = true; // 行のドラッグ＆ドロップを処理します。 HandleRowDragDrop(hti.Row); } }</code>
      </example>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDoubleClick">
      <summary>
        <b>DoubleClick</b>イベントがグリッドによって処理される前に発生します。
      </summary>
      <remarks>
        このイベントは、グリッドが
        <see cref="E:System.Windows.Forms.Control.DoubleClick" />イベントを処理する前に発生し、プログラムがコントロールの動作をカスタマイズしたり、オプションでデフォルトのマウスの処理をキャンセルできるようにします。
      </remarks>
      <example>
        <para>
          次のコードは、
          <b>BeforeDoubleClick</b>イベントを処理して、特定の列にあるセルのダブルクリックを検出し、組み込みエディタを使用せずに独自の編集ダイアログを提供します。
        </para>
        <code lang="VB.NET">Private Sub flex_BeforeDoubleClick(・・・ ' Customer列のダブルクリックを検出します。 Dim hti As HitTestInfo = flex.HitTest(e.X, e.Y) If hti.Type = HitTestTypeEnum.Cell And flex.Cols(hti.Column).Name = "Customer" Then ' デフォルトの処理をキャンセルします。 e.Cancel = True ' ダブルクリックを処理します。 ShowCustomEditDialog(hti.Row, hti.Column) End If End Sub</code>
        <code lang="C#">private void flex_BeforeDoubleClick(・・・ { // Customer列のダブルクリックを検出します。 HitTestInfo hti = flex.HitTest(e.X, e.Y); if (hti.Type == HitTestTypeEnum.Cell &amp;&amp; flex.Cols[hti.Column].Name == "Customer") { // デフォルトの処理をキャンセルします。 e.Cancel = true; // ダブルクリックを処理します。 ShowCustomEditDialog(hti.Row, hti.Column); } }</code>
      </example>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragRow">
      <summary>ユーザーが行のドラッグを開始する前に発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーがマウスを使用して行をドラッグする場合にのみ発生します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.RowCollection.Move(System.Int32,System.Int32)" />メソッドを使用して行が移動される場合は発生しません。
        </para>
        <para>
          特定の行をユーザーがドラッグできないようにするには、
          <b>Row.AllowDragging</b>プロパティを false に設定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.DraggingRow">
      <summary>ユーザーが行を新しい位置にドラッグすると発生します。</summary>
      <remarks>
        <para>このイベントはユーザーがマウスを使用して行をドラッグしたときにのみ発生します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.RowCollection.Move(System.Int32,System.Int32)" />メソッドを使用して行を移動したときは発生しません。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowDragging" />プロパティを false に設定すると、 ユーザーによる特定の行のドラッグを防ぐことができます。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragRow">
      <summary>ユーザーが行のドラッグを終了した後に発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーがマウスを使用して行をドラッグする場合にのみ発生します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.RowCollection.Move(System.Int32,System.Int32)" />メソッドを使用して行が移動される場合は発生しません。
        </para>
        <para>
          特定の行をユーザーがドラッグできないようにするには、
          <b>Row.AllowDragging</b>プロパティを false に設定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragColumn">
      <summary>ユーザーが列のドラッグを開始する前に発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーがマウスを使用して列をドラッグする場合にのみ発生します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Move(System.Int32,System.Int32)" />メソッドを使用して列が移動される場合は発生しません。
        </para>
        <para>
          特定の列をユーザーがドラッグできないようにするには、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowDragging" />プロパティを false に設定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.DraggingColumn">
      <summary>ユーザーが列を新しい位置にドラッグすると発生します。</summary>
      <remarks>
        <para>このイベントはユーザーがマウスを使用して列をドラッグしたときにのみ発生します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Move(System.Int32,System.Int32)" />メソッドを使用して行を移動したときは発生しません。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowDragging" />プロパティを false に設定すると、 ユーザーによる特定の列のドラッグを防ぐことができます。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragColumn">
      <summary>ユーザーが列のドラッグを終了した後に発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーがマウスを使用して列をドラッグする場合にのみ発生します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Move(System.Int32,System.Int32)" />メソッドを使用して列が移動される場合は発生しません。
        </para>
        <para>
          特定の列をユーザーがドラッグできないようにするには、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowDragging" />プロパティを false に設定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSort">
      <summary>列ヘッダをクリックして列がソートされる前に発生します。</summary>
      <remarks>
        <para>
          このイベントは、列ヘッダのクリックによってソートが発生した場合にのみ発生します。
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用してソートする前には発生しません。
        </para>
        <para>
          このイベントは、特定の列をユーザーがソートできないようにしたり、特定の列に対して独自のソート順を指定する場合に便利です。独自のソート順を指定するには、
          <paramref name="Order" />パラメータの値を変更します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSort">
      <summary>列ヘッダをクリックして列がソートされた後に発生します。</summary>
      <remarks>
        <para>
          このイベントは、列ヘッダセルのクリックによってソートが発生した場合にのみ発生します（
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowSorting" />プロパティを参照）。
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用してソートした後には発生しません。
        </para>
        <para>
          このイベントは、新しいソートを反映してユーザーインタフェース要素を更新する場合に便利です。特定の列をソートできないようにしたり、デフォルトのソート順を変更するには、
          <b>Col.AllowSorting</b>を使用したり、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSort" />イベントを処理します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAutosizeRow">
      <summary>行ヘッダのダブルクリックによって行が自動的にサイズ変更される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAutosizeColumn">
      <summary>列ヘッダのダブルクリックによって列が自動的にサイズ変更される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeRow">
      <summary>行ヘッダをドラッグして行がサイズ変更される前に発生します。</summary>
      <remarks>
        ユーザーによる行、列、または両方のサイズ変更を許可するかどうかは、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowResizing" />プロパティを使用して指定します。
        <para>
          また、
          <see cref="T:C1.Win.C1FlexGrid.Row" />および
          <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトには、特定の行および列のサイズ変更を禁止できる
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowResizing" />プロパティも用意されています。
        </para></remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeRow">
      <summary>行ヘッダをドラッグして行がサイズ変更された後に発生します。</summary>
      <remarks>
        <para>
          <b>AfterResizeRow</b>イベントが発生するのは、ユーザーがマウスを使ってヘッダセルの端をドラッグして行をリサイズしたときだけです（
          <b>AllowResizing</b>プロパティを参照）。Rows(index).Heightプロパティに新しい値を設定して行をリサイズした場合は発生しません。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeColumn">
      <summary>列ヘッダをドラッグして列がサイズ変更される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeColumn">
      <summary>列ヘッダをドラッグして列がサイズ変更された後に発生します。</summary>
      <remarks>
        <para>
          <b>AfterResizeColumn</b>イベントが発生するのは、ユーザーがマウスを使ってヘッダセルの端をドラッグして、列をリサイズしたときだけです（
          <b>AllowResizing</b>プロパティを参照）。Cols(index).Widthプロパティに新しい値を設定して列をリサイズした場合は発生しません。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeFreezeRow">
      <summary>フリーズ行分割線をドラッグして行がフリーズされる前に発生します。</summary>
      <remarks>
        行および列のフリーズを有効または無効にするには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFreezing" />プロパティを使用します。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterFreezeRow">
      <summary>フリーズ行分割線をドラッグして行がフリーズされた後に発生します。</summary>
      <remarks>
        行および列のフリーズを有効または無効にするには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFreezing" />プロパティを使用します。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeFreezeColumn">
      <summary>フリーズ列分割線をドラッグして列がフリーズされる前に発生します。</summary>
      <remarks>
        行および列のフリーズを有効または無効にするには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFreezing" />プロパティを使用します。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterFreezeColumn">
      <summary>フリーズ列分割線をドラッグして列がフリーズされた後に発生します。</summary>
      <remarks>
        行および列のフリーズを有効または無効にするには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFreezing" />プロパティを使用します。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.MouseEnterCell">
      <summary>セル内にマウスポインタが入ったときに発生します。</summary>
      <remarks>
        <para>
          多くのアプリケーションでマウスを追跡し、現在マウスポインタの下にあるセルを強調表示するような処理を実装しています。この動作は、
          <see cref="E:System.Windows.Forms.Control.MouseMove" />イベントを使用しても実現可能です。ただし、
          <b>MouseMove</b>イベントはマウスが同じセル内で移動している間も発生するため、この方法はあまり効率的ではありません。
        </para>
        <para>
          <b>MouseEnterCell</b>イベントはセルからマウスが離れるまで発生するので、効率的にマウスを追跡することができます。
        </para>
      </remarks>
      <example>
        下記のコードではマウスポインタを追跡し、マウスの下にあるセルをハイライト表示します。
        <code lang="VB.NET">Private Sub Form1_Load(・・・ ' カスタムスタイルを作成 flex.Styles.Add("track") flex.Styles("track").BackColor = Color.Gold End Sub Private Sub flex_MouseEnterCell(・・・ ' セル内にマウスポインタが入ればスタイルを設定 flex.SetCellStyle(e.Row, e.Col, flex.Styles("track")) End Sub Private Sub flex_MouseLeaveCell(・・・ ' セルから出た際にスタイルを削除 flex.SetCellStyle(e.Row, e.Col, CType(Nothing, C1.Win.C1FlexGrid.CellStyle)) End Sub</code><code lang="C#">private void Form1_Load(・・・ { // カスタムスタイルを作成します。 flex.Styles.Add("track"); flex.Styles["track"].BackColor = Color.Gold; } private void flex_MouseEnterCell(・・・ { // セル内にマウスポインタが入ればスタイルを設定します。 flex.SetCellStyle(e.Row, e.Col, flex.Styles["track"]); } private void flex_MouseLeaveCell(・・・ { // セルから出た際にスタイルを削除します。 flex.SetCellStyle(e.Row, e.Col, (C1.Win.C1FlexGrid.CellStyle)null); }</code></example>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.MouseLeaveCell">
      <summary>マウスがセルから離れたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScroll">
      <summary>グリッドがスクロールする前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterScroll">
      <summary>グリッドがスクロールした後に発生します。</summary>
      <remarks>このイベントを使用すると、現在の選択範囲に対して操作を実行している間、ユーザーがグリッドをスクロールできないように設定できます。</remarks>
      <example>
        <para>次のコードは、グリッドが編集モードの間、グリッドをスクロールできないようにします。</para>
        <code lang="VB.NET">Private Sub flex_BeforeScroll(ByVal sender As Object, ByVal e As C1.Win.C1FlexGrid.RangeEventArgs) Handles flex.BeforeScroll If Not flex.Editor Is Nothing Then e.Cancel = True End If End Sub</code>
        <code lang="C#">private void flex_BeforeScroll(object sender, C1.Win.C1FlexGrid.RangeEventArgs e) { if (flex.Editor != null) e.Cancel = true; }</code>
      </example>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.ShowScrollTip">
      <summary>垂直スクロールチップを表示する前に発生します。</summary>
      <remarks>
        <para>
          このイベントは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ScrollOptions" />プロパティで
          <b>ShowScrollTips</b>フラグが設定されている場合のみ発生します。
        </para>
        <para>スクロールチップに表示されるテキストを指定できます。</para>
      </remarks>
      <example>
        以下のコードは、
        <b>ShowScrollTip</b>イベントを使用して、ユーザーがスクロールを停止したときに可視になる最初のセルの値を示すスクロールチップを表示します。
        <code lang="VB.NET">flex.ScrollOptions = ScrollFlags.DelayedScroll Or ScrollFlags.ShowScrollTips Private Sub flex_ShowScrollTip(ByVal sender As Object, ByVal e As ToolTipEventArgs) Handles flex.ShowScrollTip e.ToolTipText = String.Format("row {0}", e.Row) End Sub</code><code lang="C#">flex.ScrollOptions = ScrollFlags.DelayedScroll | ScrollFlags.ShowScrollTips; private void flex_ShowScrollTip(object sender, ToolTipEventArgs e) { e.ToolTipText = string.Format("row {0}", e.Row); }</code></example>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange">
      <summary>
        現在のセル（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティ）が変更される前に発生します。
      </summary>
      <remarks>
        <para>
          このイベントは、ユーザー操作の結果またはコードによって
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティが変更される前に発生します。このイベントを使用して、特定のセルが選択されないように、グリッド内に保護範囲を作成できます。
        </para>
        <para>
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange" />は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />プロパティまたは
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティが変更されようとしているときにのみ発生します。選択範囲の拡張を検出する場合は、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange" />イベントも処理する必要があります。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterRowColChange">
      <summary>
        現在のセル（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティ）が変更された後に発生します。
      </summary>
      <remarks>
        <para>
          このイベントは、ユーザー操作（マウスまたはキーボード）の結果またはコードによって
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティが変更される前に発生します。このイベントを使用すると、現在選択されている行、列、セルに関する追加情報を表示できます。
        </para>
        <para>
          検証を実行したり、特定のセルを選択できないようにするには、代わりに
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange" />イベントと
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange" />イベントを使用します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange">
      <summary>
        選択範囲（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティ）が変更される前に発生します。
      </summary>
      <remarks>
        <para>
          <b>BeforeSelChange</b>イベントは、ユーザーによるマウス／キーボード操作の結果、あるいはコードによって
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティが変更される前に発生します。これによって、ユーザーによる特定セルの選択を禁止してグリッド上に「保護」領域を作成できます。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSelChange">
      <summary>
        選択範囲（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティ）が変更された後に発生します。
      </summary>
      <remarks>
        <para>
          このイベントは、ユーザーアクション（マウスまたはキーボード）の結果またはコードによって
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティが変更された後に発生します。
        </para>
        <para>
          このイベントは、現在の選択範囲に関する追加情報を表示する場合に便利です。検証を実行したり、特定のセルを選択できないようにするには、代わりに
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange" />イベントと
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange" />イベントを使用します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowColChange">
      <summary>
        現在のセル（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティ）が変更された後に発生します。
      </summary>
      <remarks>
        <para>
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowColChange" />は、ユーザーアクション（マウスまたはキーボード）の結果またはコードによって
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティが変更されるときに発生します。
        </para>
        <para>
          選択範囲（
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティ）は変更されたが、アクティブなセル（
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />）は変更されていない場合、このイベントは発生しません。その場合は、代わりに
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SelChange" />イベントが発生します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.SelChange">
      <summary>
        選択範囲（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティ）が変更された後に発生します。
      </summary>
      <remarks>
        <para>
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SelChange" />は、ユーザーアクション（マウスまたはキーボード）の結果またはコードによって
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、または
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティが変更された後に発生します。
        </para>
        <para>このイベントは、ユーザーがマウスを使用して選択範囲を拡張するときも発生します。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveCell">
      <summary>
        現在のセル（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティ）が変更される前に発生します。
      </summary>
      <remarks>このイベントは、ユーザーアクション（マウスまたはキーボード）の結果またはコードによってカーソルが現在のセルから出る前に発生します。</remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.EnterCell">
      <summary>
        現在のセル（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティ）が変更された後に発生します。
      </summary>
      <remarks>このイベントは、ユーザーアクション（マウスまたはキーボード）の結果またはコードによってカーソルがセルに入った後に発生します。</remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit">
      <summary>グリッドが編集モードに入る前と、フォーカスがあるセルを描画する必要があるときに発生します。</summary>
      <remarks>
        <para>このイベントが発生するのは、グリッドが編集モードに入ろうとしているときだけではありません。</para>
        <para>エディタのドロップダウンボタンの描画をサポートするために、セルの描画中にも発生します。</para>
        <para>このイベントでCancel引数をtrueに設定すると編集を禁止することができます。</para>
        <para>
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit" />イベントは、グリッドが編集モードに入ろうとしているときにのみ発生します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit">
      <summary>コントロールが編集モードに入る前に発生します。</summary>
      <remarks>
        <para>
          このイベントはコントロールが編集モードに入る前に発生します。
          <b>Cancel</b>プロパティを true に設定して編集を禁止したり、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboList" />プロパティを使用してコンボボックスのリストを設定したり、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.EditMask" />プロパティを使用して編集マスクを提供することができます。
        </para>
        <para>
          コンボボックスのリストや編集マスクが列全体で同じ場合、
          <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトの
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ComboList" />および
          <see cref="P:C1.Win.C1FlexGrid.RowCol.EditMask" />プロパティを使用して、これらをより効率的に設定することができます。この場合、一切
          <b>StartEdit</b>イベントを処理する必要はありません。
        </para>
        <para>
          また、グリッドは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントも発生させます。２つの相違点として、
          <b>BeforeEdit</b>は、グリッドがフォーカスのあるセルを描画するときに発生することです（したがって、セルがドロップダウンボタンを持つかどうかを指定できます）。
          <b>BeforeEdit</b>は
          <b>StartEdit</b>よりも頻繁に発生し、必ずしもグリッドが実際に編集モードに入っていることを示すものではありません。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterEdit">
      <summary>セルが編集された後に発生します。</summary>
      <remarks>
        <para>このイベントは、ユーザーが［ Esc ］キーを押して編集をキャンセルした場合は発生しません。</para>
        <para>
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveEdit" />イベントは、編集がキャンセルされた場合でも、グリッドが編集モードから出るときに必ず発生します。
        </para>
        <para>
          また、
          <b>AfterEdit</b>イベントは、変更がコントロールに適用された後に発生するため、データの正当性検査を実行する場合には適しません。ユーザーによる入力データの正当性検査を行うには、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit" />イベントを代わりに使用してください。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.LeaveEdit">
      <summary>コントロールが編集モードから出た後に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick">
      <summary>ユーザーがセルボタンをクリックした後に発生します。</summary>
      <remarks>
        <para>
          <b>CellButtonClick</b>イベントは、ユーザーがセルボタンをクリックすると発生します。通常、このイベントはセルで別のカスタムエディタ（色、日付、ファイル、ピクチャなどを選択するダイアログ）をポップアップさせるために使用します。
        </para>
        <para>
          デフォルトでは、セルボタンはセルの右側に省略符号キャプション（"..."）で表示されます。Visual Studio のプロパティウィンドウでPictureプロパティの横に表示されるボタンと同じです。
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonImage" />プロパティに別のピクチャを設定して、ボタンの外観をカスタマイズできます。
        </para>
        <para>
          セルボタンを使用するには、グリッドまたは特定列の
          <b>ComboList</b>プロパティに省略符号（"..."）を設定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetupEditor">
      <summary>セルエディタがグリッドによって初期化された後に発生します。これにより、独自の初期化を追加して実行できます。</summary>
      <remarks>
        <para>このイベントを使用すると、エディタコントロールのプロパティを設定して、セルエディタの動作をカスタマイズできます。</para>
        <para>たとえば、次のコードは、使用されるエディタが TextBox かどうかを確認し、エディタの CharacterCasing および MaxLength プロパティを設定します。</para>
        <para></para>
        <code lang="VB.NET">Private Sub flex_SetupEditor(・・・ Dim ctl As Control = flex.Editor If TypeOf ctl Is TextBox Then CType(ctl, TextBox).MaxLength = 4 CType(ctl, TextBox).CharacterCasing = CharacterCasing.Upper End If End Sub</code>
        <code lang="C#">private void flex_SetupEditor(・・・ { Control ctl = flex.Editor; if (ctl is TextBox) { ((TextBox)ctl).MaxLength = 4; ((TextBox)ctl).CharacterCasing = CharacterCasing.Upper; } }</code>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit">
      <summary>コントロールがセルの編集モードを終了する前、エディタがまだアクティブなときに発生します。</summary>
      <remarks>
        <para>このイベントの発生時点で、エディタの内容はまだグリッドに適用されていません。エディタの内容を検証し、必要であれば編集をキャンセルできます。たとえば、次のコードは、入力された値が 0 ～ 50 の整数であることを確認します。</para>
        <para></para>
        <code lang="VB.NET">Private Sub flex_ValidateEdit(・・・ If flex.Cols(e.Col).Name = "Score" Then Try Dim value As Integer = Integer.Parse(flex.Editor.Text) If value &gt;= 0 And value &lt;= 50 Then Return ' 編集を受け入れます End If Catch ex As Exception End Try MessageBox.Show("入力値が不正です") ' エラーまたは不正な範囲の場合は編集を拒否します。 e.Cancel = True End If End Sub</code>
        <code lang="C#">private void flex_ValidateEdit(・・・ { if (flex.Cols[e.Col].Name = "Score") { try { int value = int.Parse(flex.Editor.Text); if (value &gt;= 0 &amp;&amp; value &lt;= 50) return; // 編集を受け入れます } catch {} // エラーまたは不正な範囲の場合は編集を拒否します。 e.Cancel = true; } }</code>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellChecked">
      <summary>セル内のチェックボックスが、ユーザーによりチェックされた後、またはチェックが外された後に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.ChangeEdit">
      <summary>編集モードで、エディタの内容が変更された後に発生します。</summary>
      <remarks>
        <para>このイベントは、グリッドが編集モードになっていて、エディタの内容が変更されたときに発生します。これは、ユーザーがエディタに入力するか、新しい項目をドロップダウンリストで選択した場合です。</para>
        <para>
          このイベントが発生したときに、新しいエディタの内容はグリッドセルにはまだ適用されていません。
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Editor" />プロパティを使用して、新しい内容をチェックできます。
        </para>
      </remarks>
      <example>
        <para>
          次のコードは、
          <b>ChangeEdit</b>イベントを使用して入力内容に応じて行の高さを変更します。
        </para>
        <code lang="VB.NET">Private Sub frmAutoSizeEdit_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load fg.Styles.Normal.WordWrap = True End Sub Private Sub fg_AfterEdit(ByVal sender As Object, ByVal e As C1.Win.C1FlexGrid.RowColEventArgs) Handles fg.AfterEdit fg.AutoSizeRow(e.Row) End Sub Private Sub fg_ChangeEdit(ByVal sender As Object, ByVal e As System.EventArgs) Handles fg.ChangeEdit ' テキストの高さを測定します。 Dim g As Graphics = fg.CreateGraphics() Dim sf As StringFormat = New StringFormat() Dim wid As Integer = fg.Cols(fg.Col).WidthDisplay - 2 Dim text As String = fg.Editor.Text Dim sz As SizeF = g.MeasureString(text, fg.Font, wid, sf) ' 必要に応じて行の高さを調整します。 Dim row As C1.Win.C1FlexGrid.Row = fg.Rows(fg.Row) If sz.Height + 4 &gt; row.HeightDisplay Then row.HeightDisplay = CType(sz.Height, Integer) + 4 End If End Sub</code>
        <code lang="C#">private void frmAutoSizeEdit_Load(object sender, System.EventArgs e) { fg.Styles.Normal.WordWrap = true; } private void fg_AfterEdit(object sender, C1.Win.C1FlexGrid.RowColEventArgs e) { fg.AutoSizeRow(e.Row); } private void fg_ChangeEdit(object sender, System.EventArgs e) { using(Graphics g = fg.CreateGraphics()) { // テキストの高さを測定します。 StringFormat sf = new StringFormat(); int wid = fg.Cols[fg.Col].WidthDisplay - 2; string text = fg.Editor.Text; SizeF sz = g.MeasureString(text, fg.Font, wid, sf); // 必要に応じて行の高さを調整します。 C1.Win.C1FlexGrid.Row row = fg.Rows[fg.Row]; if(sz.Height + 4 &gt; row.HeightDisplay) { row.HeightDisplay = (int)sz.Height + 4; } } }</code>
      </example>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboDropDown">
      <summary>編集モードで、エディタのドロップダウン部分が開いたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboCloseUp">
      <summary>編集モードで、エディタのドロップダウン部分が閉じたときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyDownEdit">
      <summary>編集モードで、ユーザーがキーを押したときに発生します。</summary>
      <remarks>
        <para>
          <b>KeyDownEdit</b>イベントは、標準のKeyDownイベントと似ていますが、このイベントではグリッドが編集モードにあるときに発生します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyUpEdit">
      <summary>編集モードで、ユーザーがキーを放したときに発生します。</summary>
      <remarks>
        <para>
          <b>KeyUpEdit</b>イベントは、標準のKeyUpイベントと似ていますが、このイベントではグリッドが編集モードにあるときに発生します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyPressEdit">
      <summary>編集モードで、ユーザーが文字キーを押したときに発生します。</summary>
      <remarks>
        <para>
          <b>KeyPressEdit</b>イベントは、標準のKeyPressイベントと似ていますが、このイベントではグリッドが編集モードにあるときに発生します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellChanged">
      <summary>セルの内容が変更された後に発生します。</summary>
      <remarks>
        <para>セルの内容が変更された際、このイベントにより、どのように変更された場合でも（ユーザーがセルにデータを入力した、データベースからデータを読み込んだ、データがコードを通じてグリッドに割り当てられた場合など）常に処理を実行できます。</para>
        <para>このイベントを使用して、データが変更されたときに常に自動更新が行われる、条件付き書式設定および動的データサマリを提供することができます。</para>
        <para>
          このイベントは、連結モードおよび非連結モードで発生します。より多くの連結があるシナリオでは、データソースオブジェクトは変更された列を指定せずに、現在の行内のデータの一部が変更されたことを通知します。この場合、
          <b>Col</b>パラメータは -1 に設定されます。 この状況を例外をスローせずに処理するには、イベントハンドラを準備する必要があります。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDataRefresh">
      <summary>データソースの変更通知の後に発生します。</summary>
      <remarks>
        <para>グリッドを連結モードで使用しているとき、データソースに変更を加えるとAfterDataRefreshイベントが発生します。このイベントは、グリッドの小計行およびアウトラインツリーなどのデータ依存要素を更新するコードを挿入するのに理想的です。</para>
        <para>サンプルコードについては、「Data Analysisチュートリアル」を参照してください。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError">
      <summary>データソースがエラー状態を報告した後に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetUnboundValue">
      <summary>グリッドが非連結セルのデータを取得する必要があるときに発生します。</summary>
      <remarks>
        <para>このイベントは、連結モードの場合、グリッドが非連結列を含んでいるときにのみ発生します。非連結列は、データソース内の値にマッピングしておらず、連結列に基づいて計算した情報、またはアプリケーションによって提供された情報を格納できます。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetUnboundValue">
      <summary>グリッドが非連結セルにデータを格納する必要があるときに発生します。</summary>
      <remarks>
        <para>このイベントは、連結モードの場合、グリッドが非連結列を含んでいるときにのみ発生します。非連結列は、データソース内の値にマッピングしておらず、連結列に基づいて計算した情報、またはアプリケーションによって提供された情報を格納できます。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.DataBindingComplete">
      <summary>データ連結操作が完了したときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.DataSourceChanged">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />プロパティの値が変更されたときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.DataMemberChanged">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataMember" />プロパティの値が変更されたときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeCollapse">
      <summary>ノード行が折りたたまれるか展開される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterCollapse">
      <summary>ノード行が折りたたまれるか展開された後に発生します。</summary>
      <para>
        <para>
          The
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeCollapse" />and
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterCollapse" />events fire before and after node rows are expanded or collapsed. You can determine whether the node is being collapsed or expanded by checking the value of the node's its
          <see cref="P:C1.Win.C1FlexGrid.Node.Expanded" />property.
        </para>
        <para>These events allow you to populate outlines on demand, so you only need to create the rows that will actually be shown to the user. For example, if you are using the grid to display a directory tree, it would take a long time to read each directory on the disk in order to populate the tree.</para>
      </para>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DrawMode" />プロパティが
        <see cref="F:C1.Win.C1FlexGrid.DrawModeEnum.OwnerDraw" />に設定されている場合、グリッドがセルを描画する前に発生します。
      </summary>
      <remarks>
        <para>
          <b>OwnerDrawCell</b>イベントが発生するのは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DrawMode" />プロパティに
          <see cref="F:C1.Win.C1FlexGrid.DrawModeEnum.OwnerDraw" />を設定した場合だけです。
        </para>
        <para>
          <b>OwnerDrawCell</b>イベントを使用して、グリッド内の任意のセルの外観をカスタマイズできます。このイベントでは主に、次の３つの方法でカスタマイズできます。
        </para>
        <para>１）TextおよびImage引数を変更して、グリッドで表示される値を変更。たとえば、パスワードの文字列をアスタリスクに置き換える場合、このタイプのカスタマイズを使用します。</para>
        <para>２）Styleプロパティを変更し、グリッドのデフォルトの書式以外の書式を使用してセルを表示。たとえば、条件付きの書式設定を提供する場合、このタイプのカスタマイズを使用します。</para>
        <para>
          ３）GraphicsおよびBounds引数を使用して、ユーザー自身がセルを描画。このようにセルを描画する場合、DrawCellメンバを呼び出して強制的にグリッドにセルの特定部分を描画させる一方で、ユーザー自身のコードを使って他の部分を描画することができます。たとえば、セルにグラデーションの背景を描画するには、
          <b>オーナー描画セル</b>のトピックのサンプルコードを参照してください。
        </para>
        <para>
          グリッドが行または列のサイズを自動調整するとき、
          <b>OwnerDrawCell</b>イベントも発生します（AutoSizeRowsとAutoSizeColsの各メソッドを参照してください）。これは、描画時に使用したのと同じテキスト、イメージ、スタイルの各引数を使用してセルを測定する必要があるからです。この場合、Measuring引数はtrueに設定され、Bounds長方形は空白になります。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforePageBreak">
      <summary>コントロールの出力時に、改ページの制御を提供するために発生します。</summary>
      <remarks>
        <para>
          <b>BeforePageBreak</b>イベントは、コントロールが
          <b>PrintGrid</b>メソッドを使用して印刷中に発生して、改ページを制御します。
        </para>
        <para>
          <b>PrintGrid</b>メソッドを使用した場合、コントロールは1ページに収まる行を算出し、
          <b>BeforePageBreak</b>イベントのRow引数に渡します。このときCancel引数をtrueに設定すると、コントロールは改ページを行うかどうか対象となる行の区切りを上へ移動させて、有効な区切りが見つかるまで再度イベントを発生させます。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeginPrint">
      <summary>グリッドが印刷を開始するときに発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.EndPrint">
      <summary>グリッドが印刷を終了するときに発生します。</summary>
      <remarks>
        <para>通常、このイベントはユーザーインタフェースを更新し、グリッドの印刷時にフィードバックを行うために使用されます。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドを使用して、グリッドを印刷し、文書名、一般的な印刷オプション、ヘッダーおよびフッターを指定します。
        </para>
        <para>
          また、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters" />プロパティを使用して、ヘッダーおよびフッターのフォント、ページのマージン、向きなど、特殊な印刷オプションを指定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.PrintPage">
      <summary>グリッドがページの出力を終了した後に発生します。</summary>
      <remarks>
        <para>通常、このイベントはグリッドの印刷時にフィードバックを行い、印刷処理を停止するために使用できるキャンセルボタンを提供します。このイベントを使用して、印刷ページにカスタム要素を追加することもできます。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドを使用して、グリッドを印刷し、文書名、一般的な印刷オプション、ヘッダーおよびフッターを指定します。
        </para>
        <para>
          また、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters" />プロパティを使用して、ヘッダーおよびフッターのフォント、ページのマージン、向きなど、特殊な印刷オプションを指定します。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartDrag">
      <summary>グリッドが自動 OLE ドラッグ操作を開始する前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeAddRow">
      <summary>新しい行がユーザーによって追加される前に発生します。</summary>
      <remarks>
        <para>
          このイベントは、新しい行がプログラムによって、またはグリッドのデータソースからグリッドに追加される場合は発生しません。このイベントは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew" />がtrueに設定されていて、ユーザーがグリッドの最後の行にカーソルを移動して新しい空白行を作成する場合のみ発生します。
        </para>
        <para>このイベントを使用してCancel引数をtrueに設定すると、新しい行の作成を取り消すことができます。この場合、カーソルは新しい行に移動しません。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterAddRow">
      <summary>新しい行がユーザーによって追加された後に発生します。</summary>
      <remarks>
        <para>
          このイベントは、新しい行がプログラムによって、またはグリッドのデータソースからグリッドに追加される場合は発生しません。このイベントは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew" />がtrueに設定されていて、ユーザーがグリッドの最後の行にカーソルを移動して新しい空白行を作成する場合のみ発生します。
        </para>
        <para>このイベントを使用して新しい行を初期化できます。</para>
        <para>このように新しい行を作成した場合、行の初期値は空で、何らかの編集を行う前にこの新しい行からカーソルを外すことによって行を取り消すことができます。この場合、CancelAddRowイベントが発生し、新しい（空白）行が削除されます。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.CancelAddRow">
      <summary>何も変更しないまま、カーソルが新しい行から出るときに発生します。</summary>
      <remarks>
        詳細については、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterAddRow" />イベントを参照してください。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDeleteRow">
      <summary>ユーザーが行を削除する前に発生します。</summary>
      <remarks>
        <para>
          このイベントは、行がプログラムによって、またはグリッドのデータソースを介してグリッドから削除された場合は発生しません。
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowDelete" />プロパティがtrueに設定されていて、ユーザーがDeleteキーを押して１つまたは複数の行を削除する場合のみ発生します。
        </para>
        <para>このイベントを使用してCancel引数をtrueに設定すると、行の削除を取り消すことができます。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDeleteRow">
      <summary>ユーザーが１つ以上の行を削除した後に発生します。</summary>
      <remarks>
        <para>このイベントは、行がプログラムによって、またはグリッドのデータソースを介してグリッドから削除された場合は発生しません。AllowDeleteプロパティがtrueに設定されていて、ユーザーがDeleteキーを押して１つまたは複数の行を削除した場合のみ発生します。</para>
        <para>このイベントが発生するとき、行はグリッドからすでに削除されているため、Row引数は常に–1に設定されます。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellErrorInfo">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowErrors" />が true に設定されており、コントロールがセルのエラー情報を必要とするときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetRowErrorInfo">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowErrors" />が true に設定されており、コントロールが行のエラー情報を必要とするときに発生します。
      </summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSubtotal">
      <summary>各小計行がグリッドに追加される前に発生します。</summary>
      <remarks>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドが呼び出されると、小計行が追加されます。
        </para>
        <para>イベントハンドラでは、グリッドに特定の行が追加されないようにできます。 また、新しい小計行で使用されるキャプション、スタイル、および集計値をカスタマイズできます。</para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSubtotal">
      <summary>各小計行がグリッドに追加された後に発生します。</summary>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドが呼び出されると、小計行が追加されます。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeFilter">
      <summary>列のフィルタがグリッドに適用される前に発生します。</summary>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterFilter">
      <summary>列のフィルタがグリッドに適用された後に発生します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Item(System.Int32,System.Int32)">
      <summary>グリッドセル内のデータを取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、コントロールのインデクサです。</para>
        <para>セルにインデックスを付けるには、行インデックスと列インデックスを使用するか、行インデックスと列名を使用します。</para>
        <para>整数インデックスを使用する場合は、列を検索する必要がないため、効率がよくなります。列名を使用する場合は、ユーザーが列を新しい位置に移動しても参照が有効なままなので、柔軟性が高くなります。</para>
        <para>
          セルに値を割り当てると、グリッドは、その値を列で指定されている型に変換しようとします（
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataType" />プロパティを参照）。値を変換できない場合は、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントを発生させ、セルの元の値を維持します。
        </para>
        <para>
          <b>アップグレードに関するメモ :</b>ActiveX版のVSFlexGridコントロールでは、セル内容へアクセスするにはTextMatrixプロパティ、名前順の列インデックスを作成するにはColIndexプロパティを使用しました。C1FlexGridでは、インデクサを使用します。
        </para>
      </remarks>
      <example>
        <para>次の例は、列を作成して名前を割り当て、列インデックスを使用してセルの値を設定し、列名を使用してその値を取得します。</para>
        <code lang="VB.NET">' 列を作成し、名前を割り当て、新しいインデックスを取得します。 Dim myCol As Column = flex.Cols.Add() myCol.Name = "住所" myCol.DataType = GetType(String) Dim colIndex As Integer = myCol.Index ' セルの座標を使用して、セルに値を割り当てます。 flex(1, colIndex) = "東京都港区" ' 列名を使用して、値を取得します。 MessageBox.Show ("住所は " &amp; fg(1, "住所").ToString() &amp; "です。")</code>
        <code lang="C#">// 列を作成し、名前を割り当て、新しいインデックスを取得します。 Column myCol = flex.Cols.Add(); myCol.Name = "住所"; myCol.DataType = typeof(string); int colIndex = myCol.Index; // セルの座標を使用して、セルに値を割り当てます。 flex[1, colIndex] = "東京都港区"; // 列名を使用して、値を取得します MessageBox.Show ("住所は " + fg[1, "住所"].ToString() + "です。");</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Item(System.Int32,System.String)">
      <summary>グリッドセル内のデータを取得または設定します。</summary>
      <remarks>
        <para>グリッドセルに格納されたデータを取得したり、設定したりするために使用できるインデクサの１つです。</para>
        <para>行および列のインデックスを使用するか、行のインデックスと列名を使用して、セルのインデックスを作成できます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowResizing">
      <summary>ユーザーがマウスを使用して行および列をサイズ変更できるかどうかを取得または設定します。</summary>
      <remarks>
        <para>行または列をサイズ変更するには、グリッドの固定領域内で行間または列間の境界線近くにマウスポインタを置きます。マウスポインタがサイズ変更ポインタに変わるので、行または列の境界線をドラッグして行の高さまたは列の幅を変更します。</para>
        <para>列のグループ（最初の行から最後の行まで）を選択した場合は、その列の１つをサイズ変更すると、選択したすべての列がサイズ変更されます。行の場合も同様です。</para>
        <para>列をサイズ変更できる場合は、サイズ変更領域をダブルクリックすると、自動的に最も長いエントリの幅に合わせて列がサイズ変更されます。</para>
        <para>高さ０の行と幅０の列をユーザーがサイズ変更することはできません。サイズ変更が可能なまま、行または列のサイズをできるだけ小さくするには、高さまたは幅を０ではなく１ピクセルに設定してください。</para>
        <para>
          サイズ変更の前には、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeRow" />および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeColumn" />イベントが発生します。これを使用して、特定の行または列のサイズ変更を抑止できます。サイズ変更の後には、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeRow" />および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeColumn" />イベントが発生します。これを使用して、ユーザーのアクションを確認したり、表示を更新することができます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFreezing">
      <summary>ユーザーがマウスを使用して行および列を静止できるかどうかを取得または設定します。</summary>
      <remarks>
        <para>静止セルは、ユーザーによるコントロールのスクロール時に画面に残ります（固定セルと同じ）が、固定セルと違い、選択や編集が可能です（スクロール可能なセルと同じ）。静止セルのスタイルはStyles.Frozenを使用して描画されます。</para>
        <para>行（列）を静止させるには、静止領域の端近くをマウスでポイントしてください。ポイントすると、マウスポインタが「静止」ポインタ（南京錠の形）に切り替わって、ユーザーは静止領域の境界線を新しい行（列）までドラッグできます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowDragging">
      <summary>ユーザーがマウスを使用して行および列をドラッグできるかどうかを取得または設定します。</summary>
      <remarks>
        <para>行のドラッグは、非連結モードでは常にサポートされます。</para>
        <para>連結モードでは、行のドラッグが機能しない場合があります。データソースによっては、行の絶対位置を指定できない場合があるからです。特に、 ADO.NET DataTable オブジェクトは行のドラッグをサポートしていません。</para>
        <para>列のドラッグは、すべてのデータソースでサポートされています。</para>
        <example>
          <para>
            行や列の
            <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowDragging" />プロパティをfalseに設定すると、特定行または列のドラッグを禁止できます。たとえば、次のようになります。
          </para>
          <code lang="VB.NET">flex.AllowDragging = AllowDraggingEnum.Columns flex.Cols(2).AllowDragging = False</code>
          <code lang="C#">flex.AllowDragging = AllowDraggingEnum.Columns; flex.Cols[2].AllowDragging = false;</code>
        </example>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.HighLight">
      <summary>選択されたセルを強調表示するかどうかを取得または設定します。</summary>
      <remarks>
        強調表示されたセルの外観は、
        <b>Styles.Highlight</b>プロパティを変更してカスタマイズできます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.FocusRect">
      <summary>表示するフォーカス矩形の種類を取得または設定します。</summary>
      <remarks>
        <para>
          フォーカス矩形を描画する場合、現在のセルは、
          <b>Styles.Focus</b>スタイルを使用して描画されます。これは、デフォルトでは、一般的なスクロール可能なセルの外観になります（ほとんどのスプレッドシートやグリッドと同様）。
        </para>
        <para>
          フォーカス矩形を非表示にした場合（
          <see cref="F:C1.Win.C1FlexGrid.FocusRectEnum.None" />設定を使用）、現在のセルは、
          <b>Styles.Highlight</b>スタイルを使用して描画されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing">
      <summary>ユーザーがグリッドの内容を編集できるかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          <b>AllowEditing</b>を false に設定すると、グリッド全体の編集が無効になります。
        </para>
        <para>
          いくつかの行または列の編集を有効にするには、グリッドの
          <b>AllowEditing</b>を true に設定し、編集を無効にする行または列の
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowEditing" />プロパティを false に設定します。たとえば、２列目のみを編集禁止にするには、次のようになります。
        </para>
        <para></para>
        <code lang="VB.NET">flex.AllowEditing = True flex.Cols(2).AllowEditing = False</code>
        <code lang="C#">flex.AllowEditing = true; flex.Cols[2].AllowEditing = false;</code>
        <para>
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントを処理し、 Cancel イベントパラメータラメータを true に設定することで、特定のセルの編集を無効にすることもできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowButtons">
      <summary>セルにいつコンボボタンを表示するかを取得または設定します。</summary>
      <remarks>
        <para>
          デフォルトでは、グリッドのセルにフォーカスがある場合にのみ、セルに編集ボタンが表示されます。これは、
          <see cref="T:System.Windows.Forms.PropertyGrid" />コントロールの動作と同じです。
        </para>
        <para>
          <b>ShowButtons</b>を
          <see cref="F:C1.Win.C1FlexGrid.ShowButtonsEnum.Always" />に設定した場合、グリッドのセルにフォーカスがない場合でも、リストが関連付けられているすべてのセルにボタンが表示されます。
        </para>
        <para>
          セルにリストを関連付ける方法については、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboList" />、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ComboList" />、および
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataMap" />プロパティを参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCursor">
      <summary>グリッドの最初の固定列に DB 形式のカーソルを表示するかどうかを取得または設定します。</summary>
      <remarks>
        <para>カレント行の固定列上に、レコードセレクタのイメージを表示するかどうかを指定します。レコードセレクタは、小さい三角形の形状でAccessやほとんどのデータベースグリッドが使用しているのと同じです。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowSort">
      <summary>ソートされている列のヘッダにソートグリフ（三角形）を表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowSortPosition">
      <summary>列ヘッダーセル内のソートグリフの位置を判定する値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowErrors">
      <summary>グリッドのセルと行にエラー情報を表示するかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティを true に設定すると、グリッドのセルと行にエラー情報が表示されます。エラー情報は、セルまたは行ヘッダにエラーアイコンとして表示されます。エラーアイコン上にマウスポインタを移動すると、ツールチップにエラーの説明が表示されます。</para>
        <para>
          エラー情報は、
          <see cref="T:System.ComponentModel.IDataErrorInfo" />インタフェースを実装するデータソースから直接提供される場合があります。たとえば、 DataTable クラスは、このインタフェースを実装します。
        </para>
        <para>
          グリッドが
          <see cref="T:System.ComponentModel.IDataErrorInfo" />をサポートしていないデータソースに連結されている場合は、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellErrorInfo" />および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetRowErrorInfo" />のイベントを使用してエラー情報を提供できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCellLabels">
      <summary>内容の一部しか表示されていないセルにラベルを表示するかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowSorting">
      <summary>ユーザーがマウスを使用して列をソートできるかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          グリッドが連結モードで使用されている場合は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />オブジェクトによってソートが実行されます。データソースオブジェクトがソートをサポートしていない場合、このプロパティは無効です。
        </para>
        <para>
          非連結モードの場合は、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用してデータをソートすることもできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ExtendLastCol">
      <summary>グリッドがコントロールいっぱいに収まるように最後の列を拡大するかどうかを取得または設定します。</summary>
      <remarks>
        このプロパティは、描画だけに影響します。最後の列の
        <see cref="P:C1.Win.C1FlexGrid.Column.Width" />プロパティは変更されません。印刷（プレビュー）時は
        <see cref="P:C1.Win.C1FlexGrid.GridPrinter.PrintGridFlags" />列挙型で指定する印刷オプションに制御されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row">
      <summary>カーソルを含む行を取得または設定します。</summary>
      <remarks>
        <para>
          <b>Row</b>および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティを使用して、現在のセルを設定したり、現在のセルが含まれる行または列を見つけます。行には上から順に、列には左から順に０から番号が付けられます。
        </para>
        <para>
          <b>Row</b>プロパティは、選択範囲を表示しない場合は -1 、固定行内のセルを選択する場合は ０～ Rows.Fixed-1 の値、スクロール可能な行内のセルを選択する場合は Rows.Fixed ～ Rows.Count-1 の値に設定されます。
        </para>
        <para>
          Row および Col プロパティを設定すると、選択範囲が自動的に１つのセルに縮小され、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティがリセットされます。ブロック選択範囲を指定するには、 Row および Col を設定してから、 RowSel および ColSel を設定する必要があります。または、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用すると、１つのステートメントで任意の範囲を選択できます。
        </para>
        <para>
          Row および Col プロパティを設定しても、現在のセルの表示は保証されません。現在のセルを表示するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col">
      <summary>現在のセルを含む列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティを使用して、現在のセルを設定したり、現在のセルが含まれる行または列を見つけます。行には上から順に、列には左から順に０から番号が付けられます。
        </para>
        <para>
          <b>Col</b>プロパティは、選択範囲を表示しない場合は -1 、固定列内のセルを選択する場合は ０～ Cols.Fixed-1 の値、スクロール可能な列内のセルを選択する場合は
          <b>Cols.Fixed</b>～
          <b>Cols.Count - 1</b>の値に設定されます。
        </para>
        <para>
          <b>Row</b>および
          <b>Col</b>プロパティを設定すると、選択範囲が自動的に１つのセルに縮小され、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティがリセットされます。ブロック選択範囲を指定するには、
          <b>Row</b>および
          <b>Col</b>を設定してから、
          <b>RowSel</b>および
          <b>ColSel</b>を設定する必要があります。または、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用すると、１つのステートメントで任意の範囲を選択できます。
        </para>
        <para>
          <b>Row</b>および
          <b>Col</b>プロパティを設定しても、現在のセルの表示は保証されません。現在のセルを表示するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel">
      <summary>現在の選択範囲の最後の行を取得または設定します。</summary>
      <remarks>
        <para>
          <b>RowSel</b>および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティを使用して、選択範囲を変更したり、現在選択されているセルを判定することができます。行には上から順に、列には左から順に０から番号が付けられます。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティを設定すると、選択範囲が自動的に１つのセルに縮小され、 RowSel および ColSel プロパティがリセットされます。したがって、ブロック選択範囲を指定するには、 Row および Col を設定してから、 RowSel および ColSel を設定する必要があります。または、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用すると、１つのステートメントで範囲を選択できます。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.SelectionMode" />プロパティが
          <see cref="F:C1.Win.C1FlexGrid.SelectionModeEnum.ListBox" />に設定されている場合は、個別の行オブジェクトの
          <b>Row.Selected</b>プロパティを使用して、行を選択したり選択解除する必要があります。
        </para>
        <para>
          範囲が選択されている場合、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />の値は、
          <b>RowSel</b>より大きいことも小さいこともあります。また、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />の値は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />より大きいことも小さいこともあります。これは、これらの範囲でループを実行する場合に不便です。このような場合は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Selection" />プロパティを使用して、正規化された
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト（ r1 &lt;= r2 、 c1 &lt;= c2 になる）を取得できます。
        </para>
        <para>
          サンプルについては、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />プロパティを参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel">
      <summary>現在の選択範囲の最後の列を取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />および
          <b>ColSel</b>プロパティを使用して、選択範囲を変更したり、現在選択されているセルを判定することができます。行には上から順に、列には左から順に０から番号が付けられます。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />プロパティを設定すると、選択範囲が自動的に１つのセルに縮小され、
          <b>RowSel</b>および
          <b>ColSel</b>プロパティがリセットされます。したがって、ブロック選択範囲を指定するには、
          <b>Row</b>および
          <b>Col</b>を設定してから、
          <b>RowSel</b>および
          <b>ColSel</b>を設定する必要があります。または、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Select(C1.Win.C1FlexGrid.CellRange,System.Boolean)" />メソッドを使用すると、１つのステートメントで範囲を選択できます。
        </para>
        <para>
          範囲が選択されている場合、
          <b>Row</b>の値は、
          <b>RowSel</b>より大きいことも小さいこともあります。また、
          <b>Col</b>の値は、
          <b>ColSel</b>より大きいことも小さいこともあります。これは、これらの範囲でループを実行する場合に不便です。このような場合は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Selection" />プロパティを使用して、正規化された
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト（ r1 &lt;= r2 、 c1 &lt;= c2 になる）を取得できます。
        </para>
      </remarks>
      <example>
        <para>次のコードは、現在の選択範囲にあるセルをループ処理します。</para>
        <code lang="VB.NET">Dim rg As CellRange = flex.Selection For r As Integer = rg.r1 To rg.r2 For c As Integer = rg.c1 To rg.c2 Console.WriteLine("{0}行{1}列目：{2}", r, c, flex(r, c)) Next Next</code>
        <code lang="C#">CellRange rg = flex.Selection; for (int r = rg.r1; r &lt;= rg.r2; r++) for (int c = rg.c1; c &lt;= rg.c2; c++) Console.WriteLine("{0}行{1}列目：{2}", r, c, flex[r, c]);</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Rows">
      <summary>
        グリッド内の
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />オブジェクトのコレクションを取得します。
      </summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Rows" />プロパティは、グリッドを構成する行のリストへの参照を返します。この参照を使用して、行を追加、削除、移動、およびカウントできます。このコレクションに対して実行できる操作の詳細については、
          <see cref="T:C1.Win.C1FlexGrid.RowCollection" />オブジェクトを参照してください。
        </para>
        <para>このプロパティは読み取り専用です。行コレクションは、グリッドによって自動的に作成および管理されます。</para>
        <para>
          <b>アップグレードに関するメモ :</b>VSFlexGrid ActiveX コントロールでは、 Rows および FixedRows プロパティがグリッド内の行および固定行の数に対応していました。C1FlexGrid では、 Rows.Count および Rows.Fixed を使用してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Cols">
      <summary>
        グリッド内の
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトのコレクションを取得します。
      </summary>
      <remarks>
        <para>
          <b>Cols</b>プロパティは、グリッドを構成する列のリストへの参照を返します。この参照を使用して、列を追加、削除、移動、およびカウントできます。このコレクションに対して実行できる操作の詳細については、
          <see cref="T:C1.Win.C1FlexGrid.ColumnCollection" />オブジェクトを参照してください。
        </para>
        <para>このプロパティは読み取り専用です。列コレクションは、グリッドによって自動的に作成および管理されます。</para>
        <para>
          <b>アップグレードに関するメモ :</b>VSFlexGrid ActiveX コントロールでは、
          <b>Cols</b>および
          <b>FixedCols</b>プロパティがグリッド内の列および固定列の数に対応していました。C1FlexGrid では、代わりに
          <b>Cols.Count</b>および
          <b>Cols.Fixed</b>を使用してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol">
      <summary>スクロール可能な領域に表示されている最初の列を取得または設定します。</summary>
      <remarks>
        <para>
          <b>LeftCol</b>プロパティを設定すると、グリッドが水平方向にスクロールして、指定した列が表示されている左端の列になります。これは、１つのグリッドをスクロールすると他のグリッドもスクロールされるように、複数のグリッドを同期する場合に便利です。垂直にスクロールするには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />プロパティを使用します。
        </para>
        <para>
          このプロパティを設定する場合、設定可能な最大の列番号は、列の総数から表示画面に入る列の数を引いた数になります。
          <b>LeftCol</b>をこれより大きな値に設定しようとすると、設定可能な最大値に設定されます。エラーは発生しません。
        </para>
        <para>
          <b>LeftCol</b>および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />プロパティから返される値が、部分的に表示されている行または列に対応している場合があります。
        </para>
        <para>
          セル単位でスクロールするには、
          <b>LeftCol</b>および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />プロパティを使用します。グリッドをピクセル単位でスクロールするには、
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを使用します。
        </para>
        <para>
          特定のセルを表示するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow">
      <summary>スクロール可能な領域に表示されている最初の行を取得または設定します。</summary>
      <remarks>
        <para>
          <b>TopRow</b>プロパティを設定すると、グリッドが垂直方向にスクロールして、指定した行が表示されている上端の行になります。これは、１つのグリッドをスクロールすると他のグリッドもスクロールされるように、複数のグリッドを同期する場合に便利です。水平にスクロールするには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />プロパティを使用します。
        </para>
        <para>
          このプロパティを設定する場合、設定可能な最大の行番号は、行の総数から表示画面に入る行の数を引いた数になります。
          <b>TopRow</b>をこれより大きな値に設定しようとすると、設定可能な最大値に設定されます。エラーは発生しません。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />および
          <b>TopRow</b>プロパティから返される値が、部分的に表示されている行または列に対応している場合があります。
        </para>
        <para>
          セル単位でスクロールするには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />および
          <b>TopRow</b>プロパティを使用します。グリッドをピクセル単位でスクロールするには、
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを使用します。
        </para>
        <para>
          特定のセルを表示するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.RightCol">
      <summary>スクロール可能な領域内の表示されている最後の列を取得します。</summary>
      <remarks>
        <para>返されるインデックスは、一部しか表示されていない列の場合もあります。</para>
        <para>
          このプロパティは読み取り専用です。グリッドの内容をスクロールする方法については、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />、および
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを参照してください。
        </para>
        <para>
          セルを表示するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.BottomRow">
      <summary>スクロール可能な領域内の表示されている最後の行を取得します。</summary>
      <remarks>
        <para>返されるインデックスが、一部しか表示されていない行に対応している場合があります。</para>
        <para>
          このプロパティは読み取り専用です。グリッドの内容をスクロールする方法については、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />、および
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを参照してください。
        </para>
        <para>
          セルを表示するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ShowCell(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.SelectionMode">
      <summary>グリッドの選択動作を取得または設定します。</summary>
      <remarks>
        <para>
          ほとんどの選択モードでは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Selection" />プロパティを使用して現在の選択範囲を取得できます。
        </para>
        <para>
          ただし、
          <b>SelectionMode</b>が
          <see cref="F:C1.Win.C1FlexGrid.SelectionModeEnum.ListBox" />に設定されている場合は、選択範囲が連続しない行で構成される場合があります。この場合は、
          <b>Row.Selected</b>プロパティを使用して行ごとの選択状態を確認するか、
          <b>Rows.Selected</b>プロパティを使用して選択されている行のコレクションを取得できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Selection">
      <summary>選択範囲を正規化された形式で取得します。</summary>
      <remarks>
        <para>
          返される範囲は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RowSel" />、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ColSel" />の各プロパティで定義される現在の選択範囲に対応します。範囲は正規化され、 r1 &lt;= r2 および c1 &lt;= c2 になります。これにより、選択範囲のループ処理が容易になります。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">Dim total As Integer = 0 ' 選択範囲を取得します。 Dim rg As CellRange = flex.Selection Dim r, c As Integer ' 選択範囲内をループして合計値を出力します。 For r = rg.r1 To rg.r2 For c = rg.c1 To rg.c2 total += Integer.Parse(flex(r, c)) Next Next Console.WriteLine("合計: {0}", total)</code>
        <code lang="C#">int total = 0; // 選択範囲を取得します。 CellRange rg = fg.Selection; // 選択範囲内をループして合計値を出力します。 for (int r = rg.r1; r &lt;= rg.r2; r++) for (int c = rg.c1; c &lt;= rg.c2; c++) total += (int)fg[r,c]; Console.WriteLine("合計: {0}", total);</code>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.CursorCell">
      <summary>
        座標 (
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />,
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Col" />) にあるセルを含む
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを取得します。
      </summary>
      <remarks>
        選択範囲全体の
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを取得するには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Selection" />プロパティを使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Styles">
      <summary>グリッドで定義されているセルスタイルのコレクションを取得します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Styles" />プロパティを使用して、現在グリッドで定義されているスタイルのリストへの参照を取得できます。この参照を使用して、スタイルを追加、削除、およびカウントできます。このコレクションに対して実行できる操作の詳細については、
          <see cref="T:C1.Win.C1FlexGrid.CellStyleCollection" />クラスリファレンストピックを参照してください。セルの書式設定の詳細については、
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />のリファレンストピックを参照してください。
        </para>
        <para>このプロパティは読み取り専用です。コレクションは、グリッドによって自動的に作成および管理されます。</para>
        <para>
          <b>アップグレードに関するメモ :</b>VSFlexGrid ActiveX コントロールには、グリッドの表示方法に影響する多くのプロパティがありました（ BackColor 、 BackColorAlternate 、 BackColorBkg 、 BackColorFixed 、 BackColorFrozen 、 BackColorSel など）。C1FlexGrid コントロールでは、これらすべてのプロパティが
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトのコレクションに置き換えられています。これにより、オブジェクトモデルがよりシンプルで一貫性が高く、さらに強力になります。組み込みスタイルを変更したり、カスタムスタイルを定義して行、列、または任意のセル範囲に割り当てることができます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch">
      <summary>ユーザーの入力に合わせてエントリを検索してカーソルを移動するかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          <b>AutoSearch</b>をオンにした場合、グリッドは、ユーザーの入力に合わせて現在の列内を検索します。自動的にカーソルが移動され、
          <b>Styles.Search</b>スタイルを使用して一致項目が強調表示されます。この検索では、大文字小文字は区別されません。ユーザーが［ Esc ］キーを押すか、マウスまたはカーソルキーを使用して選択範囲を移動すると、検索は取り消されます。
        </para>
        <para>
          約１秒間ユーザーの入力がないと、検索バッファがリセットされます。この時間は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearchDelay" />プロパティを設定することで変更できます。
        </para>
        <para>
          <b>AutoSearch</b>をオンにし、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />を true に設定している場合、ユーザーは、［ Enter ］、［ Space ］、または［ F2 ］キーを押してセルの編集を開始する必要があります。その他のキーは検索に使用されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearchDelay">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch" />バッファがリセットされるまでの遅延時間（秒）を取得または設定します。
      </summary>
      <remarks>
        詳細については、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch" />プロパティを参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.KeyActionEnter">
      <summary>ユーザーが［ Enter ］キーを押すと実行されるアクションを取得または設定します。</summary>
      <remarks>
        デフォルトでは、ユーザーが［ Enter ］キーを押すと、表示されている次の行に選択範囲が移動します。グリッドが編集可能な場合は、［ Enter ］キーを押すと、グリッドが編集モードに入り、編集モードで［ Enter ］キーを押すと、カーソルが下に移動します。なお、
        <b>KeyActionEnter</b>プロパティでは、
        <see cref="F:C1.Win.C1FlexGrid.KeyActionEnum.MoveAcrossOut" />の設定は有効になりません。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.KeyActionTab">
      <summary>ユーザーが［ Tab ］キーを押すと実行されるアクションを取得または設定します。</summary>
      <remarks>
        デフォルトでは、グリッドは［ Tab ］キーを無視します。［ Tab ］キーはフォームによって処理され、フォーカスがタブオーダーの次のコントロールに移動します。
        <b>KeyActionTab</b>プロパティを
        <see cref="F:C1.Win.C1FlexGrid.KeyActionEnum.None" />以外の値に設定した場合、グリッドは［ Tab ］キーをトラップし、これをセル間の移動に使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonImage">
      <summary>セルボタンで使用する画像を取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティを使用して、セルボタンの外観をカスタマイズできます。セルボタンの作成および処理方法の詳細については、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick" />イベントを参照してください。
        </para>
        <para>
          グリッド内のすべてのセルボタンで１つの画像を使用する場合は、その画像を設計時に
          <b>CellButtonImage</b>プロパティに割り当てます。編集されている行、列、またはセルに合わせて画像を変更するには、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントに応答して画像を設定します。
        </para>
        <para>セルボタンに使用する画像は、ボタン内に収まるサイズである必要があります。画像が大きすぎる場合は切り詰められます。また、画像の背景部分にボタンの表面が表示されるように、透過画像を使用する必要があります。最適な結果を得るには、小さなアイコン（ 16 × 16 ピクセル）を使用し、そのアイコンの左上 12 × 12 ピクセルの四角形内に画像を描画します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.MouseRow">
      <summary>カーソルが置かれている行のインデックスを取得します。</summary>
      <remarks>
        <para>
          <b>MouseRow</b>および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.MouseCol" />プロパティは、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントを処理して、独自のマウス処理を行う場合に便利です。また、選択範囲を変更しないマウスイベントを処理する場合や、グリッドの固定領域のクリックを検出する場合にも使用できます。
        </para>
        <para>これらのプロパティは、ユーザーが選択範囲内にマウスを移動したときにヘルプ情報やツールチップを表示したり、 OLE オブジェクトのドラッグ＆ドロップ操作を手作業で実装するためによく使用されます。</para>
        <para>
          マウスが行または列の上にない場合、see cref="!:MouseRow"/&gt; および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.MouseCol" />は -1 を返します。
        </para>
        <para>
          ヒットテスト情報の詳細を取得するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.MouseCol">
      <summary>カーソルが置かれている列のインデックスを取得します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.MouseRow" />および
          <b>MouseCol</b>プロパティは、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントを処理して、独自のマウス処理を行う場合に便利です。また、選択範囲を変更しないマウスイベントを処理する場合や、グリッドの固定領域のクリックを検出する場合にも使用できます。
        </para>
        <para>これらのプロパティは、ユーザーが選択範囲内にマウスを移動したときにヘルプ情報やツールチップを表示したり、 OLE オブジェクトのドラッグ＆ドロップ操作を手作業で実装するためによく使用されます。</para>
        <para>
          マウスが行または列の上にない場合、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.MouseRow" />および
          <b>MouseCol</b>は -1 を返します。
        </para>
        <para>
          ヒットテスト情報の詳細を取得するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Redraw">
      <summary>グリッドの内容を描画するかどうかを取得または設定します。</summary>
      <remarks>
        <b>Redraw</b>プロパティを使用して、グリッドのパフォーマンスを最適化します。大規模な変更を行う場合は、このプロパティを false に設定して、再描画を保留しておきます。変更が完了したら、 true に戻します。これにより、画面のちらつきが減り、パフォーマンスも向上します。行が追加されるたびに範囲を再計算し、スクロールバーを更新する必要があるため、特にグリッドに大量の行を追加する場合は、この最適化が役立ちます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DrawMode">
      <summary>
        コントロールが
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを発生するかどうかを取得または設定します。
      </summary>
      <remarks>
        <para>
          このプロパティを
          <see cref="F:C1.Win.C1FlexGrid.DrawModeEnum.OwnerDraw" />に設定すると、セルの描画が必要になるたびに、グリッドは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを発生します。このイベントを処理して、各セルの描画方法をカスタマイズできます。セルの内容やスタイルを変更したり、ユーザーが描画を引き受けて独自の処理を行うことができます。
        </para>
        <para>
          例と詳細については、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DoubleBuffer">
      <summary>画面のちらつきを減らすために、描画時にオフスクリーンバッファを使用するかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティはデフォルトで true に設定されており、変更する必要はほとんどありません。</para>
        <para>
          <b>DoubleBuffer</b>を false に設定すると、ターミナルサーバーソフトウェアで実行されているアプリケーションのパフォーマンスが向上する場合があります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipSeparators">
      <summary>クリップ文字列の行および列区切りとして使用する文字を取得または設定します。</summary>
      <remarks>
        詳細とサンプルについては、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Clip" />プロパティを参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Clip">
      <summary>選択範囲の内容を取得または設定します。</summary>
      <remarks>
        <para>
          <b>Clip</b>プロパティに割り当てられる（または返される）文字列には、複数のセルが含まれる場合があります。デフォルトでは、タブ文字（\t または vbTab）が列の区切り、改行文字（\r または vbCr）が行の区切りを示します。また、ラインフィード（\n または vbLf）を使用してセル内の文字列を改行します。
        </para>
        <para>
          デフォルトの行および列区切りは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipSeparators" />プロパティを使用して変更できます。
        </para>
        <para>
          <b>Clip</b>プロパティに文字列を割り当てた場合は、選択されているセルだけが影響を受けます。クリップ文字列に記述されているセルより選択領域内のセルの方が多い場合は、余分なセルが無視されます。選択領域内のセルよりクリップ文字列に記述されているセルの方が多い場合は、クリップ文字列の余分な部分が無視されます。
          <b>Clip</b>文字列内のエントリを空にすると、既存のセルの内容がクリアされます。
        </para>
        <para>
          任意の範囲のクリップ文字列を取得または設定するには、
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを使用します。
        </para>
      </remarks>
      <example>
        <para>次のコードは、テキストを２行２列の選択領域に挿入します。</para>
        <code lang="VB.NET">' クリップ文字列を作成します（”r1c2”はセル内で改行）。 Dim s As String = "r1 c1" &amp; vbTab &amp; "r1" &amp; vbLf &amp; "c2" &amp; vbCr &amp; "r2 c1" &amp; vbTab &amp; "r2 c2" ' ２×２の範囲を選択し、クリップ文字列を選択範囲に適用します。 flex.Select(2, 2, 3, 3) flex.Clip = s flex.AutoSizeRow(2)</code>
        <code lang="C#">// クリップ文字列を作成します（”r1c2”はセル内で改行）。 string s = "r1 c1\tr1\nc2\rr2 c1\tr2 c2"; // ２×２の範囲を選択し、クリップ文字列を選択範囲に適用します。 flex.Select(2, 2, 3, 3); flex.Clip = s; flex.AutoSizeRow(2);</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Editor">
      <summary>現在アクティブなセルエディタへの参照を取得または設定します。</summary>
      <remarks>
        <para>
          <b>Editor</b>プロパティは、現在アクティブなセルエディタへの参照を返します。つまり、組み込みエディタ（ TextBox 、 ComboBox 、または DateTimePicker コントロール）、カスタムエディタ、または null （グリッドが編集モードでない場合）を返します。
        </para>
        <para>このプロパティを使用して、プログラムからエディタにアクセスしたり、グリッドが編集モードかどうかを確認することができます。</para>
        <para>
          グリッドの組み込みエディタを使用しない場合は、代わりに他のコントロールを使用できます。それには、外部エディタをグリッドの特定の行または列に関連付けるか、
          <see cref="P:C1.Win.C1FlexGrid.CellStyle.Editor" />プロパティを使用して、
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />に関連付けます。このプロパティは、いつでも取得および設定できます。
        </para>
        <para>
          または、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit" />イベントを処理して、任意のコントロールを直接
          <b>Editor</b>プロパティに割り当てます。グリッドの Editor プロパティは、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit" />イベントの処理中にのみ割り当てることができ、編集モードが終了すると自動的に null にリセットされることに注意してください。
        </para>
        <para>外部エディタとしては任意のコントロールを使用できますが、グリッドと完全に統合するには、外部エディタが IC1EmbeddedEditor インタフェースを実装している必要があります。一部のコントロールは、このインタフェースをネイティブに実装しており、グリッドエディタとして使用するための特別なコードは不要です（ C1Input ライブラリのコントロールなど）。ただし、ほとんどのコントロールでは、少なくとも IC1EmbeddedEditor のいくつかのメソッドを実装する必要があります。</para>
        <para>カスタムエディタのサンプルについては、このヘルプの「カスタムエディタの使用」と「カスタムエディタの作成」を参照してください。また、製品付属の「CustomEditors」サンプルも参照してください。</para>
      </remarks>
      <example>
        <para>
          次のコードは、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetupEditor" />イベントを使用し、２つのプロパティを設定して、現在のエディタをカスタマイズします。
        </para>
        <code lang="VB.NET">Private Sub flex_SetupEditor(・・・ Dim tb As TextBox = CType(flex.Editor, TextBox) If Not tb Is Nothing Then tb.CharacterCasing = CharacterCasing.Upper tb.MaxLength = 12 End If End Sub</code>
        <code lang="C#">private void flex_SetupEditor(・・・ { TextBox tb = flex.Editor as TextBox; if (tb != null) { tb.CharacterCasing = CharacterCasing.Upper; tb.MaxLength = 12; } }</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboList">
      <summary>ドロップダウンエディタで使用する項目のリストを取得または設定します。</summary>
      <remarks>
        <para>
          <b>ComboList</b>プロパティは、セルの編集時に使用するエディタの種類を指定します。テキストボックス、ドロップダウンリスト、ドロップダウンコンボを使用するか、カスタムエディタフォームをポップアップするためのセルボタンを使用できます。
        </para>
        <para>
          <b>ComboList</b>プロパティを使用するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />プロパティを true に設定し、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントで
          <b>ComboList</b>プロパティとして、そのセルで使用する編集の種類を記述した文字列を設定します。次にオプションについて説明します。
        </para>
        <para>
          1. 通常のテキストボックスを使用してセルを編集するには、
          <b>ComboList</b>プロパティとして空の文字列を設定します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.ComboList = String.Empty</code>
        <code lang="C#">flex.ComboList = string.Empty;</code>
        <para>
          2. ドロップダウンリストを使用してセルを編集するには、
          <b>ComboList</b>プロパティとして、使用可能なオプションをパイプ文字で区切った文字列を設定します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.ComboList = "Item 1|Item 2|Item 3"</code>
        <code lang="C#">flex.ComboList = "Item 1|Item 2|Item 3";</code>
        <para>
          3. ドロップダウンコンボを使用してセルを編集するには、
          <b>ComboList</b>プロパティとして、使用可能なオプションをパイプ文字（|）で区切り、先頭にパイプ文字を付けた文字列を設定します。次に例を示します。
        </para>
        <code lang="VB.NET">flex.ComboList = "|Item 1|Item 2|Item 3"</code>
        <code lang="C#">flex.ComboList = "|Item 1|Item 2|Item 3";</code>
        <para>
          4. セルボタンを表示するには、
          <b>ComboList</b>プロパティとして省略符号（"..."）を含む文字列を設定します。セルボタンは通常のプッシュボタンの外観で、キャプションには省略符号（"..."）が表示され、セルの右側に配置されます。ユーザーがこのセルボタンをクリックすると、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick" />イベントが発生します。この場合、ユーザーはセルの内容を直接編集できません。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.ComboList = "..."</code>
        <code lang="C#">flex.ComboList = "...";</code>
        <para>
          5. 編集可能なセルの横にセルボタンを表示するには、
          <b>ComboList</b>プロパティとして、パイプ記号と省略記号を含む文字列（"|..."）を設定します。この場合は、通常のセルボタンが表示されますが、ユーザーがセルの内容を直接編集することもできます。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.ComboList = "|..."</code>
        <code lang="C#">flex.ComboList = "|...";</code>
        <para>
          <b>ComboList</b>プロパティは、同じ列内の異なる行に異なるデータ型が含まれる場合（たとえば、 PropertyGrid などのコントロール）に特に役立ちます。この場合は、
          <b>ComboList</b>プロパティを使用し、現在の行に基づいて編集の種類を調整できます。
        </para>
        <para>
          列内のすべての行のデータ型が同じ場合は、代わりに Column オブジェクトの
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ComboList" />プロパティを使用します。この場合は、編集される列に基づいて自動的にリストが選択されるため、イベントを処理する必要はありません。
        </para>
        <para>
          <b>ComboList</b>では、文字列のリストだけを指定できることに注意してください。セルには、これらの文字列が格納されて表示されます。特定のデータ型を格納し、そのデータに関連付けられた値を表示する方法については、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataMap" />プロパティを参照してください。
          <b>DataMap</b>プロパティを使用すると、セルに値（顧客 ID など）を格納し、そのデータに関連付けられている文字列（顧客名など）を表示できます。
        </para>
      </remarks>
      <example>
        次のコードは、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントを処理し、１行おきにボタンが表示されるように、
        <b>ComboList</b>プロパティに値を割り当てます。
        <code lang="VB.NET">Private Sub flex_BeforeEdit(・・・ flex.ComboList = String.Empty If e.Row Mod 2 = 0 Then flex.ComboList = "..." End If End Sub</code><code lang="C#">private void flex_BeforeEdit(・・・ { flex.ComboList = string.Empty; if (e.Row % 2 == 0) flex.ComboList = "..."; }</code></example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.EditMask">
      <summary>セルの編集時に使用する入力マスクを取得または設定します。</summary>
      <remarks>
        <para>
          <b>EditMask</b>プロパティは、自動入力の書式設定と検証のための入力マスクを指定します。マスクの構文について次に説明します。この構文は、 Microsoft MaskedEdit ActiveX コントロールや Microsoft Access で使用される構文に似ています。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboList" />プロパティの設定と同様に、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントで
          <b>EditMask</b>プロパティを設定します。
        </para>
        <para>
          同じマスクを使用して列内のすべての値を編集する場合は、列の
          <see cref="P:C1.Win.C1FlexGrid.RowCol.EditMask" />プロパティを使用します。これにより、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントを処理する必要がなくなるため、コードが簡潔になります。
        </para>
        <para>
          ユーザーがマスク付きのセルの編集を完了すると、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit" />イベントが発生します。マスクが正しく入力されていない場合は、
          <paramref name="Cancel" />イベントパラメータが true に設定されます。そのため、通常、ハンドラを実装する必要はありません。デフォルトの動作で、有効なデータだけが入力されることが保証されます。
        </para>
        <para>
          <b>EditMask</b>文字列は、次の記号で構成されます。
        </para>
        <para></para>
        <para>
          <b>ワイルドカード</b>
        </para>
        <para>0 数字</para>
        <para>9 数字またはスペース</para>
        <para># 数字、スペース、または記号</para>
        <para>L 文字</para>
        <para>? 文字またはスペース</para>
        <para>A 文字または数字</para>
        <para>a 文字、数字、またはスペース</para>
        <para>&amp; 任意の文字</para>
        <para></para>
        <para>
          <b>ローカライズされた文字</b>
        </para>
        <para>. ローカライズされた 10 進数区切り</para>
        <para>, ローカライズされた千単位の区切り</para>
        <para>: ローカライズされた時刻区切り</para>
        <para>/ ローカライズされた日付区切り</para>
        <para></para>
        <para>
          <b>コマンド文字</b>
        </para>
        <para>\ 次の文字をリテラルと見なす</para>
        <para>&gt; 文字を大文字に変換</para>
        <para>&lt; 文字を小文字に変換</para>
        <para></para>
        <para>
          <b>プレースホルダの指定</b>
        </para>
        <para>; 次の文字がプレースホルダとして使用されます（デフォルトは下線）。</para>
      </remarks>
      <example>
        <para>次のコードは、ユーザーが電話番号（地域番号はオプション）と州名（大文字）を入力できるように編集マスクを設定します。使用されるプレースホルダはアスタリスク（"*"）です。</para>
        <code lang="VB.NET">' ユーザーに電話番号を入力させるための入力マスクを設定します。 ' ここでは、エリアコードと、大文字５文字による州名を記入できるようにします。 flex.EditMask = "(###) 000-0000 &gt;LLLLL;*"</code>
        <code lang="C#">// ユーザーに電話番号を入力させるための入力マスクを設定します。 // ここでは、エリアコードと、大文字５文字による州名を記入できるようにします。 flex.EditMask = "(###) 000-0000 &gt;LLLLL;*";</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Tree">
      <summary>
        グリッド内のアウトラインツリーの外観を制御する
        <see cref="T:C1.Win.C1FlexGrid.GridTree" />オブジェクトへの参照を取得します。
      </summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />は、データを階層構造にグループ化し、 Microsoft TreeView コントロールと同様に折りたたみ可能なツリーで表示できます。
          <see cref="T:C1.Win.C1FlexGrid.GridTree" />オブジェクトを使用して、アウトラインツリーの位置と外観を指定します。
        </para>
        <para>
          アウトラインの作成の詳細については、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドと
          <see cref="P:C1.Win.C1FlexGrid.Row.IsNode" />プロパティを参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Nodes">
      <summary>
        グリッド上のすべてゼロレベルの
        <see cref="T:C1.Win.C1FlexGrid.Node" />行を含む配列を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataMember">
      <summary>
        グリッドに表示する
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />オブジェクト内の特定リストを取得または設定します。
      </summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />オブジェクトに複数のデータソースが含まれている場合は、
          <b>DataMember</b>プロパティをそれらのソースの１つに設定する必要があります。
        </para>
        <para>
          たとえば、
          <b>DataSource</b>が、Customers／Orders／OrderDetails の３つのテーブルを含む
          <see cref="T:System.Data.DataSet" />である場合は、これらのテーブルの１つを連結先として指定する必要があります。この
          <see cref="T:System.Data.DataSet" />に
          <see cref="T:System.Data.DataTable" />が１つだけが含まれる場合は、
          <b>DataMember</b>プロパティを空の文字列に設定できます。
        </para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetDataBinding(System.Object,System.String)" />メソッドを使用すると、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />および
          <b>DataMember</b>プロパティを同時に設定できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource">
      <summary>グリッドのデータソースを取得または設定します。</summary>
      <remarks>
        <para>
          <see cref="T:System.Collections.IList" />または
          <see cref="T:System.ComponentModel.IListSource" />インタフェースを実装する任意のオブジェクトをデータソースとして使用できます。
        </para>
        <para>特に、ADO.NET データソースとしては、DataTable、DataView、DataSet、および DataViewManager が有効です。</para>
        <para>
          <b>DataSource</b>参照に複数のテーブルが含まれる場合は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataMember" />プロパティに連結先のテーブルを指定する文字列も設定する必要があります。たとえば、
          <b>DataSource</b>が、Customers／Orders／OrderDetails の３つのテーブルを含む
          <b>DataSet</b>または
          <b>DataViewManager</b>である場合は、これらのテーブルの１つを連結先として指定する必要があります。
        </para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SetDataBinding(System.Object,System.String)" />メソッドを使用すると、
          <b>DataSource</b>および
          <b>DataMember</b>プロパティを同時に設定できます。
        </para>
        <para>
          また、別の
          <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />オブジェクトを
          <b>DataSource</b>プロパティに割り当てることもできます。この場合、これらのコントロールは、同じグリッドモデル（データ、表示スタイル、選択範囲など）を共有します。これを使用して、分割表示を実装できます。分割表示は、複数のコントロールが同じデータのそれぞれ別の部分を表示する機能です。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoResize">
      <summary>データのロード時に列幅を自動的に調節するかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティは、コントロールが
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />に連結されている場合に機能します。
        </para>
        <para>
          <b>AutoResize</b>が true に設定されている場合、コントロールは、データソースから新しいデータが読み取られるたびに、最大幅のエントリに合わせて列を自動的にサイズ変更します。
        </para>
        <para>
          データソースに大量の行や列が含まれている場合は、自動的なサイズ変更に時間がかかる場合があります。このような場合は、
          <b>AutoResize</b>を false に設定し、コード内で列幅を設定することを検討してください。
        </para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />メソッドを使用すると、コード内で列幅を調整できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoGenerateColumns">
      <summary>グリッドがデータソースに連結されたときに列を自動的に作成するかどうかを取得または設定します。</summary>
      <remarks>
        デフォルトでは、新しい
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />をグリッドに割り当てると、データソーススキーマを反映して列コレクションがリセットされます。
        <b>AutoGenerateColumns</b>を false に設定すると、既存の列レイアウトが保持されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.SubtotalPosition">
      <summary>ノード行をデータの上または下のどちらに表示するかを取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティは、アウトラインツリーの描画方法を決定します。また、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドが小計行（ノード行）を集計データの上または下のどちらに追加するかを決定します。
        </para>
        <para>このプロパティを変更すると、すべての既存のノードがクリアされます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters">
      <summary>
        グリッドの印刷パラメータを指定する
        <see cref="T:C1.Win.C1FlexGrid.GridPrinter" />オブジェクトを取得します。
      </summary>
      <remarks>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドを使用して、グリッドを印刷したり、文書名、一般的な印刷オプション、ヘッダ／フッタを指定します。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.PrintParameters" />プロパティを使用して、ヘッダとフッタのフォント、ページのマージン、用紙の方向などの詳細オプションを指定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DropMode">
      <summary>ユーザーがドラッグしたデータをコントロールが受け入れることができるかどうかを決定する値を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用すると、コントロールを OLE ドラッグ＆ドロップ操作のターゲットとして使用できます。</para>
        <para>
          <see cref="F:C1.Win.C1FlexGrid.DropModeEnum.None" />（デフォルト値）に設定した場合、コントロールはドロップのターゲットとして動作しません。
        </para>
        <para>
          <see cref="F:C1.Win.C1FlexGrid.DropModeEnum.Manual" />に設定した場合、コントロールは標準のドラッグ＆ドロップイベントを発生します。プログラマは、これらのイベントを処理する必要があります。関連する主なイベントとして、
          <see cref="E:System.Windows.Forms.Control.DragOver" />と
          <see cref="E:System.Windows.Forms.Control.DragDrop" />があります。これらのイベントは、標準の System.Windows.Forms.Control オブジェクトから提供されます。
        </para>
        <para>
          <see cref="F:C1.Win.C1FlexGrid.DropModeEnum.Automatic" />に設定した場合、コントロールは次のアクションを実行して、
          <see cref="E:System.Windows.Forms.Control.DragOver" />および
          <see cref="E:System.Windows.Forms.Control.DragDrop" />イベントを自動的に処理します。
        </para>
        <para>１）データオブジェクトからテキストまたはファイル名形式のデータを取得します。</para>
        <para>２）ユーザーがコントロールの端の近くまでオブジェクトをドラッグしたらスクロールします。</para>
        <para>３）ユーザーがコントロールに有効なデータをドロップしたら、データオブジェクトの内容を貼り付けます。</para>
        <para>
          メモ : このプロパティは、基本
          <see cref="T:System.Windows.Forms.Control" />オブジェクトから提供される
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowDrop" />プロパティを置き換えて拡張したものです。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.DragMode">
      <summary>ユーザーがコントロールからデータをドラッグできるかどうかを決定する値を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用すると、コントロールを OLE ドラッグ＆ドロップ操作のソースとして使用できます。いずれかの自動設定に設定すると、コントロールは次のサービスを提供します。</para>
        <para>１）マウスが選択されているセルまたは範囲の端の近くにあることを検出し、 OLE ドラッグカーソルを表示します。</para>
        <para>２）OLE ドラッグカーソルが表示されているときに、ユーザーがマウスをクリックすると、現在の選択範囲を含むデータオブジェクトのドラッグ操作を開始します。</para>
        <para>
          手動モードの場合は、プログラマが
          <see cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />メソッドを使用してドラッグ＆ドロップ操作を開始する必要があります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew">
      <summary>グリッドの最後のデータ行の後に新しい行テンプレートを表示するかどうかを取得または設定します。</summary>
      <remarks>
        <para>ユーザーが新しい行テンプレートにデータを入力すると、新しい行が自動的にグリッドに追加されます。</para>
        <para>このプロパティは、連結モード（データソースが新しい行の追加をサポートする場合）と非連結モードで機能します。</para>
        <para>このプロパティを true に設定した場合は、 Rows.Count プロパティが新しい行テンプレートを含んだ値を返すことに注意してください。Rows.Count プロパティを設定すると、データ行の数が設定され、新しい行テンプレートが自動的に追加されます。次に例を示します。</para>
        <para></para>
        <code lang="VB.NET">flex.AllowAddNew = True flex.Rows.Count = 10 Console.WriteLine(_flex.Rows.Count)</code>
        <code lang="C#">flex.AllowAddNew = true; flex.Rows.Count = 10; Console.WriteLine(_flex.Rows.Count);</code>
        <para>この例では、"11"（10データ行 + 新しい行テンプレート）を出力します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowDelete">
      <summary>DELキーが押されたとき、選択された行を削除するかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティを true に設定すると、ユーザーは行を選択してDelキーを押すことで、それらの行を削除できます。</para>
        <para>このプロパティは、連結モード（データソースが行の削除をサポートする場合）と非連結モードで機能します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Glyphs">
      <summary>コントロールグリフ（ソート、チェックボックスなどを表示するために使用する画像）のコレクションを取得します。</summary>
      <remarks>
        <para>
          <b>Glyphs</b>プロパティは、
          <see cref="T:C1.Win.C1FlexGrid.GlyphEnum" />型のインデクサを持つ
          <see cref="T:C1.Win.C1FlexGrid.GridGlyphs" />コレクションを返します。このコレクションを使用して、列のソート、アウトライングループの折りたたみ／展開、チェックボックス、カーソル、エラー情報などを示すための画像を取得または設定できます。
        </para>
        <para>メモ : グリフを null に設定すると、デフォルト（組み込み）の画像が復元されます。グリフを不可視にする場合は、 null ではなく、小さなブランク画像に設定してください。</para>
      </remarks>
      <example>
        <para>たとえば、次のコードは、（組み込みの白抜き三角形の代わりに）独自の画像を使用して、グリッドの列のソート順を表示します。</para>
        <code lang="VB.NET">flex.Glyphs(GlyphEnum.Ascending) = imgAscending flex.Glyphs(GlyphEnum.Descending) = imgDescending</code>
        <code lang="C#">flex.Glyphs[GlyphEnum.Ascending] = imgAscending; flex.Glyphs[GlyphEnum.Descending] = imgDescending;</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoClipboard">
      <summary>グリッドがクリップボードキーを処理し、切り取り、コピー、貼り付け、削除の各操作を自動的に実行するかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティを true に設定すると、グリッドはキーボードを監視して、次のクリップボードキーを処理します。</para>
        <para>コピー :［ Ctrl ］+［ Ins ］、［ Ctrl ］+［ C ］</para>
        <para>切り取り :［ Ctrl ］+［ X ］、［ Shift ］+［ Del ］</para>
        <para>貼り付け :［ Ctrl ］+［ V ］、［ Shift ］+［ Ins ］</para>
        <para>削除 :［ Del ］</para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />プロパティが true に設定されている場合にのみ、切り取り、貼り付け、削除の各アクションが実行されます。
        </para>
        <para>
          サポートされているキーの一部だけを処理する場合は、
          <see cref="E:System.Windows.Forms.Control.KeyDown" />イベントのハンドラを追加し、 Handled パラメータを true に設定して、いくつかのキーを無効にします。
        </para>
        <para>自動クリップボード操作は、グリッドデータだけに影響します。スタイルと画像は、コピー、貼り付け、または削除されません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.CustomComparer">
      <summary>グループ化、マージ、検索の各操作を実行するためにグリッドで使用される独自の比較オブジェクトを取得または設定します。</summary>
      <remarks>
        <para>
          グリッドは、セルを比較し、それらの内容が同じかどうかを判定するために使用されるデフォルトの
          <see cref="T:System.Collections.IComparer" />を実装しています。この実装は、値のマージ、グループ化、または検索時に使用されます（
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMerging" />プロパティ、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッド、および
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.FindRow(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)" />メソッドを参照）。
        </para>
        <para>デフォルトの実装は、大文字小文字を区別し、先行および後続の空白が考慮されます。</para>
        <para>
          大文字小文字を区別しない比較または空白のトリミングを使用してセルをマージする場合は、
          <see cref="T:System.Collections.IComparer" />インタフェースを実装するカスタムクラスを記述し、そのインスタンスをグリッドの
          <b>CustomComparer</b>プロパティに割り当てます。
        </para>
        <para>このプロパティを null （ Visual Basic では Nothing ）に設定すると、デフォルトの動作に戻ります。</para>
      </remarks>
      <example>
        次のコードは、組み込みの比較子を
        <see cref="T:System.Collections.CaseInsensitiveComparer" />に置き換えます。これにより、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドは、大文字小文字だけが異なる項目を同じグループにグループ化します。
        <code lang="VB.NET">' 大文字小文字を区別しない比較子を使用します。 flex.CustomComparer = New CaseInsensitiveComparer() ' 大文字小文字を無視してグループを追加します。 flex.Subtotal(AggregateEnum.Sum, 1, 1, 4) ' デフォルトの比較子（大文字小文字を区別する）を復元します。 flex.CustomComparer = Nothing</code><code lang="C#">// 大文字小文字を区別しない比較子を使用します。 flex.CustomComparer = new CaseInsensitiveComparer(); // 大文字小文字を無視してグループを追加します。 flex.Subtotal(AggregateEnum.Sum, 1, 1, 4); // デフォルトの比較子（大文字小文字を区別する）を復元します。 flex.CustomComparer = null;</code></example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.EditOptions">
      <summary>グリッドの編集動作をカスタマイズするためのフラグを取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティのデフォルト値は、
          <see cref="F:C1.Win.C1FlexGrid.EditFlags.All" />です。この値はすべての編集オプションを有効にします。使用可能なオプションのリストは、
          <see cref="T:C1.Win.C1FlexGrid.EditFlags" />列挙型を参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.UseCompatibleTextRendering">
      <summary>テキスト描画が以前のリリースの WinForms と互換性を持つかどうかを指定します。</summary>
      <remarks>
        <para>
          このプロパティは、コントロールが
          <see cref="T:System.Drawing.Graphics" />クラス（以前のバージョンと互換性を持つ）、 または新しい
          <see cref="T:System.Windows.Forms.TextRenderer" />（.NET 2.0 以上で使用可能）を使用して テキストを描画するかどうかを決定します。
        </para>
        <para>
          <see cref="T:System.Windows.Forms.TextRenderer" />クラスは、複雑なスクリプトと Uniscribe API をサポートして、 国際的なアプリケーションにより対応したものになっています。
        </para>
        <para>
          ただし、
          <see cref="T:System.Windows.Forms.TextRenderer" />クラスは、描画速度が従来のメソッドより 約 25% 遅くなります。
        </para>
        <para>両方のモードを試してアプリケーション内の他のコントロールとフォームの外観に一致する モードを選択できます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboBoxEditor">
      <summary>
        現在アクティブな
        <b>ComboBox</b>エディタのプロパティへの簡単アクセスを提供する
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboBoxEditor" />オブジェクトを取得します。
      </summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboBoxEditor" />オブジェクトを使用して、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Editor" />プロパティをキャストせずに、 現在アクティブな
          <b>ComboBox</b>エディタ上のプロパティを取得または設定できます。
        </para>
        <para>
          アクティブなエディタがない場合やエディタが
          <see cref="T:System.Windows.Forms.ComboBox" />でない場合、 これらのプロパティは null または -1 を返して、設定できません。
        </para>
      </remarks>
      <example>
        <para>
          以下のコードは、現在アクティブな
          <b>ComboBox</b>エディタの選択されたインデックスにアクセスするための２つの同等な方法を示します。
        </para>
        <code lang="VB.NET">' ComboBoxEditorプロパティを使用： Console.WriteLine("ComboBoxのインデックス：{0}", flex.ComboBoxEditor.SelectedIndex) ' ComboBoxEditorプロパティを使用しない： If Not flex.Editor Is Nothing Then Dim cb As ComboBox cb = CType(flex.Editor, ComboBox) Console.WriteLine("ComboBoxのインデックス：{0}", cb.SelectedIndex) End If</code>
        <code lang="C#">// ComboBoxEditorプロパティを使用： Console.WriteLine("ComboBoxのインデックス：{0}", flex.ComboBoxEditor.SelectedIndex); // ComboBoxEditorプロパティを使用しない： if (flex.Editor != null) { ComboBox cb; cb = flex.Editor as ComboBox; Console.WriteLine("ComboBoxのインデックス：{0}", cb.SelectedIndex); }</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ScrollOptions">
      <summary>
        グリッドのスクロール動作を指定する
        <see cref="T:C1.Win.C1FlexGrid.ScrollFlags" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ScrollableRectangle">
      <summary>コントロールのスクロール可能な部分を定義する四角形を取得します。</summary>
      <remarks>返される値は、コントロールのクライアント領域から固定およびフリーズされた行と列を引いた値です。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.BackColor">
      <summary>コントロールの背景色を取得または設定します。</summary>
      <remarks>
        これは、スクロール可能なセルの背景を描画するために使用される色です。これは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal" />セルスタイルによっても定義されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ForeColor">
      <summary>コントロールの前景色を取得または設定します。</summary>
      <remarks>
        これは、スクロール可能なセルのテキストを描画するために使用される色です。これは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal" />セルスタイルによっても定義されます。
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowValidating">
      <summary>行がフォーカスを失い、検証する必要があるときに発生します。</summary>
      <remarks>
        <para>
          このイベントは、
          <see cref="E:System.Windows.Forms.Control.Validating" />イベントに似ています。
        </para>
        <para>
          このイベントは、行のすべての値に対する検証を実行するために使用します。 行が検証をパスしない場合は、
          <b>RowColEventHandler.Cancel</b>プロパティを true に設定します。
        </para>
        <para>
          このイベントをキャンセルすると、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowValidated" />イベントは発生せず、 ユーザーがその無効な行から離れることもできません。
        </para>
      </remarks>
    </member>
    <member name="E:C1.Win.C1FlexGrid.C1FlexGridBase.RowValidated">
      <summary>行がフォーカスを失って検証された後に発生します。</summary>
      <remarks>
        <para>
          このイベントは、
          <see cref="E:System.Windows.Forms.Control.Validated" />イベントに似ています。
        </para>
        <para>このイベントは、値の行に対する後処理を実行するために使用します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.SortColumn">
      <summary>グリッドに適用された現在のソートを定義する列への参照を取得します。</summary>
      <remarks>
        <para>
          グリッドは、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを呼び出すか、 ユーザーが列ヘッダをクリックするか、またはグリッドの
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.DataSource" />として 使用されるオブジェクトに直接適用されたソートの結果として、ソートできます。
        </para>
        <para>
          現在のソート方向を決定するには、ソートされる列の
          <see cref="P:C1.Win.C1FlexGrid.Column.Sort" />プロパティを 使用します。
        </para>
        <para>グリッドが現在ソートされていない場合、このプロパティは null を返します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ShowThemedHeaders">
      <summary>コントロールが行ヘッダまたは列ヘッダの表示に XP テーマを使用するかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティは、アプリケーションがテーマ表示されている場合のみ影響します。 アプリケーションにテーマを有効にするには、
          <b>Application.EnableVisualStyles</b>メソッドを呼び出すか、マニフェストファイルを使用します。詳細については、 MSDN を参照してください。
        </para>
        <para>
          <b>BorderStyle</b>プロパティを
          <b>BorderStyleEnum.XpThemes</b>に設定すると、このプロパティは自動的に
          <b>ShowThemedHeadersEnum.Both</b>に設定されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.VisualStyle">
      <summary>グリッド全体の表示スタイルを取得または設定します。</summary>
      <remarks>
        <para>このプロパティを使用することで作成するアプリケーションとグリッドの外観を簡単にマッチさせることができます。</para>
        <para>
          可能な設定は、
          <b>System</b>、
          <b>Custom</b>、
          <b>Office 2007</b>の各配色です。
          <b>Custom</b>の場合、いずれのVisualStyleも使用しません。コントロールはスタイルおよびプロパティにより描画されます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Renderer">
      <summary>
        コントロールの見た目や印象のカスタマイズに使用される
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />を 取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.NewRowWatermark">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew" />プロパティが true に設定されているときに 新しい行テンプレート上に表示される文字列を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipboardCopyMode">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoClipboard" />プロパティが true に設定されているときにクリップボードにコピーされる グリッドの部分を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFiltering">
      <summary>ユーザーがデータをフィルタできるかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティがtrueに設定されている場合、グリッドは列ヘッダ上にフィルタアイコンを表示します。ユーザーはアイコンをクリックして、データに適用されるフィルタを定義することができます。</para>
        <para>
          フィルタが適用されると、グリッドは
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Visible" />プロパティをフィルタに適合しない行を非表示にします。 データソースには、フィルタは適用されません。
        </para>
        <para>
          列の
          <see cref="P:C1.Win.C1FlexGrid.Column.AllowFiltering" />プロパティを設定することで、各列ごとに使用するフィルタのタイプを指定することも可能です。
        </para>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilter" />インタフェースを実装したクラスを作成し、列の
          <see cref="P:C1.Win.C1FlexGrid.Column.Filter" />プロパティにそのクラスのインスタンスを割り当てることで、カスタムフィルタを作成することもできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.IgnoreDiacritics">
      <summary>フィルタが値を比較するときに発音区別符号 （アクセント）を無視するかどうかを判定する値を取得または設定します。</summary>
      <remarks>
        <para>デフォルトでは、値がデータソースに表示されるときにフィルタは値を比較します。 たとえば、文字列 "fac" を含む値を検索する場合、 "factory" は検索されますが "façade" は検索されません。</para>
        <para>このプロパティを true に設定すると、 フィルタは比較を行う前に発音区別符号を除去します。 この場合、文字列 "fac" を検索すると、"factory" と "façade" の両方が返されます。</para>
        <para>このプロパティは、フランス語、スペイン語、ポルトガル語など、 多くのアクセントを含む言語にアプリケーションをローカライズする際に役立ちます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.FilterDefinition">
      <summary>現在のフィルタの状態を含む XML 文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.Language">
      <summary>列フィルタをローカライズするときに使用する言語を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />コントロールの新しいインスタンスを作成します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.GetMergedRange(System.Int32,System.Int32,System.Boolean)">
      <summary>指定されたセルを含むマージされたセル範囲を返します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <param name="clip">範囲をグリッドの可視領域でクリップするかどうか。</param>
      <returns>
        指定されたセルを含む
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </returns>
      <remarks>
        <para>
          セルのマージは、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMerging" />プロパティによって制御されます。
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGrid.GetMergedRange(System.Int32,System.Int32,System.Boolean)" />メソッドを使用して、セルを隣接するセルとマージするかどうかを決定できます。
        </para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGrid.GetMergedRange(System.Int32,System.Int32,System.Boolean)" />メソッドをオーバーライドすると、独自のマージロジックを実装できます。その場合、このメソッドは頻繁に呼び出され、グリッドの外観と動作に影響するため、メソッドの一貫性と効率に留意してください。
        </para>
      </remarks>
      <example>
        <para>次のコードは、選択後に現在のセルをチェックし、それがマージされた範囲の一部であるかどうかを確認します。</para>
        <code lang="VB.NET">Private Sub flex_SelChange(ByVal sender As Object, ByVal e As System.EventArgs) Handles flex.SelChange Dim rg As CellRange rg = flex.GetMergedRange(flex.Row, flex.Col, False) If Not rg.IsSingleCell Then Console.WriteLine("マージセル：{0},{1}-{2},{3}", _ rg.TopRow, rg.LeftCol, rg.BottomRow, rg.RightCol) End If End Sub</code>
        <code lang="C#">private void flex_SelChange(object sender, System.EventArgs e) { CellRange rg = flex.GetMergedRange(flex.Row, flex.Col, false); if (!rg.IsSingleCell) { Console.WriteLine("マージセル：{0},{1}-{2},{3}", rg.TopRow, rg.LeftCol, rg.BottomRow, rg.RightCol); } }</code>次のコードは、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGrid.GetMergedRange(System.Int32,System.Int32,System.Boolean)" />メソッドをオーバーライドして、独自のマージを提供します。
        <code lang="VB.NET">Public Class CustomMerge Inherits C1FlexGrid Public Sub New() ' デフォルトでフリーマージを許可します。 AllowMerging = AllowMergingEnum.Free For r As Integer = 0 To Rows.Count - 1 Rows(r).AllowMerging = True Next r For c As Integer = 0 To Cols.Count - 1 Cols(c).AllowMerging = True Next c End Sub Public Overrides Function GetMergedRange(ByVal row As Integer, ByVal col As Integer, ByVal clip As Boolean) As CellRange ' 範囲 (1,1) ～ (3,3) のセルをマージします。 If row &gt;= 1 And row &lt;= 3 And col &gt;= 1 And col &lt;= 3 Then Return GetCellRange(1, 1, 3, 3) End If ' その他のセルはマージしません。 Return GetCellRange(row, col) End Function End Class</code><code lang="C#">public class CustomMerge : C1FlexGrid { public CustomMerge() { // デフォルトでフリーマージを許可します。 AllowMerging = AllowMergingEnum.Free; for (int r = 0; r &lt; Rows.Count; r++) Rows[r].AllowMerging = true; for (int c = 0; c &lt; Cols.Count; c++) Cols[c].AllowMerging = true; } override public CellRange GetMergedRange(int row, int col, bool clip) { // 範囲 (1,1) ～ (3,3) のセルをマージします。 if (row &gt;= 1 &amp;&amp; row &lt;= 3 &amp;&amp; col &gt;= 1 &amp;&amp; col &lt;= 3 return GetCellRange(1, 1, 3, 3); // その他のセルはマージしません。 return GetCellRange(row, col); } }</code></example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.GetMergedRange(System.Int32,System.Int32)">
      <summary>指定されたセルを含むマージされたセル範囲を返します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>
        指定されたセルを含む
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクト。
      </returns>
      <remarks>このメソッドは、不可視のセルを含む範囲全体を返します。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.Clear">
      <summary>オーバーライドしてマージされた範囲をクリアします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.GetHeaderThemeState(System.Int32,System.Int32)">
      <summary>マウスポインタをセル上で動かしているときの Windows XP テーマの状態を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでホットトラッキング動作をカスタマイズできます。</remarks>
      <param name="row">マウスポインタの下にある行。</param>
      <param name="col">マウスポインタの下にある列。</param>
      <returns>項目の状態を表す整数（２：ホットトラッキング、１：通常）。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.GetCellGlyphs(System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Image@,System.Drawing.Image@,System.Drawing.Image@)">
      <summary>セル内に表示するセルのグリフを取得します。</summary>
      <remarks>このメソッドは内部用です。 これにより、継承クラスでソートグリフの表示をカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="rc">セルの矩形</param>
      <param name="glyphSort">セルコンテンツの上に表示するグリフ。</param>
      <param name="glyphLeft">セルの左側に表示するグリフ。</param>
      <param name="glyphRight">セルの右側に表示するグリフ。</param>
      <returns>グリフがセルに割り当てられた場合は true、その他の場合は false。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.SetDataEdit(System.Int32,System.Int32,System.Object,System.Boolean)">
      <summary>値をセルまたはセル範囲に適用します。</summary>
      <remarks>このメソッドは内部用です。これにより、セルエディタから入力されたデータをセルに適用する方法を 継承クラスでカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="data">セルに適用されるデータ。</param>
      <param name="coerce">データをセルのデータ型に強制的に変換するかどうか。</param>
      <returns></returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.SetCellCheckEdit(System.Int32,System.Int32,C1.Win.C1FlexGrid.CheckEnum)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CheckEnum" />の値をセルまたはセル範囲に適用します。
      </summary>
      <remarks>このメソッドは内部用です。これにより、チェックボックスのデータをセルに適用する方法を 継承クラスでカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="check">セルに適用する値。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.Invalidate(C1.Win.C1FlexGrid.CellRange)">
      <summary>セル範囲を無効にして再描画します。</summary>
      <param name="rg">無効にする範囲。</param>
      <remarks>グリッドは必要に応じて自動的に無効化を実行するため、このメソッドをプログラマが使用することはほとんどありません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.GetCellRectDisplay(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>セル、行、または列の座標を表す矩形を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでセルの形状の計算方法を カスタマイズできます。</remarks>
      <param name="row">行のインデックス（または、列の範囲を取得する場合は -１）。</param>
      <param name="col">列のインデックス（または、行の範囲を取得する場合は -１）。</param>
      <param name="clipHorz">矩形をグリッドのクライアント領域に水平にクリップするかどうか。</param>
      <param name="clipVert">矩形をグリッドのクライアント領域に垂直にクリップするかどうか。</param>
      <returns>
        クライアント座標で行、列、またはセルの表示領域を含み、 スクロール位置を示す
        <see cref="T:System.Drawing.Rectangle" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.GetCellRectEditor(System.Int32,System.Int32)">
      <summary>セルエディタの座標を表す矩形を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでセルの形状の計算方法を カスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <returns>セルエディタの位置決めに使用される矩形。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.StartEditing(System.Int32,System.Int32,System.Char,System.Boolean)">
      <summary>キーの押下に反応してセルの編集を開始します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスで編集プロセスをカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="key">編集プロセスを開始したキー。</param>
      <param name="force">編集可能でないセル（固定セルなど）でも編集を開始するかどうか。</param>
      <returns>編集プロセスが正常に開始された場合は true、その他の場合は false。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.StartEditing(System.Int32,System.Int32,System.Drawing.Point,System.Boolean)">
      <summary>キーの操作に反応してセルの編集を開始します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスで編集プロセスをカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="ptMouse">クライアント座標でのマウスの位置。</param>
      <param name="dblClick">操作がダブルクリックであったかどうか。</param>
      <returns>編集プロセスが正常に開始された場合は true、その他の場合は false。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.IsCellCursor(System.Int32,System.Int32)">
      <summary>セルがカレントセルかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルがカレントセルの場合は、true 。そうでない場合は、false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.IsCellHighlighted(System.Int32,System.Int32)">
      <summary>セルが選択範囲内にあり、強調表示されているかどうかを判別する値を取得します。</summary>
      <param name="row">行インデックス。</param>
      <param name="col">列インデックス。</param>
      <returns>セルが強調表示されている場合は、true 。そうでない場合は、false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.CheckNodeChildren(System.Int32,System.Int32,System.Int32)">
      <summary>行に含まれる子ノードのタイプを示す値を取得します。</summary>
      <remarks>このメソッドは内部用です。これにより、継承クラスでアウトラインツリーをカスタマイズできます。</remarks>
      <param name="row">行のインデックス。</param>
      <param name="col">列のインデックス。</param>
      <param name="level">アウトラインレベル。</param>
      <returns>行に子が含まれない場合は０、通常のデータ行だけが含まれる場合は１、 子ノードが含まれる場合は２、データノードと子ノードが含まれる場合は３。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.DrawRow(System.Windows.Forms.PaintEventArgs,System.Int32)">
      <summary>グリッドの行を表示します。</summary>
      <param name="e">
        行が表示される
        <see cref="T:System.Drawing.Graphics" />オブジェクトを含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
      <param name="row">表示する行のインデックス。</param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.DrawCell(System.Windows.Forms.PaintEventArgs,System.Int32,System.Int32)">
      <summary>グリッドセルを表示します。</summary>
      <param name="e">
        セルが表示される
        <see cref="T:System.Drawing.Graphics" />オブジェクトを含む
        <see cref="T:System.Windows.Forms.PaintEventArgs" />。
      </param>
      <param name="row">セルの行のインデックス。</param>
      <param name="col">セルの列のインデックス。</param>
      <returns>
        ペイントされた最後の列のインデックス（列がマージされている場合は、
        <paramref name="col" />より大きい場合があります）。
      </returns>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.DrawCellImage(System.Drawing.Graphics,System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>グリッドセルを表示します。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />セルが表示されるオブジェクト。
      </param>
      <param name="row">セルの行のインデックス。</param>
      <param name="col">セルの列のインデックス。</param>
      <param name="rcBounds">
        セルの位置を定義する
        <see cref="T:System.Drawing.Rectangle" />。
      </param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.MoveSelection(C1.Win.C1FlexGrid.MoveCursorEnum,System.Boolean)">
      <summary>現在の選択を移動または拡張します。</summary>
      <param name="move">
        カーソルの移動のタイプを指定する
        <see cref="T:C1.Win.C1FlexGrid.MoveCursorEnum" />の値。
      </param>
      <param name="extend">現在の選択を拡張するかどうか。</param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.AutoSizeCols(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)">
      <summary>最大のエントリに合わせて自動的にグリッドの列をサイズ変更します。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />セルのコンテンツの計測に使用されるオブジェクト。
      </param>
      <param name="row1">計測される最初の行のインデックス。</param>
      <param name="col1">計測される最初の列のインデックス。</param>
      <param name="row2">計測される最後の行のインデックス。</param>
      <param name="col2">計測される最初の列のインデックス。</param>
      <param name="extra">最大のエントリに追加する余分のスペース（twip）。</param>
      <param name="flags">
        自動サイズ調整動作を指定する
        <see cref="T:C1.Win.C1FlexGrid.AutoSizeFlags" />の値。
      </param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.AutoSizeRows(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)">
      <summary>最大のエントリに合わせて自動的にグリッドの列をサイズ変更します。</summary>
      <param name="g">
        <see cref="T:System.Drawing.Graphics" />セルのコンテンツの計測に使用されるオブジェクト。
      </param>
      <param name="row1">計測される最初の行のインデックス。</param>
      <param name="col1">計測される最初の列のインデックス。</param>
      <param name="row2">計測される最後の行のインデックス。</param>
      <param name="col2">計測される最初の列のインデックス。</param>
      <param name="extra">最大のエントリに追加する余分のスペース（twip）。</param>
      <param name="flags">
        自動サイズ調整動作を指定する
        <see cref="T:C1.Win.C1FlexGrid.AutoSizeFlags" />の値。
      </param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドの外観をカスタマイズできます。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.OnGridChanged(System.Object,C1.Win.C1FlexGrid.GridChangedEventArgs)">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridChanged" />イベントを発生させます。
      </summary>
      <param name="sender">イベントを起こすオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GridChangedEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.OnScroll(System.Windows.Forms.ScrollBars)">
      <summary>グリッドのコンテンツがスクロールされたときに呼び出されます。</summary>
      <param name="sb">
        スクロール方向を指定する
        <see cref="T:System.Windows.Forms.ScrollBars" />の値。
      </param>
      <remarks>このメソッドは内部用です。これにより、継承クラスでグリッドのスクロール動作をカスタマイズできます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMerging">
      <summary>セルをマージする方法を指定します。</summary>
      <remarks>
        <para>セルをマージすることで同じ情報がグループとして強調され、データを見やすく表示できます。また、 HTML や Microsoft Word を使用して作成できるテーブルと同様に、セルのマージをサポートするグリッドを柔軟に作成できます。</para>
        <para>
          マージされたセルを含むグリッドを作成するには、
          <b>AllowMerging</b>プロパティを
          <see cref="F:C1.Win.C1FlexGrid.AllowMergingEnum.None" />以外の値に設定し、マージする行および列ごとに
          <see cref="P:C1.Win.C1FlexGrid.RowCol.AllowMerging" />プロパティを true に設定します。これらのプロパティを設定すると、同じ内容の隣接するセルが自動的にマージされます。セルの内容が変更されるたびに、グリッドのマージ状態が更新されます。
        </para>
        <para>
          <see cref="F:C1.Win.C1FlexGrid.AllowMergingEnum.Custom" />に設定したカスタムマージでは、
          <see cref="P:C1.Win.C1FlexGrid.MergedRanges" />プロパティを使用してコードでマージします。
        </para>
      </remarks>
      <example>
        <para>次のコードは、列１で同じデータを持つセルをマージします。</para>
        <code lang="VB.NET">flex.AllowMerging = AllowMergingEnum.Free flex.Cols(1).AllowMerging = True ' 列１の値をマージします</code>
        <code lang="C#">flex.AllowMerging = AllowMergingEnum.Free; flex.Cols[1].AllowMerging = true; // 列１の値をマージします</code>
        <para>次のコードは、カスタムマージにより1行1列～2行2列の４つのセルをマージします。</para>
        <code lang="VB.NET">flex.AllowMerging = AllowMergingEnum.Custom Dim cr As C1.Win.C1FlexGrid.CellRange cr = flex.GetCellRange(1, 1, 2, 2) flex.MergedRanges.Add(cr)</code>
        <code lang="C#">flex.AllowMerging = AllowMergingEnum.Custom; C1.Win.C1FlexGrid.CellRange cr; cr = flex.GetCellRange(1, 1, 2, 2); flex.MergedRanges.Add(cr);</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMergingFixed">
      <summary>スクロール可能でないセルをマージする方法を取得または設定します。</summary>
      <remarks>
        <para>
          デフォルトでは、このプロパティは
          <see cref="F:C1.Win.C1FlexGrid.AllowMergingEnum.Default" />に設定されます。 この設定では、固定セルはスクロール可能なセルと同じ設定でマージされます。
        </para>
        <para>このプロパティに別の値を指定した場合は、スクロール可能なセルに使用される設定とは異なるマージモードを、 列ヘッダなどの固定セルに使用できます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGrid.MergedRanges">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMerging" />プロパティが
        <see cref="F:C1.Win.C1FlexGrid.AllowMergingEnum.Custom" />に設定されたときにマージするグリッドセルを決定する
        <see cref="T:C1.Win.C1FlexGrid.CellRangeCollection" />を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AllowResizingEnum">
      <summary>ユーザーがマウスを使用して行および列をサイズ変更できるかどうかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.None">
      <summary>ユーザーは、行および列をサイズ変更できません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.Columns">
      <summary>ユーザーは、マウスを使用して列ヘッダの端をドラッグすることで、列をサイズ変更できます。列ヘッダの端をダブルクリックすると、最大幅のエントリに合わせて列が自動的にサイズ変更されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.Rows">
      <summary>ユーザーは、マウスを使用して行ヘッダの端をドラッグすることで、行をサイズ変更できます。行ヘッダの端をダブルクリックすると、最大高さのエントリに合わせて行が自動的にサイズ変更されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.Both">
      <summary>ユーザーは、マウスを使用して行および列をサイズ変更できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.ColumnsUniform">
      <summary>ユーザーは、マウスを使用してデフォルトの列の幅を変更できます。いずれかの列をサイズ変更すると、特定の幅が割り当てられていないすべての列がサイズ変更されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.RowsUniform">
      <summary>ユーザーは、マウスを使用してデフォルトの行の高さを変更できます。いずれかの行をサイズ変更すると、特定の高さが割り当てられていないすべての行がサイズ変更されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowResizingEnum.BothUniform">
      <summary>ユーザーは、マウスを使用してデフォルトの列の幅または行の高さを変更できます。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AllowFreezingEnum">
      <summary>ユーザーがマウスを使用して行および列をフリーズできるかどうかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFreezingEnum.None">
      <summary>ユーザーは、行および列をフリーズできません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFreezingEnum.Columns">
      <summary>ユーザーは、マウスを使用してフリーズ領域の垂直境界線をドラッグすることで、列をフリーズできます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFreezingEnum.Rows">
      <summary>ユーザーは、マウスを使用してフリーズ領域の水平境界線をドラッグすることで、行をフリーズできます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFreezingEnum.Both">
      <summary>ユーザーは、マウスを使用してフリーズ領域の境界線をドラッグすることで、行および列をフリーズできます。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AllowDraggingEnum">
      <summary>ユーザーがマウスを使用して行および列をドラッグできるかどうかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowDraggingEnum.None">
      <summary>ユーザーは、行および列をドラッグできません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowDraggingEnum.Columns">
      <summary>ユーザーは、マウスを使用して列をドラッグできます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowDraggingEnum.Rows">
      <summary>ユーザーは、マウスを使用して行をドラッグできます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowDraggingEnum.Both">
      <summary>ユーザーは、マウスを使用して行および列をドラッグできます。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AllowSortingEnum">
      <summary>ユーザーがマウスを使用して行および列をソートできるかどうかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowSortingEnum.None">
      <summary>ユーザーは、マウスを使用して列をソートできません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowSortingEnum.SingleColumn">
      <summary>ユーザーは、ヘッダセルをクリックすることで、１つの列をソートできます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowSortingEnum.MultiColumn">
      <summary>ユーザーは、範囲内の右端の列のヘッダセルをクリックすることで、その範囲内の列をソートできます。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.HighLightEnum">
      <summary>選択範囲を強調表示するかどうかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HighLightEnum.Never">
      <summary>選択範囲を強調表示しません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HighLightEnum.Always">
      <summary>選択範囲を常に強調表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HighLightEnum.WithFocus">
      <summary>コントロールにフォーカスがあるときに、選択範囲を強調表示します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.FocusRectEnum">
      <summary>フォーカス矩形の外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FocusRectEnum.None">
      <summary>フォーカス矩形なし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FocusRectEnum.Light">
      <summary>細いフォーカス矩形（１ピクセル幅の点線）を表示します。これはデフォルトの設定です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FocusRectEnum.Heavy">
      <summary>太いフォーカス矩形（２ピクセル幅の点線）を表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FocusRectEnum.Solid">
      <summary>
        実線のフォーカス矩形を表示します。矩形の色は、
        <b>CellStyleCollection.Highlight.BackColor</b>プロパティの値によって決定されます。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FocusRectEnum.Raised">
      <summary>浮き出たフォーカス矩形を表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FocusRectEnum.Inset">
      <summary>くぼんだフォーカス矩形を表示します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AutoSizeFlags">
      <summary>自動サイズ設定を制御するオプションを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSizeFlags.None">
      <summary>デフォルトの動作。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSizeFlags.SameSize">
      <summary>範囲内のすべての行（または列）を同じサイズに設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSizeFlags.IgnoreHidden">
      <summary>不可視の行（または列）を無視して自動サイズ変更します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSizeFlags.IgnoreMerged">
      <summary>マージされたセルを無視して自動サイズ変更します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DrawModeEnum">
      <summary>セルの描画をすべてグリッドによって行うか、独自の描画コードも使用するかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DrawModeEnum.Normal">
      <summary>グリッドセルは、グリッドによって描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DrawModeEnum.OwnerDraw">
      <summary>
        グリッドは、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを発生して、独自のセル描画を可能にします。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DrawCellFlags">
      <summary>グリッドによって描画されるセルの要素を指定します。</summary>
      <remarks>
        <para>この列挙型は、オーナー描画セルをレンダリングするときに使用されます。</para>
        <para>
          <see cref="T:System.Windows.Forms.DrawMode" />プロパティを
          <see cref="F:C1.Win.C1FlexGrid.DrawModeEnum.OwnerDraw" />に設定すると、グリッドは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを発生して、独自のセル描画を可能にします。
        </para>
        <para>
          イベントハンドラに渡される
          <see cref="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs" />パラメータには、標準描画ルーチンを使用してセルの各部をレンダリングするための
          <see cref="M:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.DrawCell(C1.Win.C1FlexGrid.DrawCellFlags)" />メソッドがあります。たとえば、独自の背景を描画したうえ、セルの境界線と内容には標準描画ルーチンを使用できます。
        </para>
        <para>
          サンプルについては、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを参照してください。
        </para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DrawCellFlags.Background">
      <summary>セルの背景を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DrawCellFlags.Border">
      <summary>セル境界線を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DrawCellFlags.Content">
      <summary>セルの内容（テキスト、画像、チェックボックスなど）を描画します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DrawCellFlags.All">
      <summary>すべてのセル要素（背景、境界線、内容）を描画します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ShowButtonsEnum">
      <summary>セルにいつコンボボタンを表示するかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowButtonsEnum.WhenEditing">
      <summary>セルの編集中にのみボタンを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowButtonsEnum.WithFocus">
      <summary>セルにフォーカスがある場合にボタンを表示します。これはデフォルトの設定です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowButtonsEnum.Always">
      <summary>常にボタンを表示します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.EditFlags">
      <summary>グリッドの編集動作をカスタマイズするオプションを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.None">
      <summary>特別な動作はありません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.AutoSearch">
      <summary>ユーザーの入力に合わせてリスト内のエントリを検索します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.CycleOnDoubleClick">
      <summary>ユーザーがセルをダブルクリックすると、リスト内の次の項目に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.MultiCheck">
      <summary>選択範囲内のすべてのチェックボックスを同時に選択または選択解除します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.UseNumericEditor">
      <summary>数値型を編集するときに組み込み数値エディタを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.DelayedCommit">
      <summary>行の変更、またはフォーカスの移動の場合のみデータソースへの変更をコミットします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.ExitOnLeftRightKeys">
      <summary>ユーザーがコンテンツの末尾で右矢印キーを押した場合、またはコンテンツの始めで 左矢印キーを押した場合にエディタを終了します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.EditOnRequest">
      <summary>マウスイベントまたはキーボードイベントにのみ反応して編集モードに入ります。 このフラグを false に設定すると、グリッドは、コントロールがフォーカスされたときか、 ユーザーがカーソルを動かしたときに編集モードに入ります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.EditFlags.All">
      <summary>上記のすべての動作を行います。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ShowThemedHeadersEnum">
      <summary>コントロールが行ヘッダまたは列ヘッダの表示にテーマを使用するかどうかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowThemedHeadersEnum.Auto">
      <summary>
        <see cref="T:System.Windows.Forms.BorderStyle" />プロパティが
        <b>XpThemes</b>に設定された場合、テーマ表示したヘッダを使用します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowThemedHeadersEnum.None">
      <summary>テーマ表示したヘッダを使用しません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowThemedHeadersEnum.Rows">
      <summary>行ヘッダにテーマ表示したヘッダを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowThemedHeadersEnum.Columns">
      <summary>列ヘッダにテーマ設定したヘッダを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowThemedHeadersEnum.Both">
      <summary>行ヘッダと列ヘッダにテーマ表示したヘッダを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowThemedHeadersEnum.SelectedOnly">
      <summary>VisualStyle が Office スタイルのいずれかに設定されている場合に、テーマが設定されたヘッダー を使用して、選択されている行および列を示します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ScrollFlags">
      <summary>スクロールバー動作をカスタマイズするオプションを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ScrollFlags.None">
      <summary>デフォルトのスクロール動作を使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ScrollFlags.AlwaysVisible">
      <summary>スクロールバーを常に表示させます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ScrollFlags.ScrollByRowColumn">
      <summary>ピクセル単位ではなく、行または列単位でスクロールします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ScrollFlags.DelayedScroll">
      <summary>ユーザーがスクロールバーのサムを解放するまで、コントロールの内容はスクロールしません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ScrollFlags.ShowScrollTips">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ShowScrollTip" />イベントを発生させ、 垂直方向へのスクロール時に垂直スクロールバーの横にツールチップを表示します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ClipboardCopyModeEnum">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoClipboard" />プロパティが true に設定されているときに クリップボードにコピーするグリッドの部分を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClipboardCopyModeEnum.DataOnly">
      <summary>選択されたデータのみがコピーされます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClipboardCopyModeEnum.DataAndColumnHeaders">
      <summary>選択されたデータをコピーして、列ヘッダを含めます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClipboardCopyModeEnum.DataAndRowHeaders">
      <summary>選択されたデータをコピーして、行ヘッダを含めます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClipboardCopyModeEnum.DataAndAllHeaders">
      <summary>選択されたデータをコピーして、行ヘッダと列ヘッダを含めます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClipboardCopyModeEnum.Disabled">
      <summary>データをクリップボードにコピーしません。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ShowSortPositionEnum">
      <summary>列ヘッダーセル内のソートグリフの位置を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowSortPositionEnum.None">
      <summary>ソートグリフを表示しません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowSortPositionEnum.Right">
      <summary>ソートグリフを列ヘッダーセルの右側に表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowSortPositionEnum.Top">
      <summary>ソートグリフを列ヘッダーセルの上に表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowSortPositionEnum.Auto">
      <summary>フィルタリングが有効の場合は、ソートグリフを列ヘッダーセルの上に表示し、 そうでない場合は右側に表示します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SortFlags">
      <summary>グリッド列のソート方法を指定します。</summary>
      <remarks>この列挙型には、ソート処理をカスタマイズするために組み合わせて使用できるフラグが含まれます。</remarks>
      <example>
        <para>たとえば、次のコードは、２つのグリッド列を大文字小文字を区別しないでソートします。</para>
        <code lang="VB.NET">Dim order As SortFlags = SortFlags.Ascending Or SortFlags.IgnoreCase flex.Sort(order, col1, col2)</code>
        <code lang="C#">SortFlags order = SortFlags.Ascending | SortFlags.IgnoreCase; flex.Sort(order, col1, col2);</code>
      </example>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortFlags.None">
      <summary>ソートしません。この設定は、いくつかの列をスキップして列範囲をソートする場合に便利です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortFlags.Ascending">
      <summary>昇順にソートします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortFlags.Descending">
      <summary>降順にソートします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortFlags.AsDisplayed">
      <summary>データの文字列表現を使用してソートします。このモードでは、"100" が "2" の前に表示されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortFlags.IgnoreCase">
      <summary>文字列をソートするときに大文字小文字を無視します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortFlags.UseColSort">
      <summary>
        各
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトの
        <see cref="P:C1.Win.C1FlexGrid.Column.Sort" />プロパティに格納されているフラグを使用します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ClearFlags">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Clear(C1.Win.C1FlexGrid.ClearFlags,C1.Win.C1FlexGrid.CellRange)" />メソッドによってクリアされるグリッドの要素を指定します。
      </summary>
      <remarks>この列挙型には、ソート処理をカスタマイズするために組み合わせて使用できるフラグが含まれます。</remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClearFlags.Content">
      <summary>セルの内容（データ、画像、チェックボックスなど）をクリアします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClearFlags.Style">
      <summary>セルに割り当てられているカスタムスタイルをクリアします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClearFlags.UserData">
      <summary>セルに関連付けられているユーザーデータをクリアします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ClearFlags.All">
      <summary>上記のすべての動作を行います。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CheckEnum">
      <summary>セル内に描画するチェックボックスの種類を指定します。</summary>
      <remarks>
        <para>２つの種類のチェックボックス（通常と３値）があります。</para>
        <para>
          通常のチェックボックスは、単純なブール値を表示するために使用されます。このチェックボックスは、マウスでクリックすると、
          <c>Checked</c>および
          <c>Unchecked</c>に順に設定が切り替わります。
        </para>
        <para>
          ３値チェックボックスは、 true 、 false 、または不定（グレー）の値を表示するために使用されます。このチェックボックスは、マウスでクリックすると、
          <c>TSChecked</c>、
          <c>TSGrayed</c>、および
          <c>TSUnchecked</c>に順に設定が切り替わります。
        </para>
        <para>
          視覚的には、
          <c>Checked</c>および
          <c>Unchecked</c>は、それぞれ
          <c>TSChecked</c>および
          <c>TSUnchecked</c>と同じです。
        </para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.None">
      <summary>チェックボックスなし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.Checked">
      <summary>チェックマークが付いたチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.Unchecked">
      <summary>空のチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.Grayed">
      <summary>未定義状態のチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.TSChecked">
      <summary>チェックマークが付いた３値チェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.TSUnchecked">
      <summary>空の３値チェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CheckEnum.TSGrayed">
      <summary>グレー状態の３値チェックボックス。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AggregateEnum">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.CellRange,C1.Win.C1FlexGrid.AggregateFlags)" />および
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドを使用して実行する集計関数の種類を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.None">
      <summary>
        集計なし。この設定は、数値集計なしでアウトラインツリーを作成するために、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドで使用されます。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Clear">
      <summary>
        既存の集計をクリアします。この設定は、通常、新しい小計を計算する前に既存の小計をクリアするため、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドで使用されます。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Sum">
      <summary>範囲内のすべての値の合計を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Percent">
      <summary>
        総計に対する割合（百分率）。この設定は、各サブグループの総計に対する割合を計算するために、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドで使用されます。この設定は、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.CellRange,C1.Win.C1FlexGrid.AggregateFlags)" />メソッドでは使用できません。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Count">
      <summary>範囲内の空でないセルの数を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Average">
      <summary>範囲内の空でないセルの平均値を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Max">
      <summary>範囲内の最大値を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Min">
      <summary>範囲内の最小値を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Std">
      <summary>範囲内の値の標本標準偏差を返します（ n-1 に基づく式を使用）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.Var">
      <summary>範囲内の値の標本分散を返します（ n-1 に基づく式を使用）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.StdPop">
      <summary>範囲内の値の母標準偏差を返します（ n に基づく式を使用）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateEnum.VarPop">
      <summary>範囲内の値の母分散を返します（ n に基づく式を使用）。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AggregateFlags">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Aggregate(C1.Win.C1FlexGrid.AggregateEnum,C1.Win.C1FlexGrid.CellRange,C1.Win.C1FlexGrid.AggregateFlags)" />メソッドを使用して集計を計算するときに使用するオプションを指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.None">
      <summary>デフォルトの設定です。すべての行が含まれ、数値だけを使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.ExcludeNodes">
      <summary>集計からノード行を除外します。このオプションは、グリッドにノードとしてマークされた小計行があり、それらが小計値を含むため、集計から除外する必要がある場合に便利です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.AggregateDates">
      <summary>数値ではなく日付の集計を計算します。日付に対しては、カウント、最大値、最小値の集計関数だけが有効です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.AggregateBooleans">
      <summary>ブール値の集計を計算します。このフラグにより、 true 値は１、 false 値は０と解釈されます。このオプションは、範囲内でチェックされているチェックボックスの数をカウントする場合に便利です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.ExcludeHiddenCells">
      <summary>集計から非表示行と列を除外します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.ExcludeCollapsedCells">
      <summary>集計から縮小された行を除外します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AggregateFlags.ExcludeHiddenRows">
      <summary>集計から非表示の行を除外します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SubtotalPositionEnum">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドで作成された小計行を参照先のデータの上または下のどちらに挿入するかを指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalPositionEnum.AboveData">
      <summary>小計行は、データの上に挿入されます（ツリー形式）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalPositionEnum.BelowData">
      <summary>小計行は、データの下に挿入されます（スプレッドシート形式）。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridChangedTypeEnum">
      <summary>
        コントロールから
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridChanged" />イベントが発生する場合の変更の種類を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.None">
      <summary>アクションなし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.GridChanged">
      <summary>グリッド行または列の数が変更されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.LayoutChanged">
      <summary>固定グリッド行または列の数が変更されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.StyleChanged">
      <summary>スタイル定義が変更されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.StyleApplied">
      <summary>範囲にスタイルが適用されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.RepaintGrid">
      <summary>グリッドが無効にされ、再描画されるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.CellChanged">
      <summary>セル内の値が変更されました。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.RepaintRange">
      <summary>範囲が無効にされ、再描画されるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.Update">
      <summary>グリッドが再描画されるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.BeforeCollapse">
      <summary>ツリーノードが折りたたみまたは展開されるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.AfterCollapse">
      <summary>ツリーノードが折りたたみまたは展開されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.EnsureVisible">
      <summary>ツリーノードが表示範囲までスクロールされるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.Select">
      <summary>ツリーノードが選択されるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.RowMoved">
      <summary>行が新しい位置に移動したとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.RowAdded">
      <summary>グリッドに行が追加されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.RowRemoved">
      <summary>グリッドから行が削除されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.RowSelected">
      <summary>行が選択または選択解除されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.ColMoved">
      <summary>列が新しい位置に移動したとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.ColAdded">
      <summary>グリッドに列が追加されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.ColRemoved">
      <summary>グリッドから列が削除されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.ColSelected">
      <summary>列が選択または選択解除されたとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.BeforeSelChange">
      <summary>選択範囲が変更されるとき。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedTypeEnum.AfterSelChange">
      <summary>選択範囲が変更されたとき。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridChangedEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridChanged" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridChangedEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridChanged" />イベントハンドラのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedEventArgs.GridChangedType">
      <summary>イベントを発生させたアクションの種類。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedEventArgs.r1">
      <summary>イベントの影響を受けたセルの範囲。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedEventArgs.c1">
      <summary>イベントの影響を受けたセルの範囲。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedEventArgs.r2">
      <summary>イベントの影響を受けたセルの範囲。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridChangedEventArgs.c2">
      <summary>イベントの影響を受けたセルの範囲。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CellRange">
      <summary>セル範囲のプロパティをカプセル化して、呼び出し先が１つのステートメントでセルグループのプロパティを設定できるようにします。</summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />構造体には、パブリックコンストラクタがありません。
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを作成するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRange(System.Int32,System.Int32)" />メソッドを使用します。
        </para>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />は、クラスではなく構造体であることに注意してください。つまり、このオブジェクトは、参照ではなく値として使用されます。
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />をメソッドに渡し、そのメソッド内でこのオブジェクトを変更しても、元の値は変更されません。
        </para>
        <para>
          範囲は、２つの行と２つの列（
          <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />、
          <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />、
          <see cref="F:C1.Win.C1FlexGrid.CellRange.r2" />、
          <see cref="F:C1.Win.C1FlexGrid.CellRange.c2" />）によって定義されます。これらの値の順序は関係ありません（
          <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />は
          <see cref="F:C1.Win.C1FlexGrid.CellRange.r2" />より小さくても大きくてもかまわない）。順序どおりに値を取得するには、
          <see cref="M:C1.Win.C1FlexGrid.CellRange.Normalize" />メソッドまたは
          <see cref="P:C1.Win.C1FlexGrid.CellRange.TopRow" />、
          <see cref="P:C1.Win.C1FlexGrid.CellRange.BottomRow" />、
          <see cref="P:C1.Win.C1FlexGrid.CellRange.LeftCol" />、および
          <see cref="P:C1.Win.C1FlexGrid.CellRange.RightCol" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellRange.r1">
      <summary>範囲の最初の行のインデックスを取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellRange.c1">
      <summary>範囲の最初の列のインデックスを取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellRange.r2">
      <summary>範囲の最後の行のインデックスを取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellRange.c2">
      <summary>範囲の最後の列のインデックスを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRange.ContainsRow(System.Int32)">
      <summary>範囲内に特定の行が含まれるかどうかを判定します。</summary>
      <param name="row">チェックする行のインデックス。</param>
      <returns>範囲に行が含まれる場合は true 、それ以外の場合は false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRange.ContainsCol(System.Int32)">
      <summary>範囲内に特定の列が含まれるかどうかを判定します。</summary>
      <param name="col">チェックする列のインデックス。</param>
      <returns>範囲に列が含まれる場合は true 、それ以外の場合は false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRange.Contains(System.Int32,System.Int32)">
      <summary>範囲内に特定のセルが含まれるかどうかを判定します。</summary>
      <param name="row">チェックする行のインデックス。</param>
      <param name="col">チェックする列のインデックス。</param>
      <returns>範囲にセルが含まれる場合は true 、それ以外の場合は false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRange.Normalize">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />が
        <see cref="P:C1.Win.C1FlexGrid.CellRange.TopRow" />、
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r2" />が
        <see cref="P:C1.Win.C1FlexGrid.CellRange.BottomRow" />、
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />が
        <see cref="P:C1.Win.C1FlexGrid.CellRange.LeftCol" />、
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c2" />が
        <see cref="P:C1.Win.C1FlexGrid.CellRange.RightCol" />になるように範囲を正規化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRange.Clear(C1.Win.C1FlexGrid.ClearFlags)">
      <summary>選択された要素を範囲からクリアします。</summary>
      <param name="clearFlags">
        クリアする要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRange.ToString">
      <summary>このオブジェクトの文字列表現を取得します。</summary>
      <returns>このオブジェクトの文字列表現。</returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.IsSingleCell">
      <summary>範囲が１つのセルで構成されている（r1 == r2かつc1 == c2）かどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.IsValid">
      <summary>CellRangeオブジェクトが有効な範囲を表すかどうかを示す値を取得します。</summary>
      <remarks>
        このプロパティは、範囲の座標が有効であれば true を返します。r1 と r2 が 0 と
        <b>Rows.Count - 1</b>の間に、c1 と c2 は 0 と
        <b>Cols.Count - 1</b>の間にあれば、範囲は有効です。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.TopRow">
      <summary>範囲内の上端の行のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.BottomRow">
      <summary>範囲内の下端の行のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.LeftCol">
      <summary>範囲内の左端の列のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.RightCol">
      <summary>範囲内の右端の列のインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.Data">
      <summary>範囲内のすべてのセルに格納されたデータを取得または設定します。</summary>
      <remarks>
        <para>取得する場合、範囲内の最初のセル（r1, c1）の書式設定されていないデータを返します。設定する場合は、データを範囲全体に適用します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.DataDisplay">
      <summary>
        範囲の最初のセル (
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />,
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />) で書式設定されているデータを文字列として取得します。
      </summary>
      <remarks>
        このプロパティは、
        <see cref="P:C1.Win.C1FlexGrid.CellRange.Clip" />プロパティに似ています。
        <b>Clip</b>プロパティが Tab キーで区切られた文字列を含む、範囲すべてのデータを返すのに対して、
        <b>DataDisplay</b>プロパティは、範囲内の最初のセル（r1, c1）の内容だけを返します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.Style">
      <summary>範囲内のすべてのセルの表示に使用されるスタイルを取得または設定します。</summary>
      <remarks>範囲スタイルを取得または設定すると、範囲内のすべてのセルが同じスタイルを持つようになります。</remarks>
      <example>
        <para>
          次のコードは、
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />構造体を作成し、それを使用して範囲全体にカスタムスタイルを適用します。
        </para>
        <code lang="VB.NET">' スタイルを作成します。 Dim cs As CellStyle = _flex.Styles.Add("red") cs.BackColor = Color.Red ' セル範囲を作成し、それにスタイルを割り当てます。 Dim rg As CellRange = _flex.GetCellRange(1, 1, 5, 5) rg.Style = cs</code>
        <code lang="C#">// スタイルを作成します。 CellStyle cs = _flex.Styles.Add("red"); cs.BackColor = Color.Red; // セル範囲を作成し、それにスタイルを割り当てます。 CellRange rg = _flex.GetCellRange(1, 1, 5, 5); rg.Style = cs;</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.StyleNew">
      <summary>範囲内のすべてのセルの表示に使用されるスタイルを取得または設定します。必要に応じて新しいスタイルが作成されます。</summary>
      <remarks>このプロパティが null を返すことはありません。範囲にスタイルが割り当てられていない場合は、新しいスタイルが自動的に作成されます。</remarks>
      <example>
        <para>
          次のコードは、
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />構造体を作成し、それを使用して範囲全体にカスタムスタイルを適用します。
        </para>
        <code lang="VB.NET">' セル範囲を作成します。 Dim rg As CellRange = _flex.GetCellRange(1, 1, 5, 5) ' 範囲を赤色にします。 rg.StyleNew.BackColor = Color.Red</code>
        <code lang="C#">// セル範囲を作成します。 CellRange rg = _flex.GetCellRange(1, 1, 5, 5); // 範囲を赤色にします。 rg.StyleNew.BackColor = Color.Red;</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.StyleDisplay">
      <summary>
        セル (
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />,
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />) のレンダリングに使用されるスタイルを取得します。
      </summary>
      <remarks>このプロパティが null を返すことはありません。範囲内の最初のセルまたはセルの行／列に割り当てられたカスタムスタイル、または組み込みスタイルを返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.Checkbox">
      <summary>範囲内のチェックボックスの状態を取得または設定します。</summary>
      <remarks>
        取得する場合、このプロパティは、セル (
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />,
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />) に対応するチェックボックス値を返します。設定する場合は、範囲内のすべてのセルに新しい値を適用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.Image">
      <summary>
        範囲内のセルに割り当てられた
        <see cref="P:C1.Win.C1FlexGrid.CellRange.Image" />を取得または設定します。
      </summary>
      <remarks>
        取得する場合、このプロパティは、セル (
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />,
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />) に割り当てられた
        <see cref="P:C1.Win.C1FlexGrid.CellRange.Image" />を返します。設定する場合は、範囲内のすべてのセルに新しい値を適用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.UserData">
      <summary>範囲内のセルに割り当てられた任意の使用データを取得または設定します。</summary>
      <remarks>
        取得する場合、このプロパティは、セル (
        <see cref="F:C1.Win.C1FlexGrid.CellRange.r1" />,
        <see cref="F:C1.Win.C1FlexGrid.CellRange.c1" />) に割り当てられたユーザーデータを返します。設定する場合は、範囲内のすべてのセルに新しい値を適用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRange.Clip">
      <summary>範囲内のすべてのセルの値を含む文字列を取得または設定します。</summary>
      <remarks>
        <para>
          各セル値は、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipSeparators" />プロパティで指定される文字で区切られます。
        </para>
        <para>デフォルトでは、列はタブ（\t または vbTab ）で区切られ、行は改行（\n または vbCr ）で区切られます。</para>
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CellRangeCollection">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.#ctor(C1.Win.C1FlexGrid.C1FlexGrid)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellRangeCollection" />の新しいインスタンスを初期化します。
      </summary>
      <param name="flexGrid">コレクションを所有するグリッド。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.Add(C1.Win.C1FlexGrid.CellRange)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトをコレクションに追加します。
      </summary>
      <param name="value">コレクションに追加するオブジェクト。</param>
      <returns>コレクション内のオブジェクトのインデックス。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.Add(C1.Win.C1FlexGrid.CellRange,System.Boolean)">
      <summary>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトをコレクションに追加します。 オプションとして、他の重複する範囲をコレクションから削除します。
      </summary>
      <param name="value">コレクションに追加するオブジェクト。</param>
      <param name="clearOverlappingRanges">新しい範囲を追加する前に 重複する範囲をコレクションから削除するかどうか。</param>
      <returns>コレクション内のオブジェクトのインデックス。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.Clear">
      <summary>コレクションからすべてのオブジェクトを削除します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.Contains(C1.Win.C1FlexGrid.CellRange)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトがコレクションのメンバかどうかを決定します。
      </summary>
      <param name="item">コレクション内で探すオブジェクト。</param>
      <returns>オブジェクトがコレクションのメンバである場合、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.IndexOf(C1.Win.C1FlexGrid.CellRange)">
      <summary>
        コレクションの
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />のインデックスを取得します。
      </summary>
      <param name="item">コレクション内で探すオブジェクト。</param>
      <returns>コレクション内のオブジェクトのインデックス。オブジェクトがコレクションのメンバでない場合は、-1 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.IndexOf(System.Int32,System.Int32)">
      <summary>
        指定した行と列を含むコレクション内の最初の
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトのインデックスを取得します。
      </summary>
      <param name="row">範囲に含まれる行のインデックス。</param>
      <param name="col">範囲に含まれる列のインデックス。</param>
      <returns>コレクション内のオブジェクトのインデックス。指定した行と列を含む範囲が見つからなかった場合は、-1 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.Insert(System.Int32,C1.Win.C1FlexGrid.CellRange)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトをコレクションの指定したインデックスに挿入します。
      </summary>
      <param name="index"></param>
      <param name="value"></param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.Remove(C1.Win.C1FlexGrid.CellRange)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトをコレクションから削除します。
      </summary>
      <param name="obj">コレクションから削除するオブジェクト。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellRangeCollection.RemoveAt(System.Int32)">
      <summary>コレクションから指定したインデックスにあるオブジェクトを削除します。</summary>
      <param name="index">コレクションから削除するオブジェクトのインデックス。</param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRangeCollection.Item(System.Int32)">
      <summary>
        指定したインデックスにある
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトを取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellRangeCollection.Count">
      <summary>
        コレクション内の
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトの数を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ConditionFilter">
      <summary>１つまたは２つの論理条件に基づいたフィルタを表します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ConditionFilter.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.ConditionFilter" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ConditionFilter.Clone">
      <summary>
        この
        <see cref="T:C1.Win.C1FlexGrid.ConditionFilter" />のクローンを作成します。
      </summary>
      <returns>
        この
        <see cref="T:C1.Win.C1FlexGrid.ConditionFilter" />のクローン。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ConditionFilter.Reset">
      <summary>フィルタをリセットして無効にします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ConditionFilter.Apply(System.Object)">
      <summary>値にフィルタを適用します。</summary>
      <param name="value">フィルタされる値。</param>
      <returns>
        <paramref name="value" />がフィルタを満たす場合、true。そうでない場合は false。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ConditionFilter.GetEditor">
      <summary>実行時にフィルタの変更に使用されるエディタを取得します。</summary>
      <returns>
        実行時にフィルタの変更に使用される
        <see cref="T:System.Windows.Forms.Control" />。
      </returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ConditionFilter.Condition1">
      <summary>１つめのフィルタ条件を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ConditionFilter.Condition2">
      <summary>２つめのフィルタ条件を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ConditionFilter.AndConditions">
      <summary>フィルタ条件が、"AND"または"OR"オペレータで結合されるかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ConditionFilter.IsActive">
      <summary>フィルタが有効かどうかを決定する値を取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ConditionOperator">
      <summary>フィルタ条件に使用されるオペレータを表します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.None">
      <summary>オペレータを無効にします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.Equals">
      <summary>オペレータのパラメータと等しい値の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.NotEquals">
      <summary>オペレータのパラメータと等しくない値の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.GreaterThan">
      <summary>オペレータのパラメータより大きい値の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.LessThan">
      <summary>オペレータのパラメータより小さい値の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.GreaterThanOrEqualTo">
      <summary>オペレータのパラメータ以上の値の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.LessThanOrEqualTo">
      <summary>オペレータのパラメータ以下の値の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.Contains">
      <summary>オペレータのパラメータを含む値の文字列表現の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.DoesNotContain">
      <summary>オペレータのパラメータを含まない値の文字列表現の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.BeginsWith">
      <summary>オペレータのパラメータで始まる値の文字列表現の場合、trueを返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ConditionOperator.EndsWith">
      <summary>オペレータのパラメータで終わる値の文字列表現の場合、trueを返します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Condition">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.ConditionFilter" />の条件を表します。
      </summary>
      <remarks>
        各
        <see cref="T:C1.Win.C1FlexGrid.ConditionFilter" />は"AND"または"OR"オペレータで結合可能な条件を２つまで保持します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Condition.Clear">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.Condition.Operator" />を "None" に設定し、
        <see cref="P:C1.Win.C1FlexGrid.Condition.Parameter" />を null に設定することで、この条件をクリアします。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Condition.Apply(System.Object)">
      <summary>指定の値に条件を適用します。</summary>
      <param name="value">検証される値。</param>
      <returns>値が条件を満たす場合は、true。そうでない場合は false。</returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Condition.IsActive">
      <summary>条件が有効かどうかを示す値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Condition.Operator">
      <summary>この条件に使用されるオペレータを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Condition.Parameter">
      <summary>この条件に使用されるパラメータを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DropModeEnum">
      <summary>OLE ドラッグ＆ドロップターゲットとしてのコントロールの動作を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DropModeEnum.None">
      <summary>コントロールはドロップターゲットとして使用できません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DropModeEnum.Manual">
      <summary>コントロールは、ドロップターゲットの機能を提供するために処理できるドラッグ＆ドロップイベントを発生します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DropModeEnum.Automatic">
      <summary>コントロールは、テキストまたはファイル名データのドロップを自動的に処理します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DragModeEnum">
      <summary>OLE ドラッグ＆ドロップソースとしてのコントロールの動作を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragModeEnum.Manual">
      <summary>
        コントロールはドラッグ機能を提供しません。ただし、呼び出し側は、
        <see cref="M:System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)" />メソッドを使用してドラッグ＆ドロップ操作を開始できます。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragModeEnum.Automatic">
      <summary>コントロールは、データのドラッグ機能を自動的に提供します。選択範囲の周辺でマウスを移動するとカーソルが変化し、ユーザーは、データを移動またはコピーできます（コピーする場合は［ Ctrl ］キーを押す）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragModeEnum.AutomaticCopy">
      <summary>データを常にコピーする（移動しない）点を除き、 Automatic と同じです。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragModeEnum.AutomaticMove">
      <summary>データを常に移動する（コピーしない）点を除き、 Automatic と同じです。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.BeforeMouseDownEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeMouseDown" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.Button">
      <summary>押されたマウスボタンを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.Clicks">
      <summary>マウスボタンが押されて放された回数を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.X">
      <summary>マウスがクリックされた場所の x 座標を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.Y">
      <summary>マウスがクリックされた場所の y 座標を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.Delta">
      <summary>マウスホイールが回転されたデテント数を符号付きの値で取得します。デテントは、マウスホイールの１刻みです。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.Cancel">
      <summary>イベントをキャンセルするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.#ctor(System.Windows.Forms.MouseEventArgs)">
      <summary>BeforeMouseDownEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="e">
        マウスイベント情報を含む
        <see cref="T:System.Windows.Forms.MouseEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.BeforeMouseDownEventArgs.#ctor(C1.Win.C1FlexGrid.C1FlexGridBase,System.Windows.Forms.MouseButtons,System.Int32)">
      <summary>BeforeMouseDownEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="view">イベントを発生するコントロール。</param>
      <param name="buttons">
        押されたボタンを示す
        <see cref="T:System.Windows.Forms.MouseButtons" />値。
      </param>
      <param name="clicks">ボタンが押されて放された回数。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DragRowColEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragColumn" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragRow" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragColumn" />、および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragRow" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.DragRowColEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DragRowColEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragColumn" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeDragRow" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragColumn" />、および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterDragRow" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragRowColEventArgs.Row">
      <summary>ユーザーがドラッグした行の元のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragRowColEventArgs.Col">
      <summary>ユーザーがドラッグした列の元のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragRowColEventArgs.Position">
      <summary>ユーザーがドラッグした列または行の新しいインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DragRowColEventArgs.Cancel">
      <summary>ドラッグ操作をキャンセルするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.DragRowColEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>DragRowColEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">ユーザーがドラッグした行の元のインデックス。</param>
      <param name="col">ユーザーがドラッグした列の元のインデックス。</param>
      <param name="position">列または行の新しいインデックス。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SortColEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSort" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSort" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.SortColEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SortColEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSort" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSort" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortColEventArgs.Col">
      <summary>ソートする列を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortColEventArgs.Order">
      <summary>
        ソート順序を決定する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値を取得または設定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortColEventArgs.Cancel">
      <summary>ドラッグ操作をキャンセルするかどうかを示す値を取得または設定します。</summary>
      <remarks>このパラメータを true に設定すると、組み込みのソート処理がキャンセルされ、ソートグリフは変更されません。</remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SortColEventArgs.Handled">
      <summary>ドラッグ操作がイベントハンドラによって処理されたかどうかを示す値を取得または設定します。</summary>
      <remarks>このパラメータを true に設定すると、組み込みのソートはキャンセルされますが、ソートグリフはソートが実行されたかのように更新されます。これは、イベントハンドラで独自のソートを実行する場合に便利です。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.SortColEventArgs.#ctor(System.Int32,C1.Win.C1FlexGrid.SortFlags)">
      <summary>SortColEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="col">ソートする列。</param>
      <param name="order">
        ソート順序を決定する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RowColEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterEdit" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeColumn" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeRow" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforePageBreak" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeColumn" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeRow" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScrollTip" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboCloseUp" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboDropDown" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetupEditor" />、および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RowColEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RowColEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterEdit" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeColumn" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeRow" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforePageBreak" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeColumn" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeRow" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScrollTip" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboCloseUp" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ComboDropDown" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetupEditor" />、および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.StartEdit" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.RowColEventArgs.Row">
      <summary>イベントが発生した行のインデックスを取得します。</summary>
      <remarks>イベントが列で発生した場合、この値は -1 に設定されます。</remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.RowColEventArgs.Col">
      <summary>イベントが発生した列のインデックスを取得します。</summary>
      <remarks>イベントが行で発生した場合、この値は -1 に設定されます。</remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.RowColEventArgs.Cancel">
      <summary>操作をキャンセルするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>RowColEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">イベントが発生した行のインデックス。</param>
      <param name="col">イベントが発生した列のインデックス。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RangeEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterRowColChange" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterScroll" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSelChange" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScroll" />、および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.RangeEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RangeEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterRowColChange" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterScroll" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSelChange" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeRowColChange" />、
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeScroll" />、および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSelChange" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.RangeEventArgs.OldRange">
      <summary>イベントの前に選択されていた範囲を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.RangeEventArgs.NewRange">
      <summary>イベントの後に選択される範囲を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.RangeEventArgs.Cancel">
      <summary>新しい選択範囲をキャンセルするかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RangeEventArgs.#ctor(C1.Win.C1FlexGrid.CellRange,C1.Win.C1FlexGrid.CellRange)">
      <summary>RangeEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="rgOld">イベントの前に選択されていた範囲。</param>
      <param name="rgNew">イベントの後に選択される範囲。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RowColToolTipEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ShowScrollTip" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">イベントを発生させたオブジェクト。</param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.ToolTipEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ToolTipEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ShowScrollTip" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ToolTipEventArgs.ToolTipText">
      <summary>ツールチップに表示するテキストを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ToolTipEventArgs.#ctor(System.Int32,System.Int32,System.String)">
      <summary>ToolTipEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">イベントを発生させた行のインデックス。</param>
      <param name="col">イベントを発生させた列のインデックス。</param>
      <param name="toolTipText">ツールチップに表示するテキスト。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.KeyEditEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyDownEdit" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyUpEdit" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.KeyEditEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyDownEdit" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyUpEdit" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Row">
      <summary>キーが押されたときに編集されるセルの行インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Col">
      <summary>キーが押されたときに編集されるセルの列インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.KeyValue">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.KeyEditEventArgs.KeyData" />プロパティの整数表現を取得します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.KeyCode">
      <summary>
        イベントのキーコードを取得します。これは、
        <see cref="T:System.Windows.Forms.Keys" />値の１つです。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.KeyData">
      <summary>修飾子フラグと組み合わせて、押されたキーのキーコードを取得します。修飾子フラグは、同時に押された［ Ctrl ］、［ Shift ］、および［ Alt ］キーの組み合わせを示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Modifiers">
      <summary>Keys で定義されている修飾子フラグを取得します。修飾子フラグは、押された修飾子キー（ Ctrl 、 Shift 、 Alt ）の組み合わせを示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Alt">
      <summary>［ Alt ］キーが押されていたかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Control">
      <summary>［ Ctrl ］キーが押されていたかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Shift">
      <summary>［ Shift ］キーが押されていたかどうかを示す値を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyEditEventArgs.Handled">
      <summary>イベントが処理され、コントロールでは無視する必要があるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.KeyEditEventArgs.#ctor(System.Int32,System.Int32,System.Windows.Forms.KeyEventArgs)">
      <summary>KeyEditEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">キーが押されたときに編集されるセルの行インデックス。</param>
      <param name="col">キーが押されたときに編集されるセルの列インデックス。</param>
      <param name="e">
        キーボードデータを含む
        <see cref="T:System.Windows.Forms.KeyEventArgs" />オブジェクト。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.KeyPressEditEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyPressEdit" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.KeyPressEditEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.KeyPressEdit" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyPressEditEventArgs.Row">
      <summary>キーが押されたときに編集されるセルの行インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyPressEditEventArgs.Col">
      <summary>キーが押されたときに編集されるセルの列インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyPressEditEventArgs.KeyChar">
      <summary>押されたキーに対応する文字を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyPressEditEventArgs.Handled">
      <summary>イベントが処理され、コントロールでは無視する必要があるかどうかを示す値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.KeyPressEditEventArgs.#ctor(System.Int32,System.Int32,System.Char)">
      <summary>KeyPressEditEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">キーが押されたときに編集されるセルの行インデックス。</param>
      <param name="col">キーが押されたときに編集されるセルの列インデックス。</param>
      <param name="key">押されたキーに対応する文字。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ValidateEditEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ValidateEditEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.ValidateEdit" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ValidateEditEventArgs.Row">
      <summary>編集されるセルの行インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ValidateEditEventArgs.Col">
      <summary>編集されるセルの列インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ValidateEditEventArgs.Checkbox">
      <summary>セルがチェックボックスを含む場合は、セルに適用される新しいチェックボックスの状態。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ValidateEditEventArgs.Cancel">
      <summary>編集操作をキャンセルするかどうかを示す値を取得または設定します。</summary>
      <remarks>このパラメータが true に設定されている場合、編集は無効と見なされます。ユーザーが有効な入力を提供するか、［ Esc ］キーを押して編集操作をキャンセルするまで、エディタは開いたままで、現在のセルは選択されたままになります。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ValidateEditEventArgs.#ctor(System.Int32,System.Int32,C1.Win.C1FlexGrid.CheckEnum)">
      <summary>ValidateEditEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">編集されるセルの行インデックス。</param>
      <param name="col">編集されるセルの列インデックス。</param>
      <param name="check">セルに適用される新しいチェックボックスの状態（存在する場合）。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridErrorEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridErrorEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridErrorEventArgs.Row">
      <summary>エラーが検出されたセルの行インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridErrorEventArgs.Col">
      <summary>エラーが検出されたセルの列インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridErrorEventArgs.Exception">
      <summary>
        エラーに関する情報を含む
        <see cref="F:C1.Win.C1FlexGrid.GridErrorEventArgs.Exception" />オブジェクトを取得します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GridErrorEventArgs.Handled">
      <summary>エラー状況がコントロールによって処理されたかどうかを示す値を取得または設定します。</summary>
      <remarks>この値が false に設定されている場合、グリッドは例外を生成します。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridErrorEventArgs.#ctor(System.Int32,System.Int32,System.Exception,System.Boolean)">
      <summary>GridErrorEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">エラーが検出されたセルの行インデックス。</param>
      <param name="col">エラーが検出されたセルの列インデックス。</param>
      <param name="exception">
        エラーに関する情報を含む
        <see cref="F:C1.Win.C1FlexGrid.GridErrorEventArgs.Exception" />オブジェクト。
      </param>
      <param name="handled">エラーを内部で処理し、例外を生成しないかどうか。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GetErrorInfoEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellErrorInfo" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetRowErrorInfo" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GetErrorInfoEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellErrorInfo" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetRowErrorInfo" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetErrorInfoEventArgs.Row">
      <summary>エラーを含む行のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetErrorInfoEventArgs.Col">
      <summary>エラーを含む列のインデックスを取得します。行にエラーがある場合は、-1 になります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetErrorInfoEventArgs.ErrorText">
      <summary>エラーを説明するメッセージを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GetErrorInfoEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GetErrorInfoEventArgs" />クラスの新しいインスタンスを初期化します。
      </summary>
      <param name="row">セルまたは行のエラー情報が必要な場合の行インデックス。</param>
      <param name="col">セルまたは行のエラー情報が必要な場合の列インデックス。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.OwnerDrawCellEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを処理するメソッドを表します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Graphics">
      <summary>
        セルの描画に使用される
        <see cref="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Graphics" />オブジェクトを取得します。このオブジェクトを使用して、セルに独自の要素を描画します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Row">
      <summary>描画されるセルの行インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Col">
      <summary>描画されるセルの列インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Bounds">
      <summary>描画するセルを示す四角形をクライアント座標で取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Measuring">
      <summary>セルを測定するためにのみイベントが発生したかどうかを判別する値を取得します。</summary>
      <remarks>これは、行や列の自動サイズ設定中に発生します。このイベントの処理中にイベントハンドラがセルに表示される値を変更する場合があるためです。</remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Handled">
      <summary>イベントがセルの描画を終了したかどうかを取得または設定します。</summary>
      <remarks>
        <para>このパラメータが true に設定されている場合、グリッドは、セルがイベントハンドラによって描画されたと見なします。false に設定されている場合、グリッドは、イベントから戻るとセルを描画します。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.DrawCell(C1.Win.C1FlexGrid.DrawCellFlags)" />メソッドを呼び出すと、このパラメータは自動的に true に設定されます。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.#ctor(C1.Win.C1FlexGrid.C1FlexGridBase,System.Drawing.Graphics,System.Int32,System.Int32,C1.Win.C1FlexGrid.CellStyle,System.Drawing.Rectangle,System.String,System.Drawing.Image)">
      <summary>OwnerDrawCellEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="view">
        描画するセルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />コントロール。
      </param>
      <param name="g">
        セルが描画される
        <see cref="F:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Graphics" />オブジェクト。
      </param>
      <param name="row">描画するセルの行インデックス。</param>
      <param name="col">描画するセルの列インデックス。</param>
      <param name="s">
        セルの描画に使用する
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />。
      </param>
      <param name="rc">描画するセルの境界。</param>
      <param name="text">セル内に表示されるテキスト。</param>
      <param name="img">セル内に表示される画像。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.DrawCell(C1.Win.C1FlexGrid.DrawCellFlags)">
      <summary>グリッドのセルの各部（背景、前景、境界線など）を描画します。</summary>
      <param name="flags">
        セルの各部を指定する
        <see cref="T:C1.Win.C1FlexGrid.DrawCellFlags" />。
      </param>
      <remarks>
        <para>
          このメソッドは、コードでセルのすべてではなく一部の要素を描画する場合に、通常、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />のハンドラ内で呼び出されます。
        </para>
        <para>
          たとえば、コードで境界線だけを独自に描画することができます。このような場合は、
          <b>e.DrawCell(DrawCellFlags.Background | DrawCellFlags.Content)</b>を呼び出してセルの背景と内容を描画し、その後で独自に境界線を描画します。また、コードでセルに（ Excel のコメントインジケータのような）独自のマーカーを描画することもできます。このような場合は、
          <b>e.DrawCell()</b>を呼び出してセル全体を描画し、その後でコメントマーカー（セルの右上隅の小さな赤色の三角形）を追加します。
        </para>
        <para>
          オーナー描画コードでセル全体（背景を含む）を描画する場合、
          <b>e.DrawCell</b>を呼び出す必要はありません。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.DrawCell">
      <summary>グリッドのセル全体を描画します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Text">
      <summary>セルに表示されるテキストを取得または設定します。</summary>
      <remarks>描画コードをカスタマイズしないで、セルに表示されるテキストを変更するには、この値を変更すると簡単です。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Image">
      <summary>セルに表示される画像を取得または設定します。</summary>
      <remarks>描画コードをカスタマイズしないで、セルに表示される画像を変更するには、この値を変更すると簡単です。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs.Style">
      <summary>
        セルを描画するために使用される
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトを取得または設定します。
      </summary>
      <remarks>
        <para>このパラメータは、セルの内容に基づく動的な書式設定を提供するためによく使用されます。たとえば、セルの値が特定の範囲に入っていない場合に、イベントハンドラで、このパラメータに新しいスタイルを割り当てることができます。</para>
        <para>
          このイベント内で
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />パラメータのメンバを変更する操作は不正ではありませんが、このスタイルを使用している他のセルにも変更の影響が及ぶため、お勧めしません。
        </para>
      </remarks>
      <example>
        <para>
          次のコードは、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.OwnerDrawCell" />イベントを使用して、低い在庫レベルを示すセルを強調表示します。
        </para>
        <code lang="VB.NET">' 在庫レベルが低い項目の表示に使用するスタイルを作成します。 Dim cs As CellStyle = flex.Styles.Add("Critical") cs.BackColor = Color.Red Private Sub flex_OwnerDrawCell(・・・ ' 固定セルを無視します。 If e.Row &lt; flex.Rows.Fixed Or e.Col &lt; flex.Cols.Fixed Then Return End If ' 追加注文レベルが基準を上回る場合にカスタムスタイルを適用します。 If flex.Cols(e.Col).Name = "UnitsInStock" Then ' Style パラメータに Critical スタイルを適用してスタイルを変更します。 ' （e.Style.BackColor プロパティを直接変更しないでください。直接変更すると、 ' このスタイルを使用する他のセルに影響します）。 If CShort(flex(e.Row, "UnitsInStock")) &lt; CShort(flex(e.Row, "ReorderLevel")) Then e.Style = flex.Styles("Critical") End If End If End Sub</code>
        <code lang="C#">// 在庫レベルが低い項目の表示に使用するスタイルを作成します CellStyle cs = flex.Styles.Add("Critical"); cs.BackColor = Color.Red; private void flex_OwnerDrawCell(・・・ { // 固定セルを無視します。 if (e.Row &lt; flex.Rows.Fixed || e.Col &lt; flex.Cols.Fixed) return; // 追加注文レベルが基準を上回る場合にカスタムスタイルを適用します。 if (flex.Cols[e.Col].Name == "UnitsInStock") { // Style パラメータに Critical スタイルを適用してスタイルを変更します。 // （e.Style.BackColor プロパティを直接変更しないでください。直接変更すると、 // このスタイルを使用する他のセルに影響します）。 if ((short)flex[e.Row, "UnitsInStock"] &lt; (short)flex[e.Row, "ReorderLevel"]) e.Style = flex.Styles["Critical"]; } }</code>
      </example>
    </member>
    <member name="T:C1.Win.C1FlexGrid.UnboundValueEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetUnboundValue" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetUnboundValue" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">
        イベントを起こした
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />オブジェクト。
      </param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.UnboundValueEventArgs" />。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.UnboundValueEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetUnboundValue" />および
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.SetUnboundValue" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.UnboundValueEventArgs.Row">
      <summary>非連結値を持つセルの行インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.UnboundValueEventArgs.Col">
      <summary>非連結値を持つセルの列インデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.UnboundValueEventArgs.Value">
      <summary>セルに表示される非連結値を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.UnboundValueEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
      <summary>UnboundValueEventArgs クラスの新しいインスタンスを初期化します。</summary>
      <param name="row">非連結値を持つセルの行インデックス。</param>
      <param name="col">非連結値を持つセルの列インデックス。</param>
      <param name="value">セルに表示する必要がある非連結値。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SubtotalEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSubtotal" />イベントと
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSubtotal" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">
        イベントを起こした
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />オブジェクト。
      </param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.SubtotalEventArgs" />。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SubtotalEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeSubtotal" />イベントと
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterSubtotal" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Function">
      <summary>
        計算する集計のタイプを指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />の値を取得します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Level">
      <summary>新しい小計行に割り当てるアウトラインレベル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.GroupFrom">
      <summary>グループの区切りの検出に使用される範囲内の最初の列のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.GroupTo">
      <summary>グループの区切りの検出に使用される範囲内の最後の列のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.TotalOn">
      <summary>集計される値を含む列のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Caption">
      <summary>新しい小計行に挿入するテキストを取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.NewRowIndex">
      <summary>新しい小計行のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.IsNewRow">
      <summary>小計行が新しい行であるか、または小計が既存の小計行に 追加されるかを決める値を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Top">
      <summary>グループ内の最初の行のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Bottom">
      <summary>グループ内の最後の行のインデックスを取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.AggregateValue">
      <summary>グループの計算集計値を取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Style">
      <summary>
        新しい小計行に適用される
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得または設定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SubtotalEventArgs.Cancel">
      <summary>新しい小計行の作成をキャンセルするかどうか。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.SubtotalEventArgs.#ctor(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Boolean,System.Int32,System.Int32,System.Object,C1.Win.C1FlexGrid.CellStyle)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.SubtotalEventArgs" />オブジェクトの新しいインスタンスを初期化します。
      </summary>
      <param name="function">
        計算する集計のタイプを指定する
        <see cref="T:C1.Win.C1FlexGrid.AggregateEnum" />の値。
      </param>
      <param name="level">新しい小計行に割り当てるアウトラインレベル。このパラメータは、複数レベルの小計の作成を可能にし、アウトラインツリーの表示に影響を与えます。</param>
      <param name="groupFrom">グループの区切りの検出に使用される範囲内の最初の列。</param>
      <param name="groupTo">グループの区切りの検出に使用される範囲内の最後の列。</param>
      <param name="totalOn">集計される値を含む列。</param>
      <param name="caption">新しい小計行に挿入するテキスト。</param>
      <param name="newRowIndex">新しい小計行のインデックス。</param>
      <param name="isNewRow">小計行が新しい行であるか、または小計が既存の小計行に追加されるか。</param>
      <param name="top">グループ内の最初の行のインデックス。</param>
      <param name="bottom">グループ内の最後の行のインデックス。</param>
      <param name="aggregateValue">グループの計算集計値。</param>
      <param name="style">
        新しい小計行に適用される
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GetLocalizedStringEventHandler">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetLocalizedString" />イベントを処理するメソッドを表します。
      </summary>
      <param name="sender">
        イベントを発生させた
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />オブジェクト。
      </param>
      <param name="e">
        イベントデータを含む
        <see cref="T:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs" />。
      </param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs">
      <summary>
        <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetLocalizedString" />イベントのデータを提供します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs.Value">
      <summary>ローカライズされる文字列の値を取得または設定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs.ComponentName">
      <summary>ローカライズされるコンポーネントの名前を取得します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs.Parent">
      <summary>ローカライズされるコンポーネントの親。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs.Component">
      <summary>ローカライズされるコンポーネント。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs.#ctor(System.String,System.String,System.Windows.Forms.Control,System.ComponentModel.Component)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GetLocalizedStringEventArgs" />の新しいインスタンスを初期化します。
      </summary>
      <param name="value">ローカライズされる値。</param>
      <param name="componentName">ローカライズされるコンポーネントの名前。</param>
      <param name="parent">ローカライズされるコンポーネントの親。</param>
      <param name="component">ローカライズされるコンポーネント。</param>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AllowFiltering">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />に使用するフィルタのタイプを指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFiltering.Default">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.ColumnFilter" />を使って、列をフィルタします。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFiltering.ByValue">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.ValueFilter" />を使って、値により列をフィルタします。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFiltering.ByCondition">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.ConditionFilter" />を使って、条件により列をフィルタします。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFiltering.Custom">
      <summary>コードで指定したフィルタを使って、列をフィルタします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AllowFiltering.None">
      <summary>この列にはフィルタを提供しません。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GlyphEnum">
      <summary>行、列、またはセルに関する情報を表示するためにグリッドが使用するグリフ（画像）の種類を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Ascending">
      <summary>列が昇順でソートされていることを示します（デフォルトは上を向いた白抜きの三角形）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Descending">
      <summary>列が降順でソートされていることを示します（デフォルトは下を向いた白抜きの三角形）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Checked">
      <summary>オンのチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Unchecked">
      <summary>オフのチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Grayed">
      <summary>グレー（未定義）状態のチェックボックス。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Collapsed">
      <summary>折りたたまれたツリーノード（デフォルトはプラス記号）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.Expanded">
      <summary>展開されたツリーノード（デフォルトはマイナス記号）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.DBCursor">
      <summary>現在のレコードを示します（デフォルトは右を向いた黒色の三角形）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.DBAdd">
      <summary>データソースに追加されている行を示します（デフォルトはアスタリスク）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.ErrorInfo">
      <summary>行またはセルのエラーを示します（デフォルトは赤色の感嘆符）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.FilterEditor">
      <summary>ドロップダウンのフィルタエディタを保持する列であることを示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.GlyphEnum.FilteredColumn">
      <summary>現在有効なフィルタを保持する列であることを示します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridGlyphs">
      <summary>
        グリフの種類（
        <see cref="T:C1.Win.C1FlexGrid.GlyphEnum" />型）のインデックスが付いたグリフ（画像）のコレクションを表します。
      </summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.GridGlyphs" />コレクションは、列のソート方向、折りたたみまたは展開されたアウトライングループ、チェックボックス、カーソル、エラー情報などを示すためにグリッドで使用される画像を含みます。
        </para>
        <para>
          これらの画像を取得または設定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Glyphs" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridGlyphs.Item(C1.Win.C1FlexGrid.GlyphEnum)">
      <summary>
        特定の
        <see cref="T:C1.Win.C1FlexGrid.GlyphEnum" />値に対応するグリフを取得または設定します。
      </summary>
      <remarks>グリフを null に設定すると、グリフのデフォルト画像が使用されます。グリフを表示しない場合は、グリフに小さな透過画像を割り当てます。</remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.AutoSearchEnum">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch" />プロパティの使用時に、グリッドがセルの検索を開始する位置を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSearchEnum.None">
      <summary>自動検索なし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSearchEnum.FromTop">
      <summary>最初のスクロール可能な行から検索します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.AutoSearchEnum.FromCursor">
      <summary>現在の行から検索します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.KeyActionEnum">
      <summary>［ Enter ］キーと［ Tab ］キーを押したときに実行されるアクションを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyActionEnum.None">
      <summary>特別なアクションはありません。システムがキーを処理します。たとえば、［ Tab ］キーは、通常、フォーム上のコントロール間を順に移動するために使用されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyActionEnum.MoveDown">
      <summary>次の行に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyActionEnum.MoveAcross">
      <summary>次の列に移動します。行の終わりで、次の行の先頭に折り返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.KeyActionEnum.MoveAcrossOut">
      <summary>MoveAcross と同じですが、グリッドの最後のセルに到達した場合は、フォーカスをタブオーダーの次のコントロールに移動します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.HitTestTypeEnum">
      <summary>コントロール内の特定の点にあるグリッド要素の種類。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.None">
      <summary>点はグリッドの空の領域にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.Cell">
      <summary>
        点はグリッドセルにあります セル座標は、
        <see cref="F:C1.Win.C1FlexGrid.HitTestInfo.Row" />および
        <see cref="F:C1.Win.C1FlexGrid.HitTestInfo.Column" />プロパティに格納されます。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.ColumnHeader">
      <summary>点は列の固定行にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.ColumnResize">
      <summary>点は、列サイズ変更領域内の固定セルの右端付近にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.ColumnFreeze">
      <summary>点は、列フリーズ領域内の最後のフリーズ列の右端付近にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.RowHeader">
      <summary>点は行の横の固定列にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.RowResize">
      <summary>点は、行サイズ変更領域内の固定セルの下端付近にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.RowFreeze">
      <summary>点は、行フリーズ領域内の最後のフリーズ行の下端付近にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.Checkbox">
      <summary>点はチェックボックスにあります</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.EditButton">
      <summary>点は編集ボタン（ドロップダウン、ポップアップエディタ）にあります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.OutlineBar">
      <summary>
        点は、アウトラインバー（グリッドの
        <b>C1FlexGridBase.Tree.Style</b>プロパティが
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.ButtonBar" />フラグを含む場合表示される）にあります。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.OutlineTree">
      <summary>
        点は、アウトラインツリーの折りたたみ／展開ボタン（グリッドの
        <b>C1FlexGridBase.Tree.Style</b>プロパティが
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Symbols" />フラグを含む場合表示される）にあります。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestTypeEnum.FilterIcon">
      <summary>点は列ヘッダセル上のフィルタアイコンにあります。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.HitTestInfo">
      <summary>
        HitTestInfo は、画面上の点にあるコントロールに関する情報を含みます（
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest(System.Int32,System.Int32)" />メソッドから返される）。
      </summary>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.HitTest(System.Int32,System.Int32)" />メソッドを使用して、
        <see cref="T:C1.Win.C1FlexGrid.HitTestInfo" />の値を取得します。
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestInfo.Row">
      <summary>テストする点の行インデックスを取得します。ポイントがセルに対応していない場合は、-1 を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestInfo.Column">
      <summary>テストする点の列インデックスを取得します。ポイントがセルに対応していない場合は、-1 を返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestInfo.Point">
      <summary>コントロール上の点（ピクセル単位）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.HitTestInfo.Type">
      <summary>
        テストする点にある要素の種類を取得します。詳細については、
        <see cref="T:C1.Win.C1FlexGrid.HitTestTypeEnum" />を参照してください。
      </summary>
      <remarks>このプロパティは、セルやチェックボックス、ヘッダ、リサイズエリアなど、座標がどの要素に一致するかを決定します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.HitTestInfo.X">
      <summary>コントロール面上の点の X 座標（ピクセル単位）。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.HitTestInfo.Y">
      <summary>コントロール面上の点の Y 座標（ピクセル単位）。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.NodeTypeEnum">
      <summary>特定のノードから見て別のノードを指定します。</summary>
      <remarks>
        この列挙型は、
        <see cref="M:C1.Win.C1FlexGrid.Node.GetNode(C1.Win.C1FlexGrid.NodeTypeEnum)" />メソッドで使用されます。
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.Root">
      <summary>ノードの最上位の親。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.Parent">
      <summary>ノードの直接の親。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.FirstChild">
      <summary>ノードの最初の子。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.LastChild">
      <summary>ノードの最後の子。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.FirstSibling">
      <summary>ノードの最初の兄弟（同じレベルにあり、同じ親を持つノード）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.LastSibling">
      <summary>ノードの最後の兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.NextSibling">
      <summary>ノードの次の兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.PreviousSibling">
      <summary>ノードの前の兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.FirstVisibleSibling">
      <summary>ノードの最初の表示された兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.LastVisibleSibling">
      <summary>ノードの最後の表示された兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.NextVisibleSibling">
      <summary>ノードの次の表示された兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.PreviousVisibleSibling">
      <summary>ノードの前の表示された兄弟。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeTypeEnum.FirstVisibleChild">
      <summary>ノードの最初の表示された子。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.NodeMoveEnum">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.Node.Move(C1.Win.C1FlexGrid.NodeMoveEnum,C1.Win.C1FlexGrid.Node)" />メソッドを使用してノードを移動するときの移動先を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.In">
      <summary>ノードを１レベル下のアウトラインに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.Out">
      <summary>ノードを１レベル上（ルートの方向）に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.Up">
      <summary>ノードを前の兄弟の前に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.Down">
      <summary>ノードを次の兄弟の後に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.First">
      <summary>ノードを最初の兄弟の前に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.Last">
      <summary>ノードを最後の兄弟の後に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.NodeMoveEnum.ChildOf">
      <summary>ノードを指定されたノードの子にします。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Node">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Node" />クラスは、ノード行の操作（折りたたみ、展開、移動、ソート）に使用されるプロパティとメソッドをカプセル化します。
      </summary>
      <remarks>
        ノード行を作成するには、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドを使用するか、
        <b>Row.IsNode</b>プロパティを true に設定します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.GetCellRange">
      <summary>この行とそのすべての子の行を含む CellRange オブジェクトを返します。</summary>
      <returns>この行とそのすべての子の行を含む CellRange オブジェクト。</returns>
      <remarks>
        返される
        <see cref="T:C1.Win.C1FlexGrid.CellRange" />オブジェクトはすべての列を含みます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.GetNode(C1.Win.C1FlexGrid.NodeTypeEnum)">
      <summary>このノードとの相対的な位置で指定されたノードへの参照を返します。</summary>
      <param name="position">
        このノードとの相対的な位置を示す
        <see cref="T:C1.Win.C1FlexGrid.NodeTypeEnum" />列挙型の値。
      </param>
      <returns>ノードオブジェクト。</returns>
      <remarks>
        要求されたノードが存在しない場合、
        <b>GetNode</b>は null を返します。たとえば、ルートノードには前の兄弟がありません。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.AddNode(C1.Win.C1FlexGrid.NodeTypeEnum,System.Object,System.Object,System.Drawing.Image)">
      <summary>このノードとの相対的な指定された位置にノード行を作成します。</summary>
      <param name="position">
        新しいノードの追加先（子、兄弟など）をこのノードとの相対的な位置で指定する
        <see cref="T:C1.Win.C1FlexGrid.NodeTypeEnum" />列挙型の値。
      </param>
      <param name="data">
        新しいノードの
        <see cref="P:C1.Win.C1FlexGrid.Node.Data" />プロパティの値。
      </param>
      <param name="key">
        新しいノードの
        <see cref="P:C1.Win.C1FlexGrid.Node.Key" />プロパティの値。
      </param>
      <param name="img">
        新しいノードの
        <see cref="P:C1.Win.C1FlexGrid.Node.Image" />プロパティの値。
      </param>
      <returns>
        グリッドに追加される新しい
        <see cref="T:C1.Win.C1FlexGrid.Node" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.AddNode(C1.Win.C1FlexGrid.NodeTypeEnum,System.Object)">
      <summary>このノードとの相対的な指定された位置にノード行を作成します。</summary>
      <param name="position">
        新しいノードの追加先（子、兄弟など）をこのノードとの相対的な位置で指定する
        <see cref="T:C1.Win.C1FlexGrid.NodeTypeEnum" />列挙型の値。
      </param>
      <param name="data">
        新しいノードの
        <see cref="P:C1.Win.C1FlexGrid.Node.Data" />プロパティの値。
      </param>
      <returns>
        グリッドに追加される新しい
        <see cref="T:C1.Win.C1FlexGrid.Node" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.RemoveNode">
      <summary>このノード行とそのすべての子の行（ノードとデータ）をグリッドから削除します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.Move(C1.Win.C1FlexGrid.NodeMoveEnum,C1.Win.C1FlexGrid.Node)">
      <summary>ノードを新しい位置に移動します。</summary>
      <param name="moveTo">
        ノードの移動先を現在の位置との相対的な位置で指定する
        <see cref="T:C1.Win.C1FlexGrid.NodeMoveEnum" />列挙型の値。
      </param>
      <param name="targetNode">
        <paramref name="moveTo" />パラメータが
        <see cref="F:C1.Win.C1FlexGrid.NodeMoveEnum.ChildOf" />に設定されている場合にターゲットとして使用する
        <see cref="T:C1.Win.C1FlexGrid.Node" />オブジェクト。
      </param>
      <returns>メソッドが成功した場合は、 true を返します。そうでない場合は、 false を返します。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.Move(C1.Win.C1FlexGrid.NodeMoveEnum)">
      <summary>ノードを新しい位置に移動します。</summary>
      <param name="moveTo">
        ノードの移動先を現在の位置との相対的な位置で指定する
        <see cref="T:C1.Win.C1FlexGrid.NodeMoveEnum" />列挙型の値。
      </param>
      <returns>メソッドが成功した場合は、 true を返します。そうでない場合は、 false を返します。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.EnsureVisible">
      <summary>このノードを表示します。必要に応じて親ノードを展開し、表示範囲までスクロールします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.Select">
      <summary>ノードを選択します。</summary>
      <remarks>
        このメソッドは、コントロールの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Row" />プロパティを設定します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32,System.Int32)">
      <summary>現在のノードを指定された順序でソートします。</summary>
      <param name="order">
        適用されるソートの種類（昇順、降順、大文字小文字の区別など）を示す
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />列挙型の１つ以上の値。
      </param>
      <param name="col1">ソートする列の範囲の始まり。</param>
      <param name="col2">ソートする列の範囲の終わり。</param>
      <remarks>
        <para>グリッドにはデータを含む通常の行と、データをグループ化するために使用するノード行の２種類の行が存在します。このメソッドは行ノードのみソートします。各ノード内のデータ行の並べ替えは行いません。</para>
        <para>
          データ行をソートするには、代わりにグリッドの
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.Sort(C1.Win.C1FlexGrid.SortFlags)">
      <summary>現在のノードを指定された順序でソートします。</summary>
      <param name="order">
        適用されるソートの種類（昇順、降順、大文字小文字の区別など）を示す
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />列挙型の１つ以上の値。
      </param>
      <remarks>
        <para>グリッドにはデータを含む通常の行と、データをグループ化するために使用するノード行の２種類の行が存在します。このメソッドは行ノードのみソートします。各ノード内のデータ行の並べ替えは行いません。</para>
        <para>
          データ行をソートするには、代わりにグリッドの
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Node.Sort(System.Collections.IComparer)">
      <summary>現在のノードを指定された順序でソートします。</summary>
      <param name="comparer">
        <see cref="P:C1.Win.C1FlexGrid.Node.Row" />オブジェクトの比較に使用される
        <see cref="T:System.Collections.IComparer" />インタフェースを実装するオブジェクト。これを使用して独自のソートを提供します。
      </param>
      <remarks>
        <para>グリッドにはデータを含む通常の行と、データをグループ化するために使用するノード行の２種類の行が存在します。このメソッドは行ノードのみソートします。各ノード内のデータ行の並べ替えは行いません。</para>
        <para>
          データ行をソートするには、代わりにグリッドの
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Level">
      <summary>このノードのアウトラインレベルを取得または設定します。</summary>
      <remarks>
        <para>レベルが高いほどネストが深くなります。ルートノードを作成するには、レベルを０に設定します。また、アウトラインツリーに表示されないノードを作成するには、レベルに負の値を設定します。</para>
        <para>
          Nodeオブジェクトの使用方法の例は、
          <b>カスタムツリーの作成</b>トピックと
          <b>Outlineチュートリアル</b>を参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Collapsed">
      <summary>このノードが折りたたまれているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Expanded">
      <summary>このノードが展開されているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Children">
      <summary>このノードの下の子ノードの数を取得します。</summary>
      <remarks>
        <para>直接の子だけがカウントされます。孫ノードなどは含まれません。</para>
        <para>
          Nodeオブジェクトの使用方法の例は、
          <b>カスタムツリーの作成</b>トピックと
          <b>Outlineチュートリアル</b>を参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Image">
      <summary>このノード行で、アウトラインツリーを含む列の画像を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Key">
      <summary>
        このノード行に関連付けられた
        <b>Row.UserData</b>を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Data">
      <summary>このノード行で、アウトラインツリーを含む列のデータを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Checked">
      <summary>そのノードに関連したチェックボックスの値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Row">
      <summary>
        このノードに対応する
        <see cref="P:C1.Win.C1FlexGrid.Node.Row" />オブジェクトへの参照を返します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Parent">
      <summary>そのノードの親ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.PrevNode">
      <summary>前の兄弟ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.PrevVisibleNode">
      <summary>前の表示された兄弟ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.NextNode">
      <summary>次の兄弟ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.NextVisibleNode">
      <summary>次の表示された兄弟ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.FirstChild">
      <summary>最初の子ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.FirstVisibleChild">
      <summary>最初の表示された子ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.LastChild">
      <summary>最後の子ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.FirstSibling">
      <summary>最初の兄弟ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.LastSibling">
      <summary>最後の兄弟ノードを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Index">
      <summary>コレクション内のこのノードのインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Node.Nodes">
      <summary>そのノードの子を含む配列を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.PrintGridFlags">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドで使用される印刷オプションを指定するフラグ。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.ActualSize">
      <summary>グリッドを実際の大きさ（画面サイズ）で印刷します。グリッドの幅が大きすぎて１ページに収まらない場合は、いくつかの列が次のページにはみ出ます。グリッドの高さが大きすぎて１ページに収まらない場合は、いくつかの行が次のページにはみ出ます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.FitToPageWidth">
      <summary>１ページの幅に合わせてグリッドを拡大縮小します。グリッドの高さが大きすぎて１ページに収まらない場合は、いくつかの行が次のページにはみ出ます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.FitToPage">
      <summary>１ページの大きさ（行と列）に合わせてグリッドを拡大縮小します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.ShowPageSetupDialog">
      <summary>印刷前にページ設定ダイアログボックスを表示します。これにより、ユーザーは、用紙のサイズ、用紙の方向、マージンを選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.ShowPrintDialog">
      <summary>印刷前にプリンタの設定ダイアログボックスを表示します。これにより、ユーザーは、使用するプリンタを選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.ShowPreviewDialog">
      <summary>印刷前に印刷プレビューダイアログボックスを表示します。これにより、ユーザーは、印刷前にドキュメントを確認できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.ShowHighlight">
      <summary>印刷時に選択範囲を強調表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.PrintGridFlags.ExtendLastCol">
      <summary>各印刷ページの最後の列を拡張します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridPrinter">
      <summary>GridPrinter クラスは、ページ設定やプリンタ設定などの印刷を制御するプロパティをカプセル化します。</summary>
      <remarks>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドも参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.PrintDocument">
      <summary>
        ページ設定とプリンタ設定を指定する
        <see cref="T:System.Drawing.Printing.PrintDocument" />オブジェクトを取得します。
      </summary>
      <remarks>
        <b>PrintDocument</b>クラスは
        <b>System.Drawing.Printing</b>ネームスペースで定義された .NET Framework の一部です。このクラスには、プリンタと文書のページ設定を指定するプロパティが含まれています。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.HeaderFont">
      <summary>ページヘッダのレンダリングに使用するフォントを指定します。</summary>
      <remarks>
        <see cref="P:C1.Win.C1FlexGrid.GridPrinter.Header" />プロパティも参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.FooterFont">
      <summary>ページフッタのレンダリングに使用するフォントを指定します。</summary>
      <remarks>
        <see cref="P:C1.Win.C1FlexGrid.GridPrinter.Footer" />プロパティも参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.PageNumber">
      <summary>印刷中のページ番号（０から始まる）を取得します。</summary>
      <remarks>通常、アプリケーションは、このプロパティを使用してグリッドの印刷時にフィードバックを行います。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.PageCount">
      <summary>印刷ドキュメントの総ページ数を取得します。</summary>
      <remarks>
        <para>ドキュメントの印刷中にのみ、正しい値が返されます。ドキュメントの印刷の前後は、このプロパティは０を返します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.PrintPreviewDialog">
      <summary>
        グリッドの印刷プレビューの表示に使用される
        <b>PrintPreviewDialog</b>への参照を取得します。
      </summary>
      <remarks>
        このプロパティを使用すると、
        <see cref="F:C1.Win.C1FlexGrid.PrintGridFlags.ShowPrintDialog" />オプションを使用してグリッドを印刷するときに、プレビューダイアログのサイズと位置をカスタマイズできます。
      </remarks>
      <example>
        <para>
          次のコードは、
          <b>PrintPreviewDialog</b>プロパティを使用して、独自のキャプションを付けたプレビューダイアログを最大化した状態で表示します。
        </para>
        <code lang="VB.NET">Dim dlg As Form dlg = CType(flex.PrintParameters.PrintPreviewDialog, Form) dlg.Text = "Custom Caption" dlg.StartPosition = FormStartPosition.Manual dlg.WindowState = FormWindowState.Maximized flex.PrintGrid("test", PrintGridFlags.ShowPreviewDialog)</code>
        <code lang="C#">Form dlg = flex.PrintParameters.PrintPreviewDialog as Form; dlg.Text = "Custom Caption"; dlg.StartPosition = FormStartPosition.Manual; dlg.WindowState = FormWindowState.Maximized; flex.PrintGrid("test", PrintGridFlags.ShowPreviewDialog);</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.PrintGridFlags">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドで使用される印刷オプションを指定するフラグを取得または設定します。詳細については、
        <see cref="P:C1.Win.C1FlexGrid.GridPrinter.PrintGridFlags" />列挙型を参照してください。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.Header">
      <summary>ページヘッダを含む文字列を取得または設定します。</summary>
      <remarks>
        <para>文字列は、タブ文字によって最大３つのセクションに分割できます。これらのセクションは、それぞれ各ページの上端で左、中央、右に揃えられます。</para>
        <para>文字列には、現在のページ番号とページ総数に置換されるプレースホルダ（{0} と {1}）を入れることもできます。</para>
        <para>
          ヘッダのレンダリングに使用されるフォントを選択するには、
          <see cref="P:C1.Win.C1FlexGrid.GridPrinter.HeaderFont" />プロパティを使用します。
        </para>
      </remarks>
      <example>
        <para>次のコードは、10 ポイントの Tahoma フォントで「 Page n of m 」と表示する右揃えのヘッダを指定します。</para>
        <code lang="VB.NET">flex.PrintParameters.Header = vbTab &amp; vbTab &amp; "Page {0} of {1}" flex.PrintParameters.HeaderFont = New Font("Tahoma", 10) flex.PrintParameters.Footer = "Footer" flex.PrintGrid("Header", PrintGridFlags.ShowPreviewDialog)</code>
        <code lang="C#">flex.PrintParameters.Header = "\t\tPage {0} of {1}"; flex.PrintParameters.HeaderFont = new Font("Tahoma", 10); flex.PrintParameters.Footer = "Footer" flex.PrintGrid("Header", PrintGridFlags.ShowPreviewDialog);</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridPrinter.Footer">
      <summary>ページフッタを含む文字列を取得または設定します。</summary>
      <remarks>
        <para>文字列は、タブ文字によって最大３つのセクションに分割できます。これらのセクションは、それぞれ各ページの上端で左、中央、右に揃えられます。</para>
        <para>文字列には、現在のページ番号とページ総数に置換されるプレースホルダ（{0} と {1}）を入れることもできます。</para>
        <para>
          フッタのレンダリングに使用されるフォントを選択するには、
          <see cref="P:C1.Win.C1FlexGrid.GridPrinter.FooterFont" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.PrintDocumentGridRenderer">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGrid" />をレンダリングしてページ付けされた
        <see cref="T:System.Drawing.Printing.PrintDocument" />に出力するオブジェクトを表します。
      </summary>
      <remarks>
        <para>
          このクラスは、複数のグリッドを、他のカスタムコンテンツと共に既存の
          <see cref="T:System.Drawing.Printing.PrintDocument" />オブジェクトに出力するために使用できます。
        </para>
        <para>
          それを使用するには、出力するグリッドごとに１つの
          <b>PrintDocumentGridRenderer</b>を作成します。 それから、ドキュメントのイベントを処理して、
          <see cref="P:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.CurrentPage" />プロパティの値が
          <see cref="P:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.PageCount" />に等しくなるまでレンダラの
          <see cref="M:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.PrintPage(System.Drawing.Printing.PrintPageEventArgs)" />イベントを呼び出します。
        </para>
        <example>
          下のコードは、２つのグリッドをレンダリングして１つの
          <see cref="T:System.Drawing.Printing.PrintDocument" />に出力します。
          <code lang="VB.NET">Private _g1, _g2 As PrintDocumentGridRenderer Private printDocument1 As Printing.PrintDocument Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click 'ボタンのクリック時、印刷プレビューダイアログを表示します。 Using dlg As New PrintPreviewDialog() dlg.Document = Me.printDocument1 dlg.ShowDialog(Me) End Using End Sub Private Sub printDocument1_BeginPrint(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintEventArgs) 'グリッドのレンダラを作成し、印刷オプションを設定します。 _g1 = New PrintDocumentGridRenderer(flex1) _g1.Options = PrintGridFlags.ActualSize 'グリッドのレンダラを作成し、印刷オプションを設定します。 _g2 = New PrintDocumentGridRenderer(flex2) _g2.Options = PrintGridFlags.FitToPageWidth Or PrintGridFlags.ExtendLastCol End Sub Private Sub printDocument1_PrintPage(ByVal sender As System.Object, ByVal e As System.Drawing.Printing.PrintPageEventArgs) ' １つめのグリッドをレンダリングします。 If (_g1.CurrentPage &lt; _g1.PageCount) Then _g1.PrintPage(e) e.HasMorePages = True ' ２つめのグリッドをレンダリングします。 ElseIf (_g2.CurrentPage &lt; _g2.PageCount) Then _g2.PrintPage(e) e.HasMorePages = _g2.CurrentPage &lt; _g2.PageCount End If End Sub</code><code lang="C#">PrintDocumentGridRenderer _g1, _g2; PrintDocument printDocument1; private void button1_Click(object sender, EventArgs e) { //ボタンのクリック時、印刷プレビューダイアログを表示します。 using (PrintPreviewDialog dlg = new PrintPreviewDialog()) { dlg.Document = this.printDocument1; dlg.ShowDialog(this); } } void printDocument1_BeginPrint(object sender, System.Drawing.Printing.PrintEventArgs e) { // グリッドのレンダラを作成し、印刷オプションを設定します。 _g1 = new PrintDocumentGridRenderer(flex1); _g1.Options = PrintGridFlags.ActualSize; // グリッドのレンダラを作成し、印刷オプションを設定します。 _g2 = new PrintDocumentGridRenderer(flex2); _g2.Options = PrintGridFlags.FitToPageWidth | PrintGridFlags.ExtendLastCol; } void printDocument1_PrintPage(object sender, System.Drawing.Printing.PrintPageEventArgs e) { // グリッドをレンダリングします。 if (_g1.CurrentPage &lt; _g1.PageCount) { _g1.PrintPage(e); e.HasMorePages = true; } // グリッドをレンダリングします。 else if (_g2.CurrentPage &lt; _g2.PageCount) { _g2.PrintPage(e); e.HasMorePages = _g2.CurrentPage &lt; _g2.PageCount; } }</code></example>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.#ctor(C1.Win.C1FlexGrid.C1FlexGridBase)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.PrintDocumentGridRenderer" />の新しいインスタンスを初期化します。
      </summary>
      <param name="flex">
        このレンダラにより描画される
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.PrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>現在のページをレンダリングしてドキュメントに出力します。</summary>
      <param name="e">
        ページをレンダリングするためのパラメータを提供する
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.PrintPage(System.Drawing.Printing.PrintPageEventArgs,System.Int32)">
      <summary>特定のページをレンダリングしてドキュメントに出力します。</summary>
      <param name="e">
        ページをレンダリングするためのパラメータを提供する
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
      </param>
      <param name="pageIndex">印刷するページのインデックス。</param>
      <remarks>このメソッドは、ドキュメント内の特定のページ範囲をレンダリングするために使用します。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.Setup(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>ズーム係数と改ページを計算します。</summary>
      <param name="e">
        ページ情報を含む
        <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />。
      </param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.Options">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.PrintGrid(System.String,C1.Win.C1FlexGrid.PrintGridFlags)" />メソッドで使用する出力オプションを指定するフラグを 取得または設定します。詳細については、
        <see cref="T:C1.Win.C1FlexGrid.PrintGridFlags" />の列挙を参照してください。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.CurrentPage">
      <summary>レンダリングされるページのインデックスを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.PageCount">
      <summary>ドキュメントの総ページ数を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.PrintDocumentGridRenderer.FirstPageY">
      <summary>ドキュメント上にレンダリングされるセルの最初のブロックの Y 座標を 取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RowCol">
      <summary>
        グリッドの行と列（
        <see cref="T:C1.Win.C1FlexGrid.Row" />クラスと
        <see cref="T:C1.Win.C1FlexGrid.Column" />クラス）の基本クラス。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCol.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.RowCol" />クラスの新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCol.Clear(C1.Win.C1FlexGrid.ClearFlags)">
      <summary>行または列の内容をクリアします。</summary>
      <param name="clearFlags">
        クリアされる行または列の要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
      <remarks>このメソッドを使用して、列プロパティ（幅、表示／非表示、スタイル、ユーザーデータなど）をデフォルト値にリセットします。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCol.Move(System.Int32)">
      <summary>この行または列をコレクション内の新しい位置に移動します。</summary>
      <param name="indexNew">新しい位置を指定する整数。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCol.Invalidate">
      <summary>個別の行または列を無効にして再描画します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Visible">
      <summary>行または列が表示されているかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、行または列が表示範囲外までスクロールされている場合でも true を返します。</para>
        <para>
          行が現在表示範囲内にあるかどうかを判定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.TopRow" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.BottomRow" />プロパティを確認します。
        </para>
        <para>
          列が現在表示範囲内にあるかどうかを判定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.LeftCol" />および
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.RightCol" />プロパティを確認します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.IsCollapsed">
      <summary>行が折りたたまれているどうかを取得します。</summary>
      <remarks>
        親ノードの１つが折りたたまれている場合、行は折りたたまれます。 折りたたまれた行は
        <see cref="P:C1.Win.C1FlexGrid.RowCol.Visible" />プロパティが true に設定されている場合にも、ユーザーからは見えません。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.IsVisible">
      <summary>行が現在ユーザーに表示されているかどうかを取得します。</summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Visible" />プロパティが true に設定され、行が折りたたまれている場合、このプロパティは true を返します（
          <see cref="P:C1.Win.C1FlexGrid.RowCol.IsCollapsed" />プロパティは false を返します）。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Selected">
      <summary>この行または列が選択されているかどうかを取得または設定します。</summary>
      <remarks>
        このプロパティを使用すると、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.SelectionMode" />プロパティが
        <see cref="F:C1.Win.C1FlexGrid.SelectionModeEnum.ListBox" />に設定されている場合に、個別の行の選択状態を取得または設定できます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.UserData">
      <summary>この行または列に関連するユーザーデータを取得または設定します。</summary>
      <remarks>UserData 値は、グリッドの内部では使用されません。これは、アプリケーションが行または列に関連付けることができる追加データとして予約されています。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.AllowDragging">
      <summary>ユーザーがマウスでこの行または列をドラッグできるかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          グリッドオブジェクトにも
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowDragging" />プロパティがあります。ドラッグがグリッドレベルで無効にされている場合、ユーザーは、どの行または列もドラッグできません。
        </para>
        <para>
          グリッドの
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowDragging" />プロパティでドラッグが許可されている場合は、このプロパティを false に設定して、個別の行または列のドラッグを無効にできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.AllowResizing">
      <summary>ユーザーがマウスでこの行または列をサイズ変更できるかどうかを取得または設定します。</summary>
      <remarks>
        <para>行または列をサイズ変更するには、グリッドの固定領域内で行間または列間の境界線近くにマウスポインタを置きます。マウスポインタがサイズ変更ポインタに変わるので、行または列の境界線をドラッグして行の高さまたは列の幅を変更します。</para>
        <para>列のグループ（最初の行から最後の行まで）を選択した場合は、その列の１つをサイズ変更すると、選択したすべての列がサイズ変更されます。行の場合も同様です。</para>
        <para>列をサイズ変更できる場合は、サイズ変更領域をダブルクリックすると、自動的に最も長いエントリの幅に合わせて列がサイズ変更されます。</para>
        <para>高さ０の行と幅０の列をユーザーがサイズ変更することはできません。サイズ変更が可能なまま、行または列のサイズをできるだけ小さくするには、高さまたは幅を０ではなく１ピクセルに設定してください。</para>
        <para>
          サイズ変更の前には、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeRow" />および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeResizeColumn" />イベントが発生します。これを使用して、特定の行または列のサイズ変更を抑止できます。サイズ変更の後には、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeRow" />および
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.AfterResizeColumn" />イベントが発生します。これを使用して、ユーザーのアクションを確認したり、表示を更新することができます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.AllowMerging">
      <summary>同じ内容を含む隣接するセルをマージするかどうかを指定します。</summary>
      <remarks>
        <para>セルをマージすることで、同じ情報がグループとして強調され、データを見やすく表示できます。また、 HTML や Microsoft Word を使用して作成できるテーブルと同様に、セルのマージをサポートするテーブルを柔軟に作成できます。</para>
        <para>
          マージされたセルを含むテーブルを作成するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMerging" />プロパティを
          <see cref="F:C1.Win.C1FlexGrid.AllowMergingEnum.None" />以外の値に設定し、マージする行および列ごとに
          <b>AllowMerging</b>プロパティを true に設定します。
        </para>
        <para>これらのプロパティを設定すると、同じ内容の隣接するセルが自動的にマージされます。セルの内容が変更されるたびに、グリッドのマージ状態が更新されます。</para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGrid.AllowMerging" />プロパティを
          <see cref="F:C1.Win.C1FlexGrid.AllowMergingEnum.Custom" />に設定したカスタムマージでは、
          <see cref="P:C1.Win.C1FlexGrid.MergedRanges" />プロパティを使用してコードでマージします。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.AllowEditing">
      <summary>この行または列内のセルをユーザーが編集できるかどうかを取得または設定します。</summary>
      <remarks>
        <para>
          グリッドオブジェクトにも
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />プロパティがあります。編集がグリッドレベルで無効にされている場合、ユーザーは、どのセルも編集できません。
        </para>
        <para>
          グリッドの
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />プロパティで編集が許可されている場合は、このプロパティを false に設定して、個別の行または列の編集を無効にできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.DataType">
      <summary>この行または列に格納されるオブジェクトの型を取得または設定します。</summary>
      <remarks>
        <para>
          デフォルトでは、列の
          <b>DataType</b>プロパティは
          <see cref="T:System.Object" />に設定されており、列に任意のデータ値を格納できます。
        </para>
        <para>
          行または列の
          <b>DataType</b>を特定の型に設定した場合、グリッドはその列内のセルに割り当てられた値を指定されたデータ型に変換しようとします。変換が失敗した場合、グリッドは
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GridError" />イベントを発生させ、セル値は変更されません。
        </para>
        <para>
          <b>DataType</b>プロパティは、値がグリッドに内部的に格納される方法、値がソートされる方法、および列内の値の編集に使用されるコントロールの種類に影響します。たとえば、
          <see cref="T:System.DateTime" />列内の値を編集する場合は
          <see cref="T:System.Windows.Forms.DateTimePicker" />コントロールが使用され、ブール値列内の値を表示および編集する場合はチェックボックスが使用されます。
        </para>
        <para>
          列に（日付ではなく）時間を格納する場合も、 DateTime 型を使用できますが、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.Format" />を使用して時間だけを表示する必要があります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Format">
      <summary>この列内のデータを書式設定する方法を指定する文字列を取得または設定します。</summary>
      <remarks>
        <para>
          <b>Format</b>プロパティは、内部的に格納される値ではなく、値を書式設定して表示する方法に影響します。セルの書式設定された値を取得するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetDataDisplay(System.Int32,System.Int32)" />プロパティを使用します。
        </para>
        <para>
          <b>Format</b>プロパティで使用する数値および日付と時刻の書式指定文字列は、.NET Framework の書式指定文字列と同様です。MSDN についても参照してください。
        </para>
        <para>次の表は、もっとも一般的に使用されるオプションについてまとめたものです。</para>
        <para>
          <b>数値の書式設定</b>
        </para>
        <para>次の文字列は、数値の書式設定に使用します。</para>
        <para>【 Cまたはc 】・・・ Currency（通貨）。数値を地域ごとの通貨額を表す文字列に変換。</para>
        <para>【 Eまたはe 】・・・ Exponential（指数）。数値を"-d.ddd E+ddd"または"-d.ddd e+ddd"という形式の文字列に変換。'd'はそれぞれ１桁の数（0～9）を表します。</para>
        <para>【 Fまたはf 】・・・ Fixed-point（固定小数点）。数値を、固定の小数位を付けた浮動小数を表す文字列に変換。</para>
        <para>【 Nまたはn 】・・・ Number（数値）。数値を、小数点の区切り記号と固定の小数位を付けた文字列に変換。</para>
        <para>【 Pまたはp 】・・・ Percentage（百分率）。数値を百分率で表す文字列に変換。</para>
        <para></para>
        <code lang="VB.NET">' 1列目に通貨書式を設定 flex.Cols(1).DataType = GetType(Decimal) flex.Cols(1).Format = "C"</code>
        <code lang="C#">// 1列目に通貨書式を設定 flex.Cols[1].DataType = typeof(decimal); flex.Cols[1].Format = "C";</code>
        <para>次の文字を使ってカスタム書式を作成することもできます。</para>
        <para>【 0 】・・・ 0プレースホルダ。書式設定文字列に'0'を指定した位置に数字がある場合、その数字が出力文字列にコピーされます。小数点より前で一番左にある'0'の位置と、小数点より後で一番右にある'0'の位置が、出力文字列に常に表示される数字の桁数を決定します。</para>
        <para>【 # 】・・・ 桁プレースホルダ。書式設定文字列に'#'を指定した位置に数字がある場合、その数字が出力文字列にコピーされます。数字がない場合は、出力文字列のこの位置には何も表示されません。</para>
        <para>【 . 】・・・ 小数点。書式設定文字列内の最初の'.'文字が、書式設定する値における小数点の区切り記号の位置を決定します。最初の'.'以外の'.'文字は無視されます。</para>
        <para>【 , 】・・・ 桁区切り記号。小数点の区切り記号より、左の数値から３桁ごとに桁区切り記号が挿入されます。書式設定文字列の小数点のすぐ左に１つ以上の','文字がある場合、数値は','文字の数だけ1000を乗じた値で除算されて表示されます。</para>
        <para>【 % 】・・・ 百分率プレースホルダ。'%'文字が書式設定文字列にあると、数値が100倍されてから書式設定されます。</para>
        <para>【 ; 】・・・ セクション区切り記号。';'文字は、書式設定文字内で正数、負数、および０のセクションを区切るのに使用します。</para>
        <para></para>
        <code lang="VB.NET">' 1列目にカスタム数値書式を設定 flex.Cols(1).DataType = GetType(Integer) flex.Cols(1).Format = "\\#,##.00"</code>
        <code lang="C#">// 1列目にカスタム数値書式を設定 flex.Cols[1].DataType = typeof(int); flex.Cols[1].Format = "\\\\#,##0.00";</code>
        <para>
          <b>DateTime型の値の書式設定</b>
        </para>
        <para>次の文字列は、日付および時刻の書式設定に使用します。</para>
        <para>【 d 】・・・ Short Date（短い日付）</para>
        <para>【 D 】・・・ Long Date（長い日付）</para>
        <para>【 t 】・・・ Short Time（短い時刻）</para>
        <para>【 T 】・・・ Long Time（長い時刻）</para>
        <para></para>
        <code lang="VB.NET">' 1列目に長い形式の日付書式を設定 flex.Cols(1).DataType = GetType(DateTime) flex.Cols(1).Format = "D"</code>
        <code lang="C#">// 1列目に長い形式の日付書式を設定 flex.Cols[1].DataType = typeof(DateTime); flex.Cols[1].Format = "D";</code>
        <para>次の文字を使ってカスタム書式を作成することもできます。</para>
        <para>【 d 】・・・ 現在の日付を1～31までの値で表示。１桁の日付（1～9）の場合は１桁で表示します。</para>
        <para>【 dd 】・・・ 現在の日付を1～31までの値で表示。１桁の日付（1～9）の場合は前に0を付けて表示します（01～09）。</para>
        <para>【 ddd 】・・・ 日付の略名を表示</para>
        <para>【 dddd 】・・・ 日付の名前を完全に表示</para>
        <para>【 M 】・・・ 現在の月を1～12までの値で表示。１桁の月（1～9）の場合は１桁で表示します。</para>
        <para>【 MM 】・・・ 現在の月を1～12までの値で表示。１桁の月（1～9）の場合は前に０を付けて表示します。</para>
        <para>【 MMM 】・・・ 月の略名を表示</para>
        <para>【 MMMMM 】・・・ 月の名前を完全に表示</para>
        <para>【 y 】・・・ 年を最大２桁の数値で表示。年の上２桁は省略されます。１桁の年（1～9）の場合は１桁で表示します。</para>
        <para>【 yy 】・・・ 年を２桁の数値で表示。年の上２桁は省略されます。１桁の年（1～9）の場合は前に０を付けて表示します。</para>
        <para>【 yyyy 】・・・ 年を完全な４桁の数値で表示</para>
        <para>【 / 】・・・ 日付の区切り記号</para>
        <para></para>
        <code lang="VB.NET">' 1列目にカスタム数値書式を設定 flex.Cols(1).DataType = GetType(DateTime) flex.Cols(1).Format = "yy/MM/dd"</code>
        <code lang="C#">// 1列目に長い形式の日付書式を設定 flex.Cols[1].DataType = typeof(DateTime); flex.Cols[1].Format = "yy/MM/dd";</code>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.EditMask">
      <summary>この列のセルの編集時に使用する入力マスクを取得または設定します。</summary>
      <remarks>
        グリッドにも、グリッド全体に適用される
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.EditMask" />プロパティがあります。詳細とマスクの構文については、このプロパティを参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Index">
      <summary>親コレクション内でのこの行または列のインデックスを取得します。</summary>
      <remarks>
        <para>行または列がコレクションのメンバではない場合、このプロパティは -1 を返します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Style">
      <summary>
        この行または列に関連付けられた独自の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得または設定します。
      </summary>
      <remarks>この要素にカスタムスタイルがない場合、このプロパティは null を返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.StyleNew">
      <summary>
        この行または列に関連付けられた独自の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得または設定し、必要に応じて新しいスタイルを作成します。
      </summary>
      <remarks>このプロパティが null を返すことはありません。この要素にカスタムスタイルがない場合は、新しいスタイルが自動的に作成されて返されます。</remarks>
      <example>
        <para>次のコードは、列の背景色を赤色に設定します。</para>
        <code lang="VB.NET">' 列１に関連付けられたスタイルを取得します。 ' （必要に応じて新しいスタイルを作成）。 Dim cs As CellStyle = flex.Cols(1).StyleNew.BackColor ' 新しいスタイルの背景色を赤色に設定します cs.BackColor = Color.Red</code>
        <code lang="C#">// 列１に関連付けられたスタイルを取得します（必要に応じて新しいスタイルを作成）。 CellStyle cs = _flex.Cols[1].StyleNew.BackColor; // 新しいスタイルの背景色を赤色に設定します。 cs.BackColor = Color.Red;</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.StyleDisplay">
      <summary>行または列の表示に使用されるスタイルを取得します。</summary>
      <remarks>このプロパティが null を返すことはありません。行または列がカスタムスタイルを持つ場合、このプロパティはそのスタイルを返します。そうでない場合は、行の表示に使用される組み込みスタイル（ Normal 、 Alternate 、 Fixed 、 Frozen など）を返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.StyleFixed">
      <summary>
        行または列内の固定セルの描画に使用される組み込み
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.StyleFixedNew">
      <summary>行または列内の固定セルに関連付けられているカスタムスタイルを取得します。必要に応じて新しいスタイルが作成されます。</summary>
      <remarks>
        行または列にその固定セルに関連付けられたカスタムスタイルがある場合、このプロパティはそのスタイルを返します。それ以外の場合は、新しい
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を作成し、それを行または列に割り当て、新しいスタイルへの参照を返します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.StyleFixedDisplay">
      <summary>行または列内の固定セルの表示に使用されるスタイルを取得します。</summary>
      <remarks>行または列内の固定セルにカスタムスタイルが関連付けられている場合、このプロパティはそのスタイルを返します。そうでない場合は、列の表示に使用される組み込みスタイル（ Normal 、 Fixed など）を返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.TextAlign">
      <summary>
        この行または列内のスクロール可能なセルにテキストを配置する方法を決定する
        <see cref="T:C1.Win.C1FlexGrid.TextAlignEnum" />値を取得または設定します。
      </summary>
      <remarks>
        このプロパティは、列に関連付けられた
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトによって指定された配置位置を決定する値を取得または設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.TextAlignFixed">
      <summary>
        この行または列内の固定セルにテキストを配置する方法を決定する
        <see cref="T:C1.Win.C1FlexGrid.TextAlignEnum" />値を取得または設定します。
      </summary>
      <remarks>
        このプロパティは、行または列内の固定セルに関連付けられた
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトによって指定された配置位置を決定する値を取得または設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.ImageAlign">
      <summary>
        この行または列内のスクロール可能なセルに画像を配置する方法を決定する
        <see cref="T:C1.Win.C1FlexGrid.ImageAlignEnum" />値を取得または設定します。
      </summary>
      <remarks>
        このプロパティは、行または列に関連付けられた
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトによって指定された配置位置を決定する値を取得または設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.ImageAlignFixed">
      <summary>
        この行または列内の固定セルに画像を配置する方法を決定する
        <see cref="T:C1.Win.C1FlexGrid.ImageAlignEnum" />値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.ImageMap">
      <summary>
        この行または列でデータ値を画像に変換するために使用される
        <see cref="T:System.Collections.IDictionary" />オブジェクトを取得または設定します。
      </summary>
      <remarks>
        <para>このプロパティを使用して、この行または列内のデータ値を画像に関連付けます。たとえば、列に国名が格納されている場合は、このプロパティを使用して、対応する国旗を表示できます。</para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageAndText" />プロパティを使用すると、セルテキストの代わりに画像を表示するか、セルテキストと共に画像を表示するかを指定できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.ImageAndText">
      <summary>
        この行または列の
        <see cref="P:C1.Win.C1FlexGrid.RowCol.ImageMap" />にある画像をセルテキストの代わりに表示するか、セルテキストと共に表示するかを指定する値を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.DataMap">
      <summary>
        この行または列でデータ値を表示値に変換するために使用される
        <see cref="T:System.Collections.IDictionary" />オブジェクトを取得または設定します。
      </summary>
      <remarks>
        <para>
          <b>DataMap</b>プロパティを使用すると、「値変換付き」の行または列を実装できます。値変換付きの行または列では、セルに格納されている値が表示されません。代わりに、その値を列の
          <b>DataMap</b>で検索し、マップ先の値が表示されます。
        </para>
        <para>
          列が編集可能な場合は、ドロップダウンリストに値を挿入するためにも
          <b>DataMap</b>値が使用されます。
        </para>
        <para>
          また、
          <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスを使用して、複数列およびデータ連結ドロップダウンを作成できます。
        </para>
        <para>
          1つの行または列に、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ComboList" />プロパティと
          <b>DataMap</b>プロパティの両者を設定することは可能ですが、
          <b>ComboList</b>プロパティの優先度が
          <b>DataMap</b>プロパティより高いため、
          <b>DataMap</b>プロパティの設定値は無効になります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.ComboList">
      <summary>ドロップダウンエディタで使用する項目のリストを取得または設定します。</summary>
      <remarks>
        <para>
          <b>ComboList</b>プロパティは、セルの編集時に使用するエディタの種類を指定します。テキストボックス、ドロップダウンリスト、ドロップダウンコンボを使用するか、カスタムエディタフォームをポップアップするためのセルボタンを使用できます。
        </para>
        <para>
          <b>ComboList</b>プロパティを使用するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowEditing" />プロパティを true に設定し、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.BeforeEdit" />イベントで
          <b>ComboList</b>プロパティとして、そのセルで使用する編集の種類を記述した文字列を設定します。次にオプションについて説明します。
        </para>
        <para>
          1. 通常のテキストボックスを使用してセルを編集するには、
          <b>ComboList</b>プロパティとして空の文字列を設定します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Cols(0).ComboList = String.Empty</code>
        <code lang="C#">flex.Cols[0].ComboList = string.Empty;</code>
        <para>
          2. ドロップダウンリストを使用してセルを編集するには、
          <b>ComboList</b>プロパティとして、使用可能なオプションをパイプ文字で区切った文字列を設定します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Cols(0).ComboList = "Item 1|Item 2|Item 3"</code>
        <code lang="C#">flex.Cols[0].ComboList = "Item 1|Item 2|Item 3";</code>
        <para>
          3. ドロップダウンコンボを使用してセルを編集するには、
          <b>ComboList</b>プロパティとして、使用可能なオプションをパイプ文字（|）で区切り、先頭にパイプ文字を付けた文字列を設定します。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Cols(0).ComboList = "|Item 1|Item 2|Item 3"</code>
        <code lang="C#">flex.Cols[0].ComboList = "|Item 1|Item 2|Item 3";</code>
        <para>
          4. セルボタンを表示するには、
          <b>ComboList</b>プロパティとして省略符号（"..."）を含む文字列を設定します。セルボタンは通常のプッシュボタンの外観で、キャプションには省略符号（"..."）が表示され、セルの右側に配置されます。ユーザーがこのセルボタンをクリックすると、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.CellButtonClick" />イベントが発生します。この場合、ユーザーはセルの内容を直接編集できません。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Cols(0).ComboList = "..."</code>
        <code lang="C#">flex.Cols[0].ComboList = "...";</code>
        <para>
          5. 編集可能なセルの横にセルボタンを表示するには、
          <b>ComboList</b>プロパティとして、パイプ記号と省略記号を含む文字列（"|..."）を設定します。この場合は、通常のセルボタンが表示されますが、ユーザーがセルの内容を直接編集することもできます。次に例を示します。
        </para>
        <para></para>
        <code lang="VB.NET">flex.Cols(0).ComboList = "|..."</code>
        <code lang="C#">flex.Cols[0].ComboList = "|...";</code>
        <para>
          グリッドの
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ComboList" />プロパティも参照してください。
        </para>
        <para>
          1つの行または列に、
          <b>ComboList</b>プロパティと
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataMap" />プロパティの両者を設定することは可能ですが、
          <b>ComboList</b>プロパティの優先度が
          <b>DataMap</b>プロパティより高いため、
          <b>DataMap</b>プロパティの設定値は無効になります。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Editor">
      <summary>この列内のセルの編集に使用されるカスタムエディタを取得または設定します。</summary>
      <remarks>
        <para>グリッドにはいくつかの組み込みエディタが用意されており、編集中のセルのプロパティに基づいて、それらが自動的に選択されます。</para>
        <para>
          このプロパティを使用すると、特定の列内の値を編集するときに外部エディタを使用できます。外部エディタとしては任意のコントロールを使用できますが、グリッドと完全に統合するには、外部エディタが
          <see cref="T:C1.Win.C1FlexGrid.IC1EmbeddedEditor" />インタフェースを実装している必要があります。
        </para>
        <para>このプロパティを設定して、設計時（グリッドの列エディタを使用）または実行時に、外部エディタを列に関連付けることができます。</para>
      </remarks>
      <example>
        <para>
          次のコードは、 C1DateEdit コントロールを作成し、それをグリッド列の
          <b>Editor</b>プロパティに割り当てます。この列内のセルの編集には、デフォルトの
          <see cref="T:System.Windows.Forms.DateTimePicker" />コントロールではなく、このコントロールが使用されます。
        </para>
        <para>
          C1Input ライブラリのコントロールは、すべて
          <see cref="T:C1.Win.C1FlexGrid.IC1EmbeddedEditor" />インタフェースを実装しているため、コードを追加することなくグリッドエディタとして使用できます。
        </para>
        <code lang="VB.NET">' C1DateEdit（C1Input に含まれる）コントロールを作成します。 Dim dateEdit As C1DateEdit = New C1DateEdit() ' 新しいコントロールをグリッド列のエディタとして使用します。 flex.Cols(1).DataType = Type.GetType(DateTime) flex.Cols(1).Editor = c1DateEdit</code>
        <code lang="C#">// C1DateEdit （ C1Input に含まれる）コントロールを作成します。 C1DateEdit dateEdit = new C1DateEdit(); // 新しいコントロールをグリッド列のエディタとして使用します。 flex.Cols[1].DataType = typeof(DateTime); flex.Cols[1].Editor = c1DateEdit;</code>
      </example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCol.Grid">
      <summary>
        行または列から（親の）
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />コントロールの参照を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Row">
      <summary>グリッド行を表すクラス。</summary>
      <remarks>
        このクラスは、パブリックコンストラクタを持ちません。行の追加と削除は、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Rows" />プロパティのメソッドを使用して行うことができます。このプロパティは、行コレクションを公開します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Row.Clear(C1.Win.C1FlexGrid.ClearFlags)">
      <summary>この行をクリアします。</summary>
      <param name="clearFlags">
        クリアされる行の要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
      <remarks>このメソッドを使用して、行のプロパティをデフォルト値にリセットします（高さ、表示状態、スタイル、ユーザーデータなど）。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Row.Move(System.Int32)">
      <summary>行をコレクション内の新しい位置に移動します。</summary>
      <param name="indexNew">行の新しい位置を指定する整数。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Row.Invalidate">
      <summary>この行を無効にして再描画します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Item(System.Int32)">
      <summary>この行内の列インデックスで指定されたセル値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Item(System.String)">
      <summary>この行内の列名で指定されたセル値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Top">
      <summary>この行の上端を示すグリッド内の相対的な位置をピクセル単位で取得します。</summary>
      <remarks>
        <para>
          返される値は、グリッドの上端からこの行までの行の高さの合計です。スクロール位置は考慮されません。スクロール位置を考慮するには、グリッドの
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを使用して、この値を調整する必要があります。
        </para>
        <para>
          セルのサイズと位置を取得するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRect(System.Int32,System.Int32,System.Boolean)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Bottom">
      <summary>この行の下端を示すグリッド内の相対的な位置をピクセル単位で取得します。</summary>
      <remarks>
        返される値は、
        <see cref="P:C1.Win.C1FlexGrid.Row.Top" />プロパティと
        <see cref="P:C1.Win.C1FlexGrid.Row.HeightDisplay" />プロパティの合計に一致します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Height">
      <summary>この行の高さをピクセル単位で取得または設定します。-1 は、デフォルトの行の高さを表します。</summary>
      <remarks>
        <para>
          このプロパティを -1 に設定すると、この行のデフォルトの行の高さが使用されます（
          <see cref="P:C1.Win.C1FlexGrid.RowColCollection.DefaultSize" />プロパティを参照）。
        </para>
        <para>
          Height は、この行が不可視の場合でも、行に割り当てられている高さを返します。デフォルトの高さが使用されている場合は、-1 を返します。行の実際に表示されている高さを取得するには、
          <see cref="P:C1.Win.C1FlexGrid.Row.HeightDisplay" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.HeightDisplay">
      <summary>この行の表示高さをピクセル単位で取得または設定します。</summary>
      <remarks>
        この行が不可視の場合、 HeightDisplay は０を返します。また、
        <see cref="P:C1.Win.C1FlexGrid.Row.Height" />プロパティが -1 （デフォルトの行の高さを表す）に設定されている場合でも、実際に表示されている高さを返します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Index">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.RowCollection" />コレクション内のこの行のインデックスを取得します。
      </summary>
      <remarks>
        <para>
          <see cref="T:C1.Win.C1FlexGrid.Row" />がコレクションのメンバでない場合、このプロパティは -1 を返します。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.Row.SafeIndex" />プロパティと
          <see cref="P:C1.Win.C1FlexGrid.Row.DataIndex" />プロパティも参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.SafeIndex">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.RowCollection" />コレクション内のこの行のインデックスを取得します。
      </summary>
      <remarks>
        このプロパティは、
        <see cref="P:C1.Win.C1FlexGrid.Row.Index" />プロパティに似ていますが、
        <see cref="T:C1.Win.C1FlexGrid.Row" />がコレクションのメンバでない場合に例外を生成する点が異なります。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.DataIndex">
      <summary>
        固定行とノード行を除いて、
        <see cref="T:C1.Win.C1FlexGrid.RowCollection" />コレクション内のこの行のインデックスを取得します。
      </summary>
      <remarks>
        <para>行が固定行またはノード行の場合、このプロパティは -1 を返します。</para>
        <para>グリッドがデータソースに連結されている場合は、この戻り値をグリッドのデータソースへのインデクサとして使用して、行に連結されている項目への参照を取得できます。</para>
        <para>
          また、行の
          <see cref="P:C1.Win.C1FlexGrid.Row.DataSource" />プロパティを直接使用して、基底のデータオブジェクトを取得することもできます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Caption">
      <summary>行内の最初の固定セルのテキストを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.IsNew">
      <summary>この行がグリッドに新しい行を追加するためのプレースホルダであることを示します。</summary>
      <remarks>
        このプロパティは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew" />プロパティが true に設定されている場合に、グリッド内の最後の行に対して true を返します。これは、最初の固定列でアスタリスクグリフが付いている行です。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.DataSource">
      <summary>この行のデータを提供するオブジェクトを取得します。</summary>
      <remarks>
        <para>
          返されるオブジェクトの型は、グリッドに割り当てられている DataSource の型に依存します。たとえば、グリッドが
          <see cref="T:System.Data.DataView" />オブジェクトに連結されている場合、このプロパティは、この行に連結されている特定の
          <see cref="T:System.Data.DataRowView" />オブジェクトを返します。
        </para>
        <para>グリッドが非連結の場合や行が固定行またはノード行（グリッドのデータソース内のどのオブジェクトにも対応していない）の場合、このプロパティは null を返します。</para>
        <para>
          サンプルについては、
          <see cref="E:C1.Win.C1FlexGrid.C1FlexGridBase.GetUnboundValue" />イベントを参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.IsNode">
      <summary>この行がアウトラインのノード行かどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、行がアウトラインツリー内のノードとして機能するかどうかを決定します。</para>
        <para>
          <b>IsNode</b>を使用すると、独自のアウトラインツリーを作成できます。または、グリッドの
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドを使用すると、アウトラインツリーを自動的に作成できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Node">
      <summary>
        この行に関連付けられた
        <see cref="T:C1.Win.C1FlexGrid.Node" />オブジェクトを取得します。
      </summary>
      <remarks>
        <para>
          行がノードである（
          <see cref="P:C1.Win.C1FlexGrid.Row.IsNode" />プロパティを参照）場合、このプロパティは
          <see cref="T:C1.Win.C1FlexGrid.Node" />オブジェクトを返します。このオブジェクトを使用して、ノードを折りたたみまたは展開したり、アウトラインツリー内のレベルを設定することができます。
        </para>
        <para>行がノードでない場合、このプロパティは行の親ノードを取得します。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Row.Selected">
      <summary>この行が選択されているかどうかを取得または設定します。</summary>
      <remarks>
        このプロパティを使用すると、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.SelectionMode" />プロパティが
        <see cref="F:C1.Win.C1FlexGrid.SelectionModeEnum.ListBox" />に設定されている場合に、個別の行の選択状態を取得または設定できます。
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Column">
      <summary>グリッド列を表すクラス。</summary>
      <remarks>
        このクラスは、パブリックコンストラクタを持ちません。列の追加と削除は、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Cols" />プロパティのメソッドを使用して行うことができます。このプロパティは、列コレクションを公開します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Column.Invalidate">
      <summary>この列を無効にして再描画します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Column.Clear(C1.Win.C1FlexGrid.ClearFlags)">
      <summary>
        この
        <see cref="T:C1.Win.C1FlexGrid.Column" />をクリアします。
      </summary>
      <param name="clearFlags">
        クリアされる
        <see cref="T:C1.Win.C1FlexGrid.Column" />の要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.ClearFlags" />値。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.Column.Move(System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />をコレクション内の新しい位置に移動します。
      </summary>
      <param name="indexNew">列の新しい位置を指定する整数。</param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Item(System.Int32)">
      <summary>この列内の行インデックスで指定されたセル値を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Left">
      <summary>この列の左端を示すグリッド内の相対的な位置をピクセル単位で取得します。</summary>
      <remarks>
        <para>
          返される値は、グリッドの左端からこの列までの列の幅の合計です。スクロール位置は考慮されません。スクロール位置を考慮するには、グリッドの
          <see cref="P:C1.Win.C1FlexGrid.Util.BaseControls.ScrollableControl.ScrollPosition" />プロパティを使用して、この値を調整する必要があります。
        </para>
        <para>
          セルのサイズと位置を取得するには、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.GetCellRect(System.Int32,System.Int32,System.Boolean)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Right">
      <summary>この列の右端を示すグリッド内の相対的な位置をピクセル単位で取得します。</summary>
      <remarks>
        返される値は、
        <see cref="P:C1.Win.C1FlexGrid.Column.Left" />プロパティと
        <see cref="P:C1.Win.C1FlexGrid.Column.WidthDisplay" />プロパティの合計に一致します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Width">
      <summary>この列の幅をピクセル単位で取得または設定します。-1 は、デフォルトの列の幅を表します。</summary>
      <remarks>
        <para>
          このプロパティを -1 に設定すると、この列のデフォルトの列の幅が使用されます（
          <see cref="P:C1.Win.C1FlexGrid.RowColCollection.DefaultSize" />プロパティを参照）。
        </para>
        <para>
          Width は、この列が不可視の場合でも、列に割り当てられている幅を返します。デフォルトの幅が使用されている場合は、-1 を返します。列の実際に表示されている列を取得するには、
          <see cref="P:C1.Win.C1FlexGrid.Column.WidthDisplay" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.WidthDisplay">
      <summary>この列の表示幅をピクセル単位で取得または設定します。</summary>
      <remarks>
        この列が不可視の場合、 WidthDisplay は０を返します。また、
        <see cref="P:C1.Win.C1FlexGrid.Column.Width" />プロパティが -1 （デフォルトの列の幅を表す）に設定されている場合でも、実際に表示されている幅を返します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.SafeIndex">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />コレクション内のこの列のインデックスを取得します。
      </summary>
      <remarks>
        このプロパティは、
        <see cref="P:C1.Win.C1FlexGrid.Column.Index" />プロパティに似ていますが、
        <see cref="T:C1.Win.C1FlexGrid.Column" />がコレクションのメンバでない場合に例外を生成する点が異なります。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.DataIndex">
      <summary>データソースオブジェクト内の列の位置を取得します。</summary>
      <remarks>固定列と非連結列に対しては、このプロパティは -1 を返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.AllowSorting">
      <summary>列ヘッダをクリックしてこの列をソートできるかどうかを取得または設定します。</summary>
      <remarks>
        グリッドには、マウスを使用して列をソートできるかどうかを決定する
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowSorting" />プロパティがあります。
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトの AllowSorting プロパティを使用すると、ユーザーが特定の列をソートできないように設定できます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.AllowFiltering">
      <summary>列に使用するフィルタのタイプを取得または設定します。</summary>
      <remarks>
        グリッドには、ユーザーが列をフィルタできるかどうかを決定する
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFiltering" />プロパティがあります。このプロパティが true に設定されている場合、列の
        <see cref="P:C1.Win.C1FlexGrid.Column.AllowFiltering" />プロパティの設定に基づいて、各列に対するフィルタが自動的に作成されます。
      </remarks>
      <example>
        以下のコードは２列のフィルタをカスタマイズします。 "ShipRegion" 列は、２つの状態 AK と CA のみ表示するように初期化されます。 "UnitPrice" 列は、$30 を超える単価の品目のみ表示するように初期化されます。 列フィルタが初期されると、コードは
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.ApplyFilters" />を呼び出し、フィルタを適用します。
        <code>// initialize "ShipRegion" column filter to show only two values: "AK" and "CA" var col = _flex.Cols["ShipRegion"]; col.AllowFiltering = AllowFiltering.ByValue; var vf = col.Filter as ValueFilter; vf.ShowValues = new object[] { "AK", "CA" }; // initialize "UnitPrice" column filter to show only values greater than $30 col = _flex.Cols["UnitPrice"]; col.AllowFiltering = AllowFiltering.ByCondition; var cf = col.Filter as ConditionFilter; cf.Condition1.Operator = ConditionOperator.GreaterThan; cf.Condition1.Parameter = 30; // apply both column filters to the data _flex.ApplyFilters();</code></example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Filter">
      <summary>
        この列をフィルタ処理する
        <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilter" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.ActiveFilter">
      <summary>
        現在列をフィルタしている
        <see cref="T:C1.Win.C1FlexGrid.IC1ColumnFilter" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Name">
      <summary>この列の名前を取得または設定します。</summary>
      <remarks>
        <para>
          この名前は、
          <see cref="T:C1.Win.C1FlexGrid.ColumnCollection" />プロパティインデクサでインデックスとして使用できます。
        </para>
        <para>グリッドが DataSource に連結されている場合、列の名前は自動的にデータソース内の列の名前に設定され、連結に使用されます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Sort">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.SortFlags.UseColSort" />フラグを指定して
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドが呼び出された場合のこの列のソート方法を指定します。
      </summary>
      <remarks>
        複数列を異なる順序でソートする場合は、このプロパティを使用します。 たとえば、列１、２、３の
        <b>Sort</b>プロパティに
        <see cref="F:C1.Win.C1FlexGrid.SortFlags.Ascending" />を、列４、５、６に
        <see cref="F:C1.Win.C1FlexGrid.SortFlags.Descending" />を設定します。次に、
        <b>sort</b>パラメータを
        <see cref="F:C1.Win.C1FlexGrid.SortFlags.UseColSort" />に設定したグリッドの
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを呼び出して、列ごとに指定された順序でソートを実行します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Index">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />コレクション内のこの列のインデックスを取得します。
      </summary>
      <remarks>列がコレクションのメンバでない場合は、-1 を返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Selected">
      <summary>この列が選択されているかどうかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.Caption">
      <summary>列のヘッダセルのテキストを取得または設定します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RowColCollection">
      <summary>
        グリッドの行および列コレクション（
        <see cref="T:C1.Win.C1FlexGrid.RowCollection" />および
        <see cref="T:C1.Win.C1FlexGrid.ColumnCollection" />クラス）の基本クラス。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColCollection.Move(System.Int32,System.Int32)">
      <summary>行または列をコレクション内の新しい位置に移動します。</summary>
      <param name="indexOld">移動する行または列のインデックス。</param>
      <param name="indexNew">新しい位置。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColCollection.MoveRange(System.Int32,System.Int32,System.Int32)">
      <summary>行または列の範囲をコレクション内の新しい位置に移動します。</summary>
      <param name="index">移動する範囲の最初の行または列のインデックス。</param>
      <param name="count">移動する行または列の数。</param>
      <param name="indexNew">新しい位置。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColCollection.Contains(C1.Win.C1FlexGrid.RowCol)">
      <summary>特定の行または列がコレクションに含まれているかどうかを判定します。</summary>
      <param name="item">検出する行または列項目。</param>
      <returns>行または列がコレクションのメンバである場合は、 true を返します。そうでない場合は、 false を返します。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColCollection.GetPrevious(System.Int32)">
      <summary>前の表示された行または列のインデックスを取得します。</summary>
      <param name="item">元の行または列のインデックス。</param>
      <returns>前の表示された行または列のインデックス。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColCollection.GetNext(System.Int32)">
      <summary>次の表示された行または列のインデックスを取得します。</summary>
      <param name="item">元の行または列のインデックス。</param>
      <returns>次の表示された行または列のインデックス。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowColCollection.Update">
      <summary>行または列の位置を更新します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.Count">
      <summary>コレクション内の行または列の数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.Fixed">
      <summary>コレクション内の固定行または列の数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.Frozen">
      <summary>コレクション内の静止行または列の数を取得または設定します。</summary>
      <remarks>
        ユーザーがマウスを使用して行または列をフリーズできるかどうかは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFreezing" />プロパティを使用して指定します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.MinSize">
      <summary>コレクション内の行および列の最小値を取得または設定します。</summary>
      <remarks>
        <b>MinSize</b>プロパティは、ユーザーが行または列をサイズ変更する場合や、
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeRows(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />または
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />メソッドで行または列を内容に合わせて調整する場合に、行または列の最小値を制限します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.MaxSize">
      <summary>コレクション内の行および列の最大値を取得または設定します。</summary>
      <remarks>
        <para>
          <b>MaxSize</b>プロパティは、ユーザーが行または列をサイズ変更する場合や、
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeRows(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />または
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSizeCols(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,C1.Win.C1FlexGrid.AutoSizeFlags)" />メソッドで行または列を内容に合わせて調整する場合に、行または列の最大値を制限します。
        </para>
        <para>このプロパティを０に設定すると、値が無効になります。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.DefaultSize">
      <summary>コレクション内の行または列のデフォルト値を取得または設定します。</summary>
      <remarks>
        グリッドの
        <b>Font</b>プロパティに新しい値を設定すると、DefaultSizeプロパティはそのフォントに合わせて自動調整されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowColCollection.Grid">
      <summary>
        このコレクションを所有する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />コントロールへの参照を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RowCollection">
      <summary>
        グリッドの
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Add">
      <summary>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトをコレクションに付加します。
      </summary>
      <remarks>
        Add メソッドは、新しい行をコレクションに付加します。新しい行を特定の位置に挿入するには、
        <see cref="M:C1.Win.C1FlexGrid.RowCollection.Insert(System.Int32)" />メソッドを使用します。
      </remarks>
      <returns>
        コレクションに追加された
        <see cref="T:C1.Win.C1FlexGrid.Row" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Add(System.Int32)">
      <summary>
        新しい複数の
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトをコレクションに追加します。
      </summary>
      <param name="count">追加する行数</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Insert(System.Int32)">
      <summary>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトをコレクションの指定された位置に追加します。
      </summary>
      <param name="index">新しい行を挿入する位置。</param>
      <returns>
        コレクションに追加された
        <see cref="T:C1.Win.C1FlexGrid.Row" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.InsertNode(System.Int32,System.Int32)">
      <summary>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.Node" />行を行コレクションの指定された位置に追加します。
      </summary>
      <param name="index">新しいノード行を挿入する位置。</param>
      <param name="level">新しいノード行のアウトラインレベル。</param>
      <returns>
        コレクションに追加された
        <see cref="T:C1.Win.C1FlexGrid.Node" />への参照。
      </returns>
      <remarks>
        グリッドがデータソースに連結されている場合は、
        <see cref="P:C1.Win.C1FlexGrid.Row.IsNode" />プロパティの値を変更できないため、このメソッドは特に便利です。グリッドが非連結の場合は、行を追加し、後で
        <see cref="P:C1.Win.C1FlexGrid.Row.IsNode" />プロパティを使用してノードに変換できます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.AddNode(System.Int32)">
      <summary>
        行のコレクションに新しい
        <see cref="T:C1.Win.C1FlexGrid.Node" />行を追加します。
      </summary>
      <param name="level">新しいノード行のアウトラインレベル。</param>
      <returns>
        コレクションに追加された
        <see cref="T:C1.Win.C1FlexGrid.Node" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.InsertRange(System.Int32,System.Int32)">
      <summary>行の範囲をコレクションの指定された位置に追加します。</summary>
      <param name="index">新しい範囲を挿入する位置。</param>
      <param name="count">追加する行の数。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Remove(System.Int32)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトを削除します。
      </summary>
      <param name="index">コレクションから削除する行のインデックス。</param>
      <returns>
        コレクションから削除された
        <see cref="T:C1.Win.C1FlexGrid.Row" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Remove(C1.Win.C1FlexGrid.Row)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトを削除します。
      </summary>
      <param name="row">削除する行。</param>
      <returns>
        コレクションから削除された
        <see cref="T:C1.Win.C1FlexGrid.Row" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>行の範囲をコレクションから削除します。</summary>
      <param name="index">コレクションから削除する最初の行のインデックス。</param>
      <param name="count">コレクションから削除する行の数。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Move(System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトをコレクション内の新しい位置に移動します。
      </summary>
      <param name="indexOld">削除する行のインデックス。</param>
      <param name="indexNew">行の新しい位置。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.MoveRange(System.Int32,System.Int32,System.Int32)">
      <summary>行の範囲をコレクション内の新しい位置に移動します。</summary>
      <param name="index">移動する範囲内の最初の行のインデックス。</param>
      <param name="count">移動する行の数。</param>
      <param name="indexNew">範囲内の最初の行の新しい位置。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.RowCollection.Update">
      <summary>このコレクション内の各行の位置とデータインデックスを更新します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCollection.Item(System.Int32)">
      <summary>
        指定されたインデックスにある
        <see cref="T:C1.Win.C1FlexGrid.Row" />を取得します。
      </summary>
      <remarks>
        このメソッドによって返された
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトを使用して、行の高さ、表示／非表示、スタイル、選択された状態などの属性を設定します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCollection.Count">
      <summary>コレクション内の行の数を取得または設定します。</summary>
      <remarks>
        行を追加または削除するには、このプロパティに新しい値を代入するか、
        <see cref="M:C1.Win.C1FlexGrid.RowCollection.Add" />、
        <see cref="M:C1.Win.C1FlexGrid.RowCollection.Insert(System.Int32)" />、
        <see cref="M:C1.Win.C1FlexGrid.RowCollection.InsertRange(System.Int32,System.Int32)" />、および
        <see cref="M:C1.Win.C1FlexGrid.RowCollection.Remove(System.Int32)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCollection.GlyphRow">
      <summary>ソートおよびフィルタリンググリフを表示するために使用される行のインデックスを取得または設定します。</summary>
      <remarks>デフォルト値は -1 です。 ソートおよびフィルタリンググリフは最後の固定行に表示されます。 このプロパティを固定行の数より大きい値に設定すると、グリフは表示されません。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCollection.Fixed">
      <summary>コレクション内の固定行の数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.RowCollection.Selected">
      <summary>
        現在選択されている
        <see cref="T:C1.Win.C1FlexGrid.Row" />オブジェクトのコレクションを取得します。
      </summary>
      <remarks>
        このプロパティを使用すると、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.SelectionMode" />プロパティが
        <see cref="F:C1.Win.C1FlexGrid.SelectionModeEnum.ListBox" />に設定されている場合に、個別の行の選択状態を取得または設定できます。
      </remarks>
      <example>
        <para>次のコードは、選択されているすべての行をグリッドから削除します。</para>
        <para>
          foreach ループを使用して、反復対象のコレクションは変更できないことに注意してください。次のサンプルが動作するのは、
          <b>Selected</b>コレクションを列挙しながら
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Rows" />コレクションを変更しているためです。
        </para>
        <code lang="VB.NET">' 選択されているすべての行を削除します。 Dim r As Row For Each r In flex.Rows.Selected flex.Rows.Remove(r) Next</code>
        <code lang="C#">// 選択されているすべての行を削除します。 foreach (Row r in flex.Rows.Selected) { flex.Rows.Remove(r); }</code>
      </example>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ColumnCollection">
      <summary>
        グリッドの
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Contains(System.String)">
      <summary>
        特定の名前の
        <see cref="T:C1.Win.C1FlexGrid.Column" />がコレクションに含まれているかどうかを決定する値を取得します。
      </summary>
      <param name="columnName">検索する列名（大文字小文字は区別されない）。</param>
      <returns>コレクションに特定の名前の列がある場合は、 true 。そうでない場合は、 false 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.IndexOf(System.String)">
      <summary>
        指定された名前の
        <see cref="T:C1.Win.C1FlexGrid.Column" />のインデックスを取得します。
      </summary>
      <param name="columnName">検索する列名（大文字小文字は区別されない）。</param>
      <returns>このコレクション内の特定の名前の列のインデックス。指定された名前の列がコレクションにない場合は、-1 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.IndexOf(System.String,System.Boolean)">
      <summary>
        指定した名前を持つ
        <see cref="T:C1.Win.C1FlexGrid.Column" />のインデックスを取得します。 オプションとして、列が見つからない場合は例外をスローします。
      </summary>
      <param name="columnName">検索する列名（大文字小文字を区別）。</param>
      <param name="throwIfNotFound">列が見つからないとき例外をスローするかどうか。</param>
      <returns>このコレクション内で指定の名前を持つ列のインデックス。 コレクションに指定の名前を持つ列が含まれていない場合は、-1 。</returns>
      <remarks>
        <paramref name="throwIfNotFound" />パラメータが true に設定され、
        <paramref name="columnName" />という名前の列が見つからなかった場合、コントロールは
        <see cref="T:System.ArgumentOutOfRangeException" />をスローします。これにより、 列名に依存するコンパクトなコードをより簡単に記述できます。
      </remarks>
      <example>
        <para>
          以下の例は、
          <b>IndexOf</b>メソッドを使用して列名をインデックスに変換します。列名が無効の場合、
          <b>IndexOf</b>メソッドによって例外がスローされます。
        </para>
        <code lang="VB.NET">Dim columnIndex As Integer = flex.Cols.IndexOf("total") flex.AutoSizeCol(columnIndex)</code>
        <code lang="C#">int columnIndex = _flex.Cols.IndexOf("total"); flex.AutoSizeCol(columnIndex);</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Add">
      <summary>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトをコレクションに付加します。
      </summary>
      <returns>
        コレクションに追加された
        <see cref="T:C1.Win.C1FlexGrid.Column" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Add(System.Int32)">
      <summary>
        新しい複数の
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトをコレクションに追加します。
      </summary>
      <param name="count">追加する列数</param>
      <remarks>
        このメソッドは複数の列をコレクションに追加します。
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Insert(System.Int32)" />や
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.InsertRange(System.Int32,System.Int32)" />　メソッドと似ていますが、特定の位置ではなく、常にグリッドの最後に追加します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Insert(System.Int32)">
      <summary>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトをコレクションの指定された位置に追加します。
      </summary>
      <param name="index">新しい列を挿入する位置。</param>
      <returns>
        コレクションに挿入された
        <see cref="T:C1.Win.C1FlexGrid.Column" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.InsertRange(System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトから成る範囲をコレクションの指定された位置に追加します。
      </summary>
      <param name="index">新しい範囲を挿入する位置。</param>
      <param name="count">追加する列の数。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Remove(System.Int32)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトを削除します。
      </summary>
      <param name="index">コレクションから削除する列のインデックス。</param>
      <returns>
        コレクションから削除された
        <see cref="T:C1.Win.C1FlexGrid.Column" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Remove(C1.Win.C1FlexGrid.Column)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトを削除します。
      </summary>
      <param name="column">削除する列。</param>
      <returns>
        コレクションから削除された
        <see cref="T:C1.Win.C1FlexGrid.Column" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Remove(System.String)">
      <summary>
        コレクションから
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトを削除します。
      </summary>
      <param name="columnName">削除する列の名前。</param>
      <returns>
        コレクションから削除された
        <see cref="T:C1.Win.C1FlexGrid.Column" />への参照。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトから成る範囲をコレクションから削除します。
      </summary>
      <param name="index">コレクションから削除する最初の列のインデックス。</param>
      <param name="count">コレクションから削除する列の数。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.Move(System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトをコレクション内の新しい位置に移動します。
      </summary>
      <param name="indexOld">移動する列のインデックス。</param>
      <param name="indexNew">列の新しい位置。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.MoveRange(System.Int32,System.Int32,System.Int32)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトから成る範囲をコレクション内の新しい位置に移動します。
      </summary>
      <param name="index">移動する範囲内の最初の列のインデックス。</param>
      <param name="count">移動する列の数。</param>
      <param name="indexNew">範囲内の最初の列の新しい位置。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.BuildString(System.Boolean)">
      <summary>コントロール状態を保持するのに適した列コレクションの 完全な説明を含む文字列をビルドする文字列を取得します。</summary>
      <param name="includeDefault">説明内のデフォルト値を組み込むかどうか。</param>
      <returns>列コレクションを説明する文字列。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.ParseString(C1.Win.C1FlexGrid.C1FlexGridBase,System.String)">
      <summary>
        列コレクションの説明を含む文字列（通常
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.BuildString(System.Boolean)" />メソッドを呼び出すことによって取得します）を解析し、 それをグリッドに適用します。
      </summary>
      <param name="grid">列コレクションを受け取るグリッド。</param>
      <param name="str">列コレクションの定義を含む文字列。</param>
      <returns>列定義が正常に適用された場合は true。</returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnCollection.Item(System.Int32)">
      <summary>
        指定されたインデックスにある
        <see cref="T:C1.Win.C1FlexGrid.Column" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnCollection.Item(System.String)">
      <summary>
        指定された列名の
        <see cref="T:C1.Win.C1FlexGrid.Column" />を取得します。
      </summary>
      <remarks>
        <para>
          このメソッドによって返された
          <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトを使用して、列の高さ、表示／非表示、スタイル、選択された状態などの属性を設定できます。
        </para>
        <para>
          このインデクサは、指定された
          <see cref="P:C1.Win.C1FlexGrid.Column.Name" />を持つ列を探します。 列名は、グリッドをデータベースに連結したときに自動的に設定されるか、コードを使用して設定することができます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnCollection.Count">
      <summary>
        このコレクション内の
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトの数を取得または設定します。
      </summary>
      <remarks>
        列を追加または削除するには、このプロパティに新しい値を代入するか、
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Add" />、
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Insert(System.Int32)" />、
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.InsertRange(System.Int32,System.Int32)" />、および
        <see cref="M:C1.Win.C1FlexGrid.ColumnCollection.Remove(System.Int32)" />メソッドを使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnCollection.Fixed">
      <summary>コレクション内の固定列の数を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ColumnCollection.Selected">
      <summary>
        現在選択されている
        <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトのコレクションを取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.FileFormatEnum">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)" />および
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)" />メソッドを使用して保存またはロードするファイルの種類を指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFormatEnum.TextComma">
      <summary>テキストファイル。セルをカンマで区切ります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFormatEnum.TextTab">
      <summary>テキストファイル。セルをタブで区切ります。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFormatEnum.TextCustom">
      <summary>
        テキストファイル。セルを
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.ClipSeparators" />プロパティで指定された文字で区切ります。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFormatEnum.Excel">
      <summary>Microsoft Excel ファイル（ xls 、 biff-8 形式）。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.FileFlags">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)" />および
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadGrid(System.String,C1.Win.C1FlexGrid.FileFormatEnum,C1.Win.C1FlexGrid.FileFlags,System.Text.Encoding)" />メソッドで使用するオプションを指定します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.None">
      <summary>デフォルトの設定を使用します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.IncludeFixedCells">
      <summary>グリッドのロードまたは保存時に固定セルを含めます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.VisibleOnly">
      <summary>表示されている行と列だけを保存します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.SelectedRowsOnly">
      <summary>選択されている行だけを保存します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.AsDisplayed">
      <summary>表示された状態の値を保存します（書式設定とマッピングがある場合はそれらを含む）。このフラグは、テキストファイルの保存時には効果がありません。テキストファイルには、常に表示されている値が格納されるためです。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.SaveMergedRanges">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドを使用して、 Excel へのエクスポート時にマージ範囲を保存します。 このフラグは、テキストファイルの保存の場合は影響せず、 Excel 出力の場合のみに影響します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.LoadMergedRanges">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドを使用して Excel からのインポート時にマージ範囲をロードします。 このフラグは、テキストファイルのロード時には影響せず、 Excel 入力の場合のみに影響します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.IncludeMergedRanges">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドと
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドを使用し、 Excel のエクスポートとインポート時にマージ範囲を保存およびロードします。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.NoFreezing">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.SaveExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドと
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.LoadExcel(System.String,System.String,C1.Win.C1FlexGrid.FileFlags)" />メソッドを使用し、 Excel のエクスポートまたはインポート時に行と列をフリーズしません。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.OpenXml">
      <summary>ファイルを OpenXml（Office 2007）フォーマットで読み込むか、または保存します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.FileFlags.Outline">
      <summary>Excel にノードをエクスポートするとき、ノードは Excel のグループとして保存されます。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.SelectionModeEnum">
      <summary>グリッドで実行できる選択の種類を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.Default">
      <summary>ユーザーは、キーボードやマウスを使用して、連続するひとまとまりのセルを選択できます。ヘッダセルをクリックすると、行または列全体を選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.Cell">
      <summary>ユーザーは、一度に１つのセルだけを選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.CellRange">
      <summary>ユーザーは、キーボードやマウスを使用して、連続するひとまとまりのセルを選択できます。ヘッダセルをクリックしても選択範囲は変わりません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.Row">
      <summary>ユーザーは、一度に１つの行を選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.RowRange">
      <summary>一度に連続する複数の行を選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.Column">
      <summary>ユーザーは、一度に１つの列を選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.ColumnRange">
      <summary>一度に連続する複数の列を選択できます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.SelectionModeEnum.ListBox">
      <summary>［ Ctrl ］キーを押しながらクリックして、連続しない複数の行を選択できます。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.MoveCursorEnum">
      <summary>この列挙型は内部使用専用です。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.None">
      <summary>移動なし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.CellPrev">
      <summary>１セル左に移動し、前の行に折り返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.CellNext">
      <summary>１セル右に移動し、次の行に折り返します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.CellUp">
      <summary>１セル上に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.CellDown">
      <summary>１セル下に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.CellLeft">
      <summary>１セル左に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.CellRight">
      <summary>１セル右に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.PageUp">
      <summary>１画面分上に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.PageDown">
      <summary>１ページ下に移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.PageLeft">
      <summary>左のページに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.PageRight">
      <summary>右のページに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.HomeUp">
      <summary>上端のセルに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.EndDown">
      <summary>下端のセルに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.HomeLeft">
      <summary>左端のセルに移動します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.MoveCursorEnum.EndRight">
      <summary>右端のセルに移動します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CellStyleEnum">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Styles" />コレクションから
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトを取得するために使用される列挙型。
      </summary>
      <remarks>
        セルスタイルは、インデクサまたはスタイル名を使用して
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Styles" />コレクションから取得できます。読み取り専用プロパティから直接組み込みスタイルを取得することもできます。
      </remarks>
      <example>
        <para>次のコードは、グリッドのデフォルトのスタイルへの参照を取得する３とおりの方法を示します。</para>
        <code lang="VB.NET">' s1、s2、および s3 はグリッドの Normal スタイルへの参照です。 Dim s1 As CellStyle = flex.Styles(CellStyleEnum.Normal) Dim s2 As CellStyle = flex.Styles("Normal") Dim s3 As CellStyle = flex.Styles.Normal</code>
        <code lang="C#">// s1、s2、および s3 はグリッドの Normal スタイルへの参照です。 CellStyle s1 = flex.Styles[CellStyleEnum.Normal]; CellStyle s2 = flex.Styles["Normal"]; CellStyle s3 = flex.Styles.Normal;</code>
      </example>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Normal">
      <summary>スクロール可能な通常のセルのレンダリングに使用されるスタイル。</summary>
      <remarks>
        <para>
          これは、ほとんどのセルの親スタイルです。 コントロールの
          <b>BackColor</b>、
          <b>ForeColor</b>、または
          <b>Font</b>プロパティを設定すると、
          <b>Normal</b>スタイルの対応するプロパティが自動的に設定されます。
        </para>
        <para>
          <b>Normal</b>スタイルのプロパティを変更すると、これらのプロパティによって明示的にオーバーライドされないすべてのスタイルに変更が反映されます。
        </para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Alternate">
      <summary>偶数番号の行内のスクロール可能なセルのレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Fixed">
      <summary>固定セルのレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Highlight">
      <summary>選択して強調表示されているセルのレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Focus">
      <summary>フォーカスがあるセルのレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Editor">
      <summary>編集中のセルのレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Search">
      <summary>
        ユーザーが入力するときに選択されているセルのレンダリングに使用されるスタイル（
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch" />プロパティを参照）。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Frozen">
      <summary>フリーズされているセル（編集と選択は可能、スクロールは不可）のレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.NewRow">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew" />プロパティが true に設定されている場合に、グリッド内の最後の行をレンダリングするために使用されるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.EmptyArea">
      <summary>セルがないグリッド領域のレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.SelectedColumnHeader">
      <summary>選択した列ヘッダの描画に使用するスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.SelectedRowHeader">
      <summary>選択した行ヘッダの描画に使用するスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.GrandTotal">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成される総計ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Subtotal0">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成されるレベル０ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Subtotal1">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成されるレベル１ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Subtotal2">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成されるレベル２ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Subtotal3">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成されるレベル３ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Subtotal4">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成されるレベル４ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.Subtotal5">
      <summary>
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Subtotal(C1.Win.C1FlexGrid.AggregateEnum,System.Int32,System.Int32,System.Int32,System.Int32,System.String)" />メソッドによって作成されるレベル５ノードに自動的に割り当てられるスタイル。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.FilterEditor">
      <summary>フィルタエディタの描画に使用されるスタイル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.FirstCustomStyle">
      <summary>最初のカスタムスタイルを示す定数。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.TextAlignEnum">
      <summary>グリッドセル内のテキストの配置方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.LeftTop">
      <summary>水平方向には左揃えで、垂直方向には上揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.LeftCenter">
      <summary>水平方向には左揃えで、垂直方向には中央揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.LeftBottom">
      <summary>水平方向には左揃えで、垂直方向には下揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.CenterTop">
      <summary>水平方向には中央揃えで、垂直方向には上揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.CenterCenter">
      <summary>水平方向には中央揃えで、垂直方向には中央揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.CenterBottom">
      <summary>水平方向には中央揃えで、垂直方向には下揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.RightTop">
      <summary>水平方向には右揃えで、垂直方向には上揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.RightCenter">
      <summary>水平方向には右揃えで、垂直方向には中央揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.RightBottom">
      <summary>水平方向には右揃えで、垂直方向には下揃えでセルにテキストを配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.GeneralTop">
      <summary>数値は右揃え、他の値は左揃え、垂直方向には上揃えで配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.GeneralCenter">
      <summary>数値は右揃え、他の値は左揃え、垂直方向には中央揃えで配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextAlignEnum.GeneralBottom">
      <summary>数値は右揃え、他の値は左揃え、垂直方向には下揃えで配置します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.TextEffectEnum">
      <summary>セルテキストのレンダリングに使用する 3D 効果を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextEffectEnum.Flat">
      <summary>3D 効果なし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextEffectEnum.Raised">
      <summary>テキストの１ピクセル右下まで影を付けてテキストを描画します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextEffectEnum.Inset">
      <summary>テキストの１ピクセル左上まで影を付けてテキストを描画します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.ImageAlignEnum">
      <summary>グリッドセル内の画像の配置方法を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.LeftTop">
      <summary>水平方向には左揃えで、垂直方向には上揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.LeftCenter">
      <summary>水平方向には左揃えで、垂直方向には中央揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.LeftBottom">
      <summary>水平方向には左揃えで、垂直方向には下揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.CenterTop">
      <summary>水平方向には中央揃えで、垂直方向には上揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.CenterCenter">
      <summary>水平方向には中央揃えで、垂直方向には中央揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.CenterBottom">
      <summary>水平方向には中央揃えで、垂直方向には下揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.RightTop">
      <summary>水平方向には右揃えで、垂直方向には上揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.RightCenter">
      <summary>水平方向には右揃えで、垂直方向には中央揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.RightBottom">
      <summary>水平方向には右揃えで、垂直方向には下揃えでセルに画像を配置します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.Scale">
      <summary>元の縦横比を維持したまま、セルの大きさいっぱいに画像を拡大縮小します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.Stretch">
      <summary>セル全体に画像を引き伸ばします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.Tile">
      <summary>セル全体に画像を並べます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.Hide">
      <summary>画像は表示されません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ImageAlignEnum.TileStretch">
      <summary>画像を部分に分けてグリッドに入れ、隅部分はコピーし、中央はセルの大きさに合わせて伸縮します。</summary>
      <remarks>
        このタイル表示モードは、ソース画像の隅と境界線を保持し、
        <see cref="P:C1.Win.C1FlexGrid.CellStyle.BackgroundImageLayout" />プロパティと共に使用するように設計されています。
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.DisplayEnum">
      <summary>セルテキストを表示、画像を表示、両方を表示、どちらも表示しないのいずれかを指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DisplayEnum.TextOnly">
      <summary>テキストだけを表示します（画像は表示しない）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DisplayEnum.ImageOnly">
      <summary>画像だけを表示します（テキストは表示しない）。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DisplayEnum.Overlay">
      <summary>画像の上にテキストを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DisplayEnum.Stack">
      <summary>画像の横にテキストを表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.DisplayEnum.None">
      <summary>何も表示しません（セルは空白）。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.TextDirectionEnum">
      <summary>グリッドセル内にテキストをレンダリングする方向を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextDirectionEnum.Normal">
      <summary>テキストを水平方向にレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextDirectionEnum.Up">
      <summary>テキストをセルの下から上にレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TextDirectionEnum.Down">
      <summary>テキストをセルの上から下にレンダリングします。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.BorderStyleEnum">
      <summary>表示するセル境界線の種類を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.None">
      <summary>境界線なし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Flat">
      <summary>実線のフラットな境界線</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Double">
      <summary>二重線の境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Raised">
      <summary>浮き出た境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Inset">
      <summary>くぼんだ境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Groove">
      <summary>溝付きの境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Fillet">
      <summary>フィレット付きの境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderStyleEnum.Dotted">
      <summary>点線の境界線。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.BorderDirEnum">
      <summary>セル境界線の方向を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderDirEnum.Both">
      <summary>セル境界線を両方向に描画します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderDirEnum.Horizontal">
      <summary>セル境界線を水平方向にのみ描画します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.BorderDirEnum.Vertical">
      <summary>セル境界線を垂直方向にのみ描画します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.StyleElementFlags">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトで定義されるスタイル要素を指定するフラグを格納します。
      </summary>
      <remarks>
        <para>この列挙型を使用して、スタイルを調べたり、定義されている要素を特定することができます。また、スタイルから特定の要素を削除することもできます。</para>
        <para>スタイルに定義されていない要素は、親スタイルから継承されます。</para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.None">
      <summary>要素は定義されません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Font">
      <summary>フォントを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.BackColor">
      <summary>背景色を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.ForeColor">
      <summary>前景色を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Margins">
      <summary>マージンを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Border">
      <summary>境界線を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.TextAlign">
      <summary>テキストの配置を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.TextEffect">
      <summary>テキストの 3D 効果を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.ImageAlign">
      <summary>画像の配置を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.ImageSpacing">
      <summary>画像とテキストの間の空白を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Trimming">
      <summary>長い文字列をセル内に収めるために切り詰める方法を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.WordWrap">
      <summary>長い文字列をセル内で折り返するかどうかを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Display">
      <summary>セル内にテキストまたは画像を表示するかどうかを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Format">
      <summary>データを文字列に変換するために使用される書式文字列を定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.EditMask">
      <summary>セルに入力される値を制限するために使用される編集マスクを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.ComboList">
      <summary>ドロップダウンエディタに値を挿入するために使用される選択項目リストを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.ImageMap">
      <summary>
        セルデータを画像に関連付けるために使用される
        <see cref="T:System.Collections.IDictionary" />を定義します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.DataType">
      <summary>
        セルに格納された値の
        <see cref="T:System.Type" />を定義します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.DataMap">
      <summary>
        セルデータを表示値に関連付けるために使用される
        <see cref="T:System.Collections.IDictionary" />を定義します。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.TextDirection">
      <summary>水平と垂直のどちらの方向にテキストをレンダリングするかを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.Editor">
      <summary>セルのエディタとして使用される外部コントロールを定義します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.UserData">
      <summary>任意のユーザーデータ（コントロールで使用されない）を格納します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.BackgroundImage">
      <summary>このスタイルは、背景画像を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.BackgroundImageLayout">
      <summary>このスタイルは、背景画像の配置を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.StyleElementFlags.All">
      <summary>すべてのスタイル要素。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CellStyleCollection">
      <summary>
        グリッドで定義された
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトのコレクション。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Add(System.String,C1.Win.C1FlexGrid.CellStyle)">
      <summary>
        コレクションに新しい
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトを追加します。
      </summary>
      <param name="name">新しいスタイルの名前。</param>
      <param name="basedOn">新しいスタイルのプロパティの初期化に使用される基本スタイル。</param>
      <returns>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクト。
      </returns>
      <remarks>指定された名前のスタイルがすでに存在する場合は、そのスタイルが返され、例外は生成されません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Add(System.String,System.String)">
      <summary>
        コレクションに新しい
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトを追加します。
      </summary>
      <param name="name">新しいスタイルの名前。</param>
      <param name="basedOn">新しいスタイルのプロパティの初期化に使用される基本スタイルの名前。</param>
      <returns>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Add(System.String)">
      <summary>
        コレクションに新しい空の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトを追加します。
      </summary>
      <param name="name">新しいスタイルの名前。</param>
      <returns>
        新しい
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクト。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Remove(System.Int32)">
      <summary>コレクションからカスタムスタイルを削除します。</summary>
      <param name="index">削除するスタイルのインデックス。</param>
      <remarks>組み込みスタイルは削除できません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Remove(System.String)">
      <summary>コレクションからカスタムスタイルを削除します。</summary>
      <param name="name">削除するスタイルの名前。</param>
      <remarks>組み込みスタイルは削除できません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Remove(C1.Win.C1FlexGrid.CellStyle)">
      <summary>コレクションからカスタムスタイルを削除します。</summary>
      <param name="style">コレクションから削除するスタイル。</param>
      <remarks>組み込みスタイルは削除できません。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Clear">
      <summary>すべてのスタイル（使用中のスタイルを含む）をクリアし、組み込みスタイルをリセットします。</summary>
      <remarks>
        <b>Clear</b>メソッドは、行、列、およびセルに割り当てられたカスタムスタイルも削除します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.ClearUnused">
      <summary>すべての未使用のスタイルをクリアします。</summary>
      <remarks>未使用のスタイルとは、作成されたが、どのグリッド要素にも割り当てられていない無名のスタイルです。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.Contains(System.String)">
      <summary>コレクションに特定のスタイルが含まれているかどうかを確認します。</summary>
      <param name="name">検索するスタイルの名前。</param>
      <returns>
        コレクションに
        <paramref name="name" />という名前のスタイルが含まれる場合は、 true 。そうでない場合は、 false 。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.IndexOf(C1.Win.C1FlexGrid.CellStyle)">
      <summary>コレクション内のスタイルのインデックスを取得します。</summary>
      <param name="style">検索する Style オブジェクト。</param>
      <returns>コレクション内のスタイルのインデックス。スタイルがコレクションのメンバでない場合は、-1 。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.BuildString(System.Boolean)">
      <summary>スタイルコレクションの簡潔な文字列表現を作成して返します。</summary>
      <param name="includeEmpty">属性がないスタイルを含めるかどうか。</param>
      <returns>スタイルコレクションの簡潔な文字列表現。</returns>
      <remarks>
        <para>このメソッドは、設計時の永続化を実装するために内部的に使用されます。</para>
        <para>
          また、「スキン」を実装するためにも使用できます。それには、現在のスタイルをコレクションに保存し、後で
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.ParseString(System.String)" />メソッドを使用してグリッドに適用します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyleCollection.ParseString(System.String)">
      <summary>スタイル定義を格納している文字列を解析します。</summary>
      <param name="styleDef">スタイル定義を格納している文字列。</param>
      <returns>文字列が正常に解析された場合は true、そうでない場合は false。</returns>
      <remarks>
        <para>
          通常、スタイル定義文字列は、
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.BuildString(System.Boolean)" />メソッドを呼び出して取得されます。
        </para>
        <para>
          新しい定義は現在の定義とマージされます。スタイルを完全に置換するには、新しいスタイルを解析する前に
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.Clear" />メソッドを呼び出します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal">
      <summary>スクロール可能なセルの描画に使用されるデフォルトのスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Alternate">
      <summary>スクロール可能なセルを１行ごとに描画するために使用されるスタイルを取得します。</summary>
      <remarks>
        このスタイルはデフォルトで空です。その場合、すべてのスクロール可能なセルは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal" />スタイルでレンダリングされます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Fixed">
      <summary>固定セルの描画に使用されるスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.SelectedColumnHeader">
      <summary>選択した列ヘッダの描画に使用するスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.SelectedRowHeader">
      <summary>選択した行ヘッダの描画に使用するスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Highlight">
      <summary>強調表示された選択セルの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        <para>
          コントロールにフォーカスがないときにセルを強調表示するかどうかを指定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.HighLight" />プロパティを使用します。
        </para>
        <para>
          使用できる選択の種類を指定するには、
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.SelectionMode" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Focus">
      <summary>コントロールにフォーカスがあるときに現在のセルの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        このスタイルはデフォルトで空です。その場合、フォーカスがあるセルは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal" />スタイルでレンダリングされます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Editor">
      <summary>編集中のセルの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        このスタイルはデフォルトで空です。その場合、編集中のセルは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Focus" />スタイルでレンダリングされます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Search">
      <summary>自動検索の実行中に選択されているセルの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        自動検索を有効にするには、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AutoSearch" />プロパティを使用します。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Frozen">
      <summary>フリーズセル（編集と選択は可能だが、スクロールは不可のセル）の描画に使用されるスタイルを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.NewRow">
      <summary>グリッドの下端にある新しい行テンプレート内のセルの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        新しい行テンプレートは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowAddNew" />プロパティが true に設定されている場合にのみ表示されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.EmptyArea">
      <summary>すべてのセルより下および右にあるグリッド領域を描画するために使用されるスタイルを取得します。</summary>
      <remarks>
        <para>
          このスタイルは
          <see cref="P:C1.Win.C1FlexGrid.CellStyle.BackColor" />要素と
          <see cref="P:C1.Win.C1FlexGrid.CellStyle.Border" />要素だけが使用されます。これらの要素は、最後のセルとコントロールの間にあるスペースの外観を決定します。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.CellBorder.Color" />値は、シートの周囲に描画する線の色と、静止セルとスクロール可能セル間の線の色を指定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.FilterEditor">
      <summary>列のフィルタエディタの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        このスタイルは、グリッドの
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.AllowFiltering" />プロパティが true に設定されている場合にのみ使用されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Item(System.Int32)">
      <summary>
        インデックスに基づいて
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Item(C1.Win.C1FlexGrid.CellStyleEnum)">
      <summary>
        スタイルの種類に基づいて組み込みの
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Item(System.String)">
      <summary>
        名前に基づいて
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を取得します。
      </summary>
      <remarks>指定された名前が存在しない場合、このインデクサは null を返します。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.Count">
      <summary>
        コレクション内の
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトの数を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CellStyle">
      <summary>
        <b>CellStyle</b>クラスは、グリッドセルの外観を制御するプロパティをカプセル化します。この情報には、背景色、前景色、フォント、テキストと画像の配置方法などが含まれます。
      </summary>
      <remarks>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Styles" />プロパティは、グリッドスタイルのコレクションを公開し、グリッドのスタイルを作成または削除するメソッドを持ちます。
        </para>
        <para>設計時にスタイルを作成および定義するには、グリッドを右クリックし、［スタイルの編集］メニューオプションを選択します。</para>
        <para>
          スタイルは、 Microsoft Word のスタイルやカスケードスタイルシートに似た階層構造になっています。
          <b>CellStyle</b>オブジェクトのすべてのプロパティを指定する必要はありません。指定しないプロパティの値は、親スタイルから継承されます。親スタイルは、通常、組み込みの
          <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal" />スタイルです。
        </para>
        <para>
          特定のスタイルで定義されている要素を特定するには、
          <see cref="P:C1.Win.C1FlexGrid.CellStyle.DefinedElements" />プロパティを使用します。
        </para>
        <para>
          <b>CellStyle</b>オブジェクトのプロパティを変更すると、そのスタイルを使用しているすべてのセルが自動的に変更を反映して再描画されます。
        </para>
        <para>
          スタイルは、次の例で示すように、
          <see cref="T:C1.Win.C1FlexGrid.CellRange" />、
          <see cref="T:C1.Win.C1FlexGrid.Row" />、および
          <see cref="T:C1.Win.C1FlexGrid.Column" />オブジェクトに割り当てることができます。
        </para>
      </remarks>
      <example>
        <para>
          次の例は、３つの
          <b>CellStyle</b>オブジェクトを作成し、それらをグリッドの行、列、およびセル範囲に割り当てます。
        </para>
        <code lang="VB.NET">' 赤色の背景を使用するスタイルを作成します。 Dim cs As CellStyle = flex.Styles.Add("red") cs.BackColor = Color.Red ' 緑色の背景を使用するスタイルを作成します。 cs = flex.Styles.Add("green") cs.BackColor = Color.Green ' 太字フォントを使用するスタイルを作成します。 cs = flex.Styles.Add("bold") cs.Font = New Font("Tahoma", 8, FontStyle.Bold) ' red スタイルを列に割り当てます。 flex.Cols(3).Style = flex.Styles("red") ' green スタイルを行に割り当てます。 flex.Rows(3).Style = flex.Styles("green") ' bold スタイルをセル範囲に割り当てます。 Dim rg As CellRange = flex.GetCellRange(2, 2, 4, 4) rg.Style = flex.Styles("bold")</code>
        <code lang="C#">// 赤色の背景を使用するスタイルを作成します。 CellStyle cs = _flex.Styles.Add("red"); cs.BackColor = Color.Red; // 緑色の背景を使用するスタイルを作成します。 cs = _flex.Styles.Add("green"); cs.BackColor = Color.Green; // 太字フォントを使用するスタイルを作成します。 cs = _flex.Styles.Add("bold"); cs.Font = new Font("Tahoma", 8, FontStyle.Bold); // red スタイルを列に割り当てます。 _flex.Cols[3].Style = _flex.Styles["red"]; // green スタイルを行に割り当てます。 _flex.Rows[3].Style = _flex.Styles["green"]; // bold スタイルをセル範囲に割り当てます。 CellRange rg = _flex.GetCellRange(2, 2, 4, 4); rg.Style = _flex.Styles["bold"];</code>
        <para>
          このコードを実行すると、グリッドの３番目の列が赤色の背景で描画されます。３番目の行は緑色の背景で描画されます。両者が交差する位置にあるセルは赤色で描画されます。これは、行スタイルより列スタイルが優先するためです。これらのセルの残りのスタイル要素（フォント、配置方法など）は、新しいスタイルで定義されていないため、親スタイル（
          <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Normal" />）から自動的に継承されます。
        </para>
        <para>交差位置の周囲のセルは太字フォントになります。太字フォントを定義しているスタイルは背景色を指定していないため、その要素は親スタイル（「 red 」、「 green 」、または「 normal 」）から継承されます。</para>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Clear(C1.Win.C1FlexGrid.StyleElementFlags)">
      <summary>選択された要素をこのスタイルからクリアします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Clear">
      <summary>このスタイルのすべての要素をクリアします。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.MergeWith(C1.Win.C1FlexGrid.CellStyle)">
      <summary>ソーススタイルに定義されているすべての要素をこのスタイルにコピーします。</summary>
      <remarks>
        このメソッドは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyle.DataType" />や
        <see cref="P:C1.Win.C1FlexGrid.CellStyle.Format" />などの既存のスタイル要素を維持するスタイルを作成するために使用されます。
      </remarks>
      <example>
        <para>
          次のコードは、
          <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Frozen" />スタイルに定義されているすべての要素を列のスタイルにコピーします。コピー元の
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />で定義していないスタイル要素は維持されます。
        </para>
        <code lang="VB.NET">' ComboBoxを追加します(列のスタイルに保存されます)。 flex.Cols(2).ComboList = "A|B|C|D|E|F" ' ComboBoxの設定を失うことなく、新しいスタイルを列に適用します。 flex.Cols(2).Style.MergeWith(flex.Styles.Frozen) '' 次のコードは正しく動作しません。 '' 列のスタイルに保存されていたComboBoxの設定が失われます。 ''flex.Cols(2).Style = flex.Styles.Frozen</code>
        <code lang="C#">// ComboBoxを追加します(列のスタイルに保存されます)。 flex.Cols[2].ComboList = "A|B|C|D|E|F"; // ComboBoxの設定を失うことなく、新しいスタイルを列に適用します。 flex.Cols[2].Style.MergeWith(flex.Styles.Frozen); // 次のコードは正しく動作しません。 // 列のスタイルに保存されていたComboBoxの設定が失われます。 //flex.Cols[2].Style = flex.Styles.Frozen;</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.BuildString">
      <summary>このスタイルの簡潔な文字列表現を返します。</summary>
      <returns>
        この
        <b>CellStyle</b>で定義されたすべてのスタイル要素の設定を含む文字列。
      </returns>
      <remarks>
        <para>
          返される文字列には、この
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />によって定義されたスタイル要素の定義だけが含まれます。その他のスタイルから継承された要素は含まれません。特定の要素を含む文字列を構築するには、代わりに
          <see cref="M:C1.Win.C1FlexGrid.CellStyle.BuildString(C1.Win.C1FlexGrid.StyleElementFlags)" />メソッドを使用します。
        </para>
      </remarks>
      <example>
        <para>次のコードは、カスタムフォントと背景色を持つスタイルを作成し、新しいスタイルを表す文字列を構築します。次に、この文字列を使用して、２番目のスタイルを初期化します。</para>
        <code lang="VB.NET">' カスタムフォントおよび背景色を持つスタイルを作成します。 Dim cs As C1.Win.C1FlexGrid.CellStyle = flex.Styles.Add("s1") cs.Font = New Font("Arial", 12, FontStyle.Bold) cs.BackColor = Color.Beige ' スタイルの定義を文字列に保存します。 Dim styleDef As String = cs.BuildString ' 文字列を使用して別のスタイルを初期化します。 Dim csNew As C1.Win.C1FlexGrid.CellStyle = flex.Styles.Add("s2") csNew.ParseString(styleDef) ' スタイルを比較します Console.WriteLine(csNew.Font.Equals(cs.Font)) Console.WriteLine(csNew.BackColor.Equals(cs.BackColor))</code>
        <code lang="C#">// カスタムフォントおよび背景色を持つスタイルを作成します。 C1.Win.C1FlexGrid.CellStyle cs = flex.Styles.Add("s1"); cs.Font = new Font("Arial", 12, FontStyle.Bold); cs.BackColor = Color.Beige; // スタイルの定義を文字列に保存します。 string styleDef = cs.BuildString(); // 文字列を使用して別のスタイルを初期化します。 C1.Win.C1FlexGrid.CellStyle csNew = flex.Styles.Add("s2"); csNew.ParseString(styleDef); // スタイルを比較します Console.WriteLine(csNew.Font.Equals(cs.Font)); Console.WriteLine(csNew.BackColor.Equals(cs.BackColor));</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.BuildString(C1.Win.C1FlexGrid.StyleElementFlags)">
      <summary>
        この
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />の文字列表示を返します。
      </summary>
      <param name="elements">
        文字列に含まれるスタイル要素を指定する
        <see cref="T:C1.Win.C1FlexGrid.StyleElementFlags" />。
      </param>
      <returns>指定したスタイル要素の設定を含む文字列。</returns>
      <remarks>
        <para>このメソッドを使用し、グリッドスタイルを保持し、スキンを定義および保存できます。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.BuildString(System.Boolean)" />メソッドと
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.ParseString(System.String)" />メソッドを 参照してください。
        </para>
      </remarks>
      <example>
        <para>
          以下のコードは、
          <paramref name="elements" />パラメータに異なる値を指定した場合の効果を示します。１つはスタイルに実際に定義された要素のみを含む短い文字列、もう１つはすべてのスタイル要素を含む文字列を構築します。
        </para>
        <code lang="VB.NET">' 短いバージョンと長いバージョンのスタイル定義文字列を構築します。 Dim s1 As String = flex.Styles.Fixed.BuildString() Dim s2 As String = flex.Styles.Fixed.BuildString(StyleElementFlags.All) ' 両方のスタイル定義を表示します。 Console.WriteLine("{0}: {1}", s1.Length, s1) Console.WriteLine("{0}: {1}", s2.Length, s2)</code>
        <code lang="C#">// 短いバージョンと長いバージョンのスタイル定義文字列を構築します。 string s1 = _flex.Styles.Fixed.BuildString(); string s2 = _flex.Styles.Fixed.BuildString(StyleElementFlags.All); // 両方のスタイル定義を表示します。 Console.WriteLine("{0}: {1}", s1.Length, s1); Console.WriteLine("{0}: {1}", s2.Length, s2);</code>
      </example>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.ParseString(System.String)">
      <summary>文字列に格納されている説明に基づいてスタイルを再構築します。</summary>
      <returns>文字列が正常に解析された場合は true、それ以外の場合は false。</returns>
      <remarks>
        <para>このメソッドを使用して、グリッドスタイルを永続化します。また、「スキン」の定義および保存に使用できます。</para>
        <para>
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.BuildString(System.Boolean)" />メソッドと
          <see cref="M:C1.Win.C1FlexGrid.CellStyleCollection.ParseString(System.String)" />メソッドを参照してください。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image,C1.Win.C1FlexGrid.DrawCellFlags)">
      <summary>このスタイルを使用して、文字列と画像を Graphics オブジェクトにレンダリングします。</summary>
      <param name="g">
        レンダリング先の
        <see cref="T:System.Drawing.Graphics" />オブジェクト。
      </param>
      <param name="rc">要素が表示される領域。</param>
      <param name="str">レンダリングするテキスト。</param>
      <param name="img">レンダリングする画像。</param>
      <param name="flags">
        レンダリングされる要素を決定する
        <see cref="T:C1.Win.C1FlexGrid.DrawCellFlags" />の組み合わせ。
      </param>
      <remarks>
        このメソッドにより、
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトを使用して、グリッドの外にオブジェクトをレンダリングできます。オーナー描画アプリケーションやスタイルエディタなどを実装する場合に便利です。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.String,System.Drawing.Image)">
      <summary>このスタイルを使用して、文字列と画像を Graphics オブジェクトにレンダリングします。</summary>
      <param name="g">
        レンダリング先の
        <see cref="T:System.Drawing.Graphics" />オブジェクト。
      </param>
      <param name="rc">要素が表示される領域。</param>
      <param name="str">レンダリングするテキスト。</param>
      <param name="img">レンダリングする画像。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.String)">
      <summary>このスタイルを使用して、文字列と画像を Graphics オブジェクトにレンダリングします。</summary>
      <param name="g">
        レンダリング先の
        <see cref="T:System.Drawing.Graphics" />オブジェクト。
      </param>
      <param name="rc">要素が表示される領域。</param>
      <param name="str">レンダリングするテキスト。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Render(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)">
      <summary>このスタイルを使用して、文字列と画像を Graphics オブジェクトにレンダリングします。</summary>
      <param name="g">
        レンダリング先の
        <see cref="T:System.Drawing.Graphics" />オブジェクト。
      </param>
      <param name="rc">要素が表示される領域。</param>
      <param name="img">レンダリングする画像。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.GetContentRectangle(System.Drawing.Rectangle)">
      <summary>セルの矩形のコンテンツ部分を取得します。</summary>
      <param name="rc">セルの矩形。</param>
      <returns>セルの枠線によって占められる領域を除いた、 セルのコンテンツ部分を表す矩形。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.GetTextRectangle(System.Drawing.Rectangle,System.Drawing.Image)">
      <summary>セルの矩形のテキスト部分を取得します。</summary>
      <param name="rc">セルの矩形。</param>
      <param name="img">セル領域をテキストと共有する画像。</param>
      <returns>セルの枠線、埋め込み、および画像によって占められる領域を除いた、 セルのテキスト部分を表す矩形。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.GetImageRectangle(System.Drawing.Rectangle,System.Drawing.Image)">
      <summary>セルの矩形の画像部分を取得します。</summary>
      <param name="rc">セルの矩形。</param>
      <param name="img">セルに表示する画像。</param>
      <returns>セルの枠線と埋め込みによって占められる領域を除いた、 セルの画像部分を表す矩形。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.Equals(System.Object)">
      <summary>
        ２つの
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクトが同じかどうかを判定します。
      </summary>
      <param name="o">このスタイルと比較するスタイル。</param>
      <returns>２つのスタイルが等しい場合は true、そうでない場合は false。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.CellStyle.GetHashCode">
      <summary>特定の型に対するハッシュ関数として機能します。ハッシュアルゴリズムやハッシュテーブルなどのデータ構造内で使用できます。</summary>
      <returns>スタイルのインスタンスのハッシュコード。</returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Name">
      <summary>スタイル名を取得または設定します。</summary>
      <remarks>
        <para>スタイル名は一意である必要があります。スタイル名をすでに存在するスタイルの名前に設定すると、例外が生成されます。</para>
        <para>スタイル名には１文字以上が必要で、中かっこ（「{」と「}」）は使用できません。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.BackColor">
      <summary>セルの背景を描画するために使用される色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.ForeColor">
      <summary>セル内のテキストの色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Font">
      <summary>セル内のテキストの描画に使用されるフォントを取得または設定します。</summary>
      <remarks>
        コントロールの
        <b>Font</b>プロパティを設定すると、
        <b>Normal</b>スタイルの
        <b>Font</b>プロパティが自動的に設定されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Margins">
      <summary>セルの端から内容までのマージンをピクセル単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.WordWrap">
      <summary>文字列をセル内で自動的に折り返すかどうかを取得または設定します。</summary>
      <remarks>
        <para>このプロパティは、グリッドがスペースを含む長い文字列を自動的に改行し、複数行に表示するかどうかを指定します。</para>
        <para>強制改行（vbCrLf または "\n\r"）を含む文字列は常に複数行に表示されます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Trimming">
      <summary>長い文字列をセル内に収めるために切り詰める方法を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.TextAlign">
      <summary>テキストの配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.TextEffect">
      <summary>テキストの描画に使用される 3D 効果を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.TextDirection">
      <summary>テキストをレンダリングする方向を取得または設定します。</summary>
      <remarks>垂直方向にレンダリングされたセルでも、通常どおり、サイズの自動調整を行えます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.ImageAlign">
      <summary>画像の配置を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.ImageSpacing">
      <summary>セル内の画像とテキストの間の空白をピクセル単位で取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Display">
      <summary>画像、テキスト、その両方のどれを表示するかを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Format">
      <summary>値の表示に使用される書式文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.EditMask">
      <summary>値の編集に使用されるマスク文字列を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.ComboList">
      <summary>スタイルで使用するドロップダウンエディタのリストを取得または設定します。</summary>
      <remarks>
        <para>
          <b>ComboList</b>プロパティは、セルの編集時に使用するエディタの種類を指定します。テキストボックス、ドロップダウンリスト、ドロップダウンコンボを使用するか、カスタムエディタフォームをポップアップするためのセルボタンを使用できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.ImageMap">
      <summary>
        セル値を画像に関連付けるために使用される
        <see cref="T:System.Collections.IDictionary" />を取得または設定します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.DataMap">
      <summary>
        このスタイルでデータ値を表示値に変換するために使用される
        <see cref="T:System.Collections.IDictionary" />を取得または設定します。
      </summary>
      <remarks>
        <para>
          <b>DataMap</b>プロパティを使用すると、「値変換付き」の行または列を実装できます。値変換付きの行または列では、セルに格納されている値が表示されません。代わりに、その値を列の
          <b>DataMap</b>で検索し、マップ先の値が表示されます。
        </para>
        <para>
          列が編集可能な場合は、ドロップダウンリストに値を挿入するためにも
          <b>DataMap</b>値が使用されます。
        </para>
        <para>
          また、
          <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />クラスを使用して、複数列およびデータ連結ドロップダウンを作成できます。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.DataType">
      <summary>スタイルのデータ型を取得または設定します。</summary>
      <remarks>
        <para>グリッドがデータソースに連結されている場合、このプロパティは、データスキーマに基づいて自動的に設定されます。</para>
        <para>このプロパティを使用すると、セルに割り当てられている値を適切な型に変換できます。</para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Border">
      <summary>このスタイルに関連付けられた CellBorder オブジェクトを取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.Editor">
      <summary>このスタイルを持つセルの編集に使用されるカスタムエディタを取得または設定します。</summary>
      <remarks>
        <para>グリッドには、編集対象セルのプロパティに基づいて自動的に選択される、複数の組み込みエディタが用意されています。</para>
        <para>
          このプロパティを使用して、特定の
          <see cref="T:C1.Win.C1FlexGrid.CellStyle" />を持つセルを編集する際に外部エディタを使用することができます。任意のコントロールを外部エディタとして使用することができますが、グリッドに完全に統合させるには、外部エディタが
          <see cref="T:C1.Win.C1FlexGrid.IC1EmbeddedEditor" />インタフェースを実装している必要があります。
        </para>
        <para>
          詳細は、「
          <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Editor" />」プロパティを参照してください。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.UserData">
      <summary>このスタイルに関連する任意のユーザーデータを取得または設定します。</summary>
      <remarks>このデータは、コントロールでは使用されませんが、アプリケーションにとって有効な任意のデータの保存に使用できます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.BackgroundImage">
      <summary>スタイルの背景画像を取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティは、
          <see cref="P:C1.Win.C1FlexGrid.CellStyle.BackgroundImageLayout" />と連動して、 セル内に背景画像を描画するかどうか、および描画方法を決定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.BackgroundImageLayout">
      <summary>スタイルが背景画像を拡大／縮小して配置する方法を決定する値を 取得または設定します。</summary>
      <remarks>
        <para>
          このプロパティは、
          <see cref="P:C1.Win.C1FlexGrid.CellStyle.BackgroundImage" />と連動して、 セル内に背景画像を描画するかどうか、および描画方法を決定します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.DefinedElements">
      <summary>このスタイルで定義されている要素を取得または設定します。</summary>
      <remarks>
        特定のスタイルで定義されていない要素は、親スタイル（通常は
        <b>Normal</b>スタイル）から自動的に継承されます。たとえば、
        <see cref="P:C1.Win.C1FlexGrid.CellStyle.Font" />プロパティを定義するカスタムスタイルを作成する場合、その他すべての要素（背景色、配置など）は、親スタイルから継承されます。このスタイルは、
        <b>Normal</b>スタイルか、行または列に割り当てられた別のカスタムスタイルです。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyle.StringFormat">
      <summary>
        <b>C1FlexGrid.UseCompatibleTextRendering</b>プロパティが true に設定されているときに 文字列を表示するために使用される
        <see cref="P:C1.Win.C1FlexGrid.CellStyle.StringFormat" />の 要素を取得します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.CellBorder">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.CellBorder" />クラスは、
        <see cref="T:C1.Win.C1FlexGrid.CellStyle" />オブジェクト内の境界線の外観を制御するプロパティをカプセル化します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellBorder.Style">
      <summary>境界線のスタイルを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellBorder.Direction">
      <summary>境界線の方向を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellBorder.Color">
      <summary>境界線の色（ 3D 境界線を除く）を取得または設定します。</summary>
      <remarks>3D 境界線は常に、強調表示と影が設定されたシステム色を使用して描画されます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellBorder.Width">
      <summary>境界線の幅（ 3D 境界線を除く）を取得または設定します。</summary>
      <remarks>3D 境界線の幅は常に１または２ピクセルです。</remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.TreeStyleFlags">
      <summary>アウトラインツリーの外観を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.None">
      <summary>アウトラインツリーを表示しません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.Lines">
      <summary>ノード行の横にツリーの線を表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.Symbols">
      <summary>ノード行に展開／折りたたみ記号を表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.ButtonBar">
      <summary>上端の固定行にアウトラインボタンを並べて表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.Leaf">
      <summary>すべての行（ノードとデータ）の横にツリーの線を表示します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.Complete">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Lines" />、
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Symbols" />、および
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.ButtonBar" />の組み合わせ。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.Simple">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Lines" />および
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Symbols" />の組み合わせ。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.CompleteLeaf">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Lines" />、
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Symbols" />、
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.ButtonBar" />、および
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Leaf" />の組み合わせ。
      </summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.TreeStyleFlags.SimpleLeaf">
      <summary>
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Lines" />、
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Symbols" />、および
        <see cref="F:C1.Win.C1FlexGrid.TreeStyleFlags.Leaf" />の組み合わせ。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridTree">
      <summary>GridTree クラスは、アウトラインツリーの外観、位置、および動作を指定するプロパティをカプセル化します。</summary>
      <remarks>
        各グリッドには、１つの GridTree オブジェクトがあります。このオブジェクトは、
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Tree" />プロパティを使用して取得できます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridTree.Clear">
      <summary>
        <see cref="P:C1.Win.C1FlexGrid.C1FlexGridBase.Tree" />オブジェクトをリセットします。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridTree.Show(System.Int32)">
      <summary>すべてのノードを指定されたレベルまで展開し、その他は折りたたみます。</summary>
      <param name="level">
        表示するレベル。これより高い
        <see cref="P:C1.Win.C1FlexGrid.Node.Level" />のノードは折りたたまれ、その他のノードは展開されます。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridTree.Sort(System.Int32,C1.Win.C1FlexGrid.SortFlags,System.Int32,System.Int32)">
      <summary>すべてのノードを指定されたレベルでソートします。</summary>
      <param name="level">ソートするノードのレベル。</param>
      <param name="order">
        ソートの方向とオプションを制御する
        <see cref="T:C1.Win.C1FlexGrid.SortFlags" />値。
      </param>
      <param name="col1">ソートする列の範囲の始まり。</param>
      <param name="col2">ソートする列の範囲の終わり。</param>
      <remarks>
        <para>グリッドにはデータを含む通常の行と、データをグループ化するために使用するノード行の２種類の行が存在します。このメソッドは行ノードのみソートします。各ノード内のデータ行の並べ替えは行いません。</para>
        <para>
          データ行をソートするには、代わりにグリッドの
          <see cref="M:C1.Win.C1FlexGrid.C1FlexGridBase.Sort(C1.Win.C1FlexGrid.SortFlags,System.Int32)" />メソッドを使用します。
        </para>
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridTree.Sort(System.Int32,System.Collections.IComparer)">
      <summary>指定されたレベルのノードを特定の順序でソートします。</summary>
      <param name="level">ソートするノードのレベル</param>
      <param name="comparer">
        <see cref="T:C1.Win.C1FlexGrid.Node" />オブジェクトを比較する
        <see cref="T:System.Collections.IComparer" />オブジェクト
      </param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.LineColor">
      <summary>アウトラインツリー内の線の色を取得または設定します。</summary>
      <remarks>
        <see cref="P:C1.Win.C1FlexGrid.GridTree.Style" />プロパティも参照してください。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.LineStyle">
      <summary>アウトラインツリーの描画に使用する線スタイルを取得または設定します。</summary>
      <remarks>
        デフォルトでは、このプロパティはツリーを点線で描画する
        <b>DashStyle.Dot</b>に設定されています。このプロパティの値を変更して、実線でツリーを描画することができます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.Style">
      <summary>アウトラインツリーのスタイルを取得または設定します。</summary>
      <remarks>
        <para>
          Style プロパティを使用して、ノードとノードの折りたたみ／展開ボタンをつなぐ線をアウトラインツリーに表示するかどうかを指定します。詳細については、
          <see cref="T:C1.Win.C1FlexGrid.TreeStyleFlags" />列挙型を参照してください。
        </para>
        <para>
          グリッドにアウトラインツリーを表示する位置を指定するには、
          <see cref="P:C1.Win.C1FlexGrid.GridTree.Column" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.Column">
      <summary>アウトラインツリーが表示される列のインデックスを取得または設定します。</summary>
      <remarks>デフォルトでは、このプロパティは -1 に設定されます。これは、ツリーを非表示にします。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.Indent">
      <summary>各ツリーレベルのインデントをピクセル単位で取得または設定します。</summary>
      <remarks>
        設定した Indent プロパティの値が小さすぎて、
        <see cref="P:C1.Win.C1FlexGrid.GridTree.NodeImageCollapsed" />および
        <see cref="P:C1.Win.C1FlexGrid.GridTree.NodeImageExpanded" />画像を表示できない場合は、画像を表示できるように値が調整されます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.NodeImageCollapsed">
      <summary>折りたたまれたされたノードの横に表示される画像を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを null に設定すると、値がリセットされ、デフォルトの画像（プラス記号）が使用されます。</para>
        <para>
          この画像を非表示にするには、
          <see cref="P:C1.Win.C1FlexGrid.GridTree.Style" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.NodeImageExpanded">
      <summary>展開されたノードの横に表示される画像を取得または設定します。</summary>
      <remarks>
        <para>このプロパティを null に設定すると、値がリセットされ、デフォルトの画像（マイナス記号）が使用されます。</para>
        <para>
          この画像を非表示にするには、
          <see cref="P:C1.Win.C1FlexGrid.GridTree.Style" />プロパティを使用します。
        </para>
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridTree.MaximumLevel">
      <summary>アウトラインの最も深いノードのレベルを取得します。</summary>
      <remarks>
        このプロパティは、アウトラインレベルをパラメータとして取るメソッド （
        <see cref="M:C1.Win.C1FlexGrid.GridTree.Sort(System.Int32,C1.Win.C1FlexGrid.SortFlags,System.Int32,System.Int32)" />、
        <see cref="M:C1.Win.C1FlexGrid.GridTree.Show(System.Int32)" />など）と共に使用できます。
      </remarks>
    </member>
    <member name="T:C1.Win.C1FlexGrid.RuntimeStrings">
      <summary>デザイナによって使用される UI 文字列を含む静的クラス。</summary>
    </member>
    <member name="T:C1.Util.Localization.Language">
      <summary>コントロールのローカライズに使用する言語を指定します。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Default">
      <summary>コントロールを CurrentUICulture で指定された言語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Arabic">
      <summary>コントロールをアラビア語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Czech">
      <summary>コントロールをチェコ語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Danish">
      <summary>コントロールをデンマーク語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Dutch">
      <summary>コントロールをオランダ語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.English">
      <summary>コントロールを英語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Finnish">
      <summary>コントロールをフィンランド語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.French">
      <summary>コントロールをフランス語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.German">
      <summary>コントロールをドイツ語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Greek">
      <summary>コントロールをギリシャ語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Hebrew">
      <summary>コントロールをヘブライ語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Italian">
      <summary>コントロールをイタリア語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Japanese">
      <summary>コントロールを日本語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Norwegian">
      <summary>コントロールをノルウェー語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Polish">
      <summary>コントロールをポーランド語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Portuguese">
      <summary>コントロールをポルトガル語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Russian">
      <summary>コントロールをロシア語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Slovak">
      <summary>コントロールをスロバキア語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Spanish">
      <summary>コントロールをスペイン語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Swedish">
      <summary>コントロールをスウェーデン語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Chinese">
      <summary>コントロールを中国語（簡体字、PRC、およびシンガポール）にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Turkish">
      <summary>コントロールをトルコ語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Persian">
      <summary>コントロールをペルシア語（ファルシ語）にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Korean">
      <summary>コントロールを韓国語にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.ChineseTraditional">
      <summary>コントロールを中国語（繁体字、台湾、香港、およびマカオ）にローカライズします。</summary>
    </member>
    <member name="F:C1.Util.Localization.Language.Hungarian">
      <summary>コントロールをハンガリー語にローカライズします。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Util.BaseControls.BorderStyleEnum">
      <summary>コントロールの周囲に描画される境界線の種類を指定します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.Util.BaseControls.BorderStyleEnum.None">
      <summary>境界線なし。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.Util.BaseControls.BorderStyleEnum.FixedSingle">
      <summary>単線の境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.Util.BaseControls.BorderStyleEnum.Fixed3D">
      <summary>3D 境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.Util.BaseControls.BorderStyleEnum.Light3D">
      <summary>明るいくぼんだ境界線。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.Util.BaseControls.BorderStyleEnum.XpThemes">
      <summary>XP テーマを使用して描画される境界線。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Util.Styles.Style">
      <summary>Style は、名前／オブジェクトのエントリ、親 Style への参照、およびそこに含まれる StyleContext への参照によって表される任意の属性のコレクションです。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.VisualStyle">
      <summary>コントロールで適用できる表示スタイル</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Custom">
      <summary>いずれのVisualStyleも使用しません。グリッドはスタイルおよびプロパティにより描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.System">
      <summary>現在のシステム設定に基づく外観でグリッドが描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Office2007Blue">
      <summary>Office 2007 の配色：青色に基づく外観でグリッドが描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Office2007Silver">
      <summary>Office 2007 の配色：銀色に基づく外観でグリッドが描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Office2007Black">
      <summary>Office 2007 の配色：黒色に基づく外観でグリッドが描画されます。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Office2010Blue">
      <summary>Office 2010 Blue カラースキームに基づく外観を持つコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Office2010Silver">
      <summary>Office 2010 Silver カラースキームに基づく外観を持つコントロールをレンダリングします。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.VisualStyle.Office2010Black">
      <summary>Office 2010 Black カラースキームに基づく外観を持つコントロールをレンダリングします。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.C1FlexGridRenderer">
      <summary>カスタムグリッドレンダラの抽象ベースクラスを表します。</summary>
      <remarks>
        カスタムグリッドレンダラを作成するには、このクラスから継承し、 必要な仮想メソッドとプロパティをオーバーライドして、クラスのインスタンスをグリッドの
        <b>Renderer</b>プロパティに割り当てます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridRenderer.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridRenderer.OnDrawCell(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.OwnerDrawCellEventArgs)">
      <summary>任意のタイプのグリッドセルを表示します。</summary>
      <param name="flex">
        表示されるセルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="e">
        表示されるセルに関する情報を提供する
        <see cref="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs" />。
      </param>
      <remarks>
        このメソッドは、表示されるセルのタイプを決定し、そのタイプを渡して
        <see cref="M:C1.Win.C1FlexGrid.C1FlexGridRenderer.OnDrawCell(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.OwnerDrawCellEventArgs,C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType)" />メソッドを呼び出します。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridRenderer.OnDrawCell(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.OwnerDrawCellEventArgs,C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType)">
      <summary>特定のタイプのグリッドセルを１つ表示します。</summary>
      <param name="flex">
        表示されるセルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="e">
        表示されるセルに関する情報を提供する
        <see cref="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs" />。
      </param>
      <param name="cellType">
        表示されるセルのタイプを決める
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />の値。
      </param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridRenderer.GetBackgroundBrush(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType,System.Drawing.Rectangle)">
      <summary>
        特定のセルタイプのセル背景をペイントするために使用される
        <see cref="T:System.Drawing.Brush" />オブジェクトを取得します。
      </summary>
      <param name="flex">
        表示されるセルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="cellType">
        表示されるセルのタイプを決める
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />の値。
      </param>
      <param name="bounds">
        表示されるセルの範囲を表す
        <see cref="T:System.Drawing.Rectangle" />。
      </param>
      <returns>
        セル背景の表示に使用される
        <see cref="T:System.Drawing.Brush" />オブジェクト。
      </returns>
      <remarks>
        <paramref name="bounds" />パラメータを使用すれば、グラデーションや タイル画像のブラシのような複雑なブラシを作成したり、選択したりできます。
      </remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGridRenderer.GetBorderPen(C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType)">
      <summary>
        セルの枠線をペイントするために使用される
        <see cref="T:System.Drawing.Pen" />オブジェクトを取得します。
      </summary>
      <param name="cellType">
        表示されるセルのタイプを決める
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />の値。
      </param>
      <returns>
        セルの枠線をペイントするために使用される
        <see cref="T:System.Drawing.Pen" />オブジェクト。
      </returns>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridRenderer.TracksSelection">
      <summary>このレンダラで通常のセルとは異なる選択セルを 表示するかどうかを決める値を取得します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridRenderer.TracksMouse">
      <summary>このレンダラで通常のセルとは異なるホットセルを 表示するかどうかを決める値を取得します。</summary>
      <remarks>ホットセルは、現在マウスポインタの下にあるセルです。レンダラでマウスを追跡する場合は、 マウスポインタをグリッド上で動かすとレンダラが呼び出されます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridRenderer.HeaderForeColor">
      <summary>通常の状態のヘッダーセルの前景色を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType">
      <summary>表示されるセルのタイプを表します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.Normal">
      <summary>通常のスクロール可能なセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.TopLeft">
      <summary>左上の固定セル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.ColumnHeader">
      <summary>列ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.ColumnHeaderSelected">
      <summary>選択された列ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.ColumnHeaderHot">
      <summary>現在マウスポインタの下にある列ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.ColumnHeaderSelectedHot">
      <summary>現在マウスポインタの下にある、選択された列ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.RowHeader">
      <summary>行ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.RowHeaderSelected">
      <summary>選択された行ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.RowHeaderHot">
      <summary>現在マウスポインタの下にある行ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.RowHeaderSelectedHot">
      <summary>現在マウスポインタの下にある、選択された行ヘッダセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.Highlight">
      <summary>選択された通常のセル。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType.Cursor">
      <summary>カーソルを含むセル。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2007">
      <summary>Office2007 スタイルレンダラの抽象ベースクラスを表します。</summary>
      <remarks>新しい高品質レンダラを作成する最も簡単な方法は、このクラスから派生させて、 レンダラを定義する 25 色を初期化するコンストラクタを 提供することです。</remarks>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007" />の新しいインスタンスを初期化します。
      </summary>
      <param name="clrHighlight">ハイライトされたセルの背景色。</param>
      <param name="clrTopLeftBorder">一番左上にある固定セル周囲のボーダーの色。</param>
      <param name="clrTopLeft">一番左上にある固定セルの背景色。</param>
      <param name="clrImg1">一番左上にある固定セルのイメージに使用される、グラデーション背景の１番目の色。</param>
      <param name="clrImg2">一番左上にある固定セルのイメージに使用される、グラデーション背景の２番目の色。</param>
      <param name="clrCol1">列ヘッダに使用される、グラデーション背景の１番目の色。</param>
      <param name="clrCol2">列ヘッダに使用される、グラデーション背景の２番目の色。</param>
      <param name="clrColBorder">列ヘッダ周囲のボーダーの色。</param>
      <param name="clrColSel1">選択された列ヘッダに使用される、グラデーション背景の１番目の色。</param>
      <param name="clrColSel2">選択された列ヘッダに使用される、グラデーション背景の２番目の色。</param>
      <param name="clrSelBorder">選択された列ヘッダ周囲のボーダーの色。</param>
      <param name="clrColHot1">ホットな列ヘッダに使用される、グラデーション背景の１番目の色。</param>
      <param name="clrColHot2">ホットな列ヘッダに使用される、グラデーション背景の２番目の色。</param>
      <param name="clrHotBorder">ホットな列ヘッダ周囲のボーダーの色。</param>
      <param name="clrColSelHot1">選択されたホットな列ヘッダに使用される、グラデーション背景の１番目の色。</param>
      <param name="clrColSelHot2">選択されたホットな列ヘッダに使用される、グラデーション背景の２番目の色。</param>
      <param name="clrSelHotBorder">選択されたホットな列ヘッダ周囲のボーダーの色。</param>
      <param name="clrRow">行ヘッダの背景色。</param>
      <param name="clrRowBorder">行ヘッダ周囲のボーダーの色。</param>
      <param name="clrRowSel">選択された行ヘッダの背景色。</param>
      <param name="clrRowSelBorder">選択された行ヘッダ周囲のボーダーの色。</param>
      <param name="clrRowHot">ホットな行ヘッダの背景色。</param>
      <param name="clrRowHotBorder">ホットな行ヘッダ周囲のボーダーの色。</param>
      <param name="clrRowSelHot">選択されたホットな行ヘッダの背景色。</param>
      <param name="clrRowSelHotBorder">選択されたホットな行ヘッダ周囲のボーダーの色。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007.#ctor(System.Drawing.Color[])">
      <summary>
        指定のカラーパレットを使用して、
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007" />の新しいインスタンスを初期化します。
      </summary>
      <param name="p">パレットとして使用される 25 色の配列。</param>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007.GetBackgroundBrush(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType,System.Drawing.Rectangle)">
      <summary>セルの背景のブラシを取得します。</summary>
      <param name="flex">
        セルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="cellType">
        レンダリングされるセルのタイプを示す
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />値。
      </param>
      <param name="r">
        セルの領域を定義する
        <see cref="T:System.Drawing.Rectangle" />。
      </param>
      <returns>
        セルの描画に使用される
        <see cref="T:System.Drawing.Brush" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007.GetBorderPen(C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType)">
      <summary>セルボーダーの描画に使用されるペンを取得します。</summary>
      <param name="cellType">
        レンダリングされるセルのタイプを示す
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />。
      </param>
      <returns>
        セルボーダーの描画に使用される
        <see cref="T:System.Drawing.Pen" />。
      </returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007.OnDrawCell(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.OwnerDrawCellEventArgs,C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType)">
      <summary>特定のタイプの１つのグリッドセルを描画します。</summary>
      <param name="flex">
        描画されるセルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="e">
        描画されるセルに関する情報を含む
        <see cref="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs" />。
      </param>
      <param name="cellType">
        描画されるセルのタイプを決定する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />値。
      </param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridRendererOffice2007.Highlight">
      <summary>ハイライトされたセルの背景の描画に使用される色を取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridRendererOffice2007.TracksMouse">
      <summary>レンダラが、ホットセルを通常のセルと異なるようにレンダリングするかどうかを決定する値を取得します。</summary>
      <remarks>ホットセルとは、現在マウスが置かれているセルのことです。レンダラがマウスを追跡すると、マウスがグリッド上を動いたとされます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridRendererOffice2007.TracksSelection">
      <summary>レンダラが選択を追跡してハイライトされた列ヘッダや行ヘッダを描画するかどうかを決定する値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2007Blue">
      <summary>
        視覚スタイル Office2007 Blue を実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007Blue.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007Blue" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2007Silver">
      <summary>
        視覚スタイル Office2007 Silver を実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007Silver.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007Silver" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2007Black">
      <summary>
        視覚スタイル Office2007 Black を実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2007Black.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007Black" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2010Blue">
      <summary>
        Office2010 Blue 視覚スタイルを実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2010Blue.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007Blue" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2010Silver">
      <summary>
        Office2010 Silver 視覚スタイルを実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2010Silver.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007Silver" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererOffice2010Black">
      <summary>
        Office2010 Black 視覚スタイルを実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererOffice2010Black.#ctor">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.GridRendererOffice2007Black" />の新しいインスタンスを初期化します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridRendererOffice2010Black.HeaderForeColor">
      <summary>通常の状態のヘッダーセルの前景色を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.GridRendererSystem">
      <summary>
        視覚スタイル System を実装する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer" />。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.GridRendererSystem.OnDrawCell(C1.Win.C1FlexGrid.C1FlexGridBase,C1.Win.C1FlexGrid.OwnerDrawCellEventArgs,C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType)">
      <summary>特殊な型の単一のグリッドセルを描画します。</summary>
      <param name="flex">
        描画されるセルを含む
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridBase" />。
      </param>
      <param name="e">
        描画されるセルに関する情報を提供する
        <see cref="T:C1.Win.C1FlexGrid.OwnerDrawCellEventArgs" />。
      </param>
      <param name="cellType">
        描画されるセルの型を決定する
        <see cref="T:C1.Win.C1FlexGrid.C1FlexGridRenderer.CellType" />。
      </param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridRendererSystem.TracksMouse">
      <summary>レンダラが、ホットセルを通常のセルと異なるようにレンダリングするかどうかを決定する値を取得します。</summary>
      <remarks>ホットセルとは、現在マウスが置かれているセルのことです。レンダラがマウスを追跡すると、マウスがグリッド上を動いたとされます。</remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.GridRendererSystem.TracksSelection">
      <summary>レンダラが選択を追跡してハイライトされた列ヘッダや行ヘッダを描画するかどうかを決定する値を取得します。</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.Util.Styles.StyleContext">
      <summary>StyleContext には、基本 Style の定義と名前付き Style のリスト が含まれます。これは以下のサービスを提供します。 - Style の管理（Style の作成、編集、削除） - Style の継承メカニズム - メソッドのレンダリングと測定</summary>
    </member>
    <member name="T:C1.Win.C1FlexGrid.IC1MultiColumnDictionary2">
      <summary>
        <see cref="T:C1.Win.C1FlexGrid.IC1MultiColumnDictionary" />を拡張し、複数列データマップを実装するために使用できるインタフェース。
      </summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.IC1MultiColumnDictionary2.GetColumnValue(System.Object,System.Int32)">
      <summary>辞書の特定の列に含まれる文字列を取得します。</summary>
      <param name="key">辞書で検索する値。</param>
      <param name="columnIndex">辞書内の列インデックス。</param>
      <returns>編集モードでない場合にグリッドに表示される文字列。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.MultiColumnDictionary.Add(System.Object,System.Object)">
      <summary>
        指定されたキーと値を持つエントリを
        <see cref="T:C1.Win.C1FlexGrid.MultiColumnDictionary" />に追加します。
      </summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.MultiColumnDictionary.Item(System.Object)">
      <summary>指定されたキーに関連付けられている値を取得または設定します。</summary>
      <param name="i">取得または設定する値のキー。</param>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.EscPassThrough">
      <summary>［Esc］キーが押されたときに KeyPressEdit イベントと KeyUpEdit イベントが発生するかどうかを取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.IndexOf(System.String,System.Int32)">
      <summary>
        指定された名前の
        <see cref="T:C1.Win.C1FlexGrid.Column" />のインデックスを取得します。検索は、指定されたインデックスから開始されます。
      </summary>
      <param name="columnName">検索する列名（大文字小文字は区別されない）。</param>
      <param name="startIndex">検索を始めるインデックス。</param>
      <returns>このコレクション内の指定された名前を持つ列のインデックス。指定された名前の列が コレクションにない場合は、-1。</returns>
    </member>
    <member name="M:C1.Win.C1FlexGrid.ColumnCollection.IndexOf(System.String,System.Boolean,System.Int32)">
      <summary>
        指定された名前の
        <see cref="T:C1.Win.C1FlexGrid.Column" />のインデックスを取得します。 オプションで、列が見つからない場合に例外を生成できます。検索は、指定されたインデックスから開始されます。
      </summary>
      <param name="columnName">検索する列名（大文字小文字は区別されない）。</param>
      <param name="throwIfNotFound">列が見つからない場合に例外を生成するかどうか。</param>
      <param name="startIndex">検索を始めるインデックス。</param>
      <returns>このコレクション内の指定された名前を持つ列のインデックス。指定された名前の列が コレクションにない場合は、-1。</returns>
      <remarks>
        <paramref name="throwIfNotFound" />パラメータが true に設定されており、
        <paramref name="columnName" />という名前の列が見つからない場合は、
        <see cref="T:System.ArgumentOutOfRangeException" />が生成されます。これにより、列名に依存するコードを 簡潔に作成しやすくなります。
      </remarks>
      <example>
        以下の例は、
        <b>IndexOf</b>メソッドを使用して、列名をインデックスに変換します。 列名が無効な場合は、その次のメソッドではなく、
        <b>IndexOf</b>メソッドで 例外（列が見つからない）が生成されます。次のメソッドで例外が発生する場合は、 やや不明確な例外（インデックスが無効）になります。
        <code>int columnIndex = _flex.Cols.IndexOf("total"); _flex.AutoSizeCol(columnIndex);</code></example>
    </member>
    <member name="P:C1.Win.C1FlexGrid.ValueFilter.ValuesLimit">
      <summary>値フィルタで表示される値の制限数を取得または設定します。</summary>
    </member>
    <member name="M:C1.Win.C1FlexGrid.C1FlexGrid.Transpose">
      <summary>主対角線を中心にグリッドを反転します。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowButtonsEnum.Never">
      <summary>ボタンを表示しません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ShowButtonsEnum.Inherit">
      <summary>列の ShowButtons プロパティは、グリッドから継承されます。これは、列のデフォルト設定です。グリッドの ShowButtons プロパティと共には使用できません。</summary>
    </member>
    <member name="F:C1.Win.C1FlexGrid.ScrollFlags.KeepMergedRangePosition">
      <summary>結合範囲の最初のセルにコントロールをスクロールしません。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.PreserveEditMode">
      <summary>矢印キーまたはタブキーで前のセルから出た後に、セルの編集モードに入ることを指定するフラグを取得または設定します。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.Column.ShowButtons">
      <summary>セルにいつコンボボタンを表示するかを取得または設定します。</summary>
      <remarks>
        <para>
          デフォルトでは、列のセルにフォーカスがある場合にのみ、セルに編集ボタンが表示されます。 これは、
          <see cref="T:System.Windows.Forms.PropertyGrid" />コントロールの動作と同じです。
        </para>
        <para>
          <see cref="P:C1.Win.C1FlexGrid.Column.ShowButtons" />を
          <see cref="F:C1.Win.C1FlexGrid.ShowButtonsEnum.Always" />に設定すると、 列のセルにフォーカスがない場合でも、リストが関連付けられているセルに編集ボタンが表示されます。
        </para>
        <para>
          セルにリストを関連付ける方法については、
          <see cref="!:ComboList" />、
          <see cref="P:C1.Win.C1FlexGrid.RowCol.ComboList" />、 および
          <see cref="P:C1.Win.C1FlexGrid.RowCol.DataMap" />プロパティを参照してください。
        </para>
      </remarks>
    </member>
    <member name="F:C1.Win.C1FlexGrid.CellStyleEnum.FrozenAlternate">
      <summary>固定セル（編集と選択は可能、スクロールは不可）の偶数番号行のレンダリングに使用されるスタイル。</summary>
    </member>
    <member name="P:C1.Win.C1FlexGrid.CellStyleCollection.FrozenAlternate">
      <summary>固定セル（編集と選択は可能、スクロールは不可）の 1 行ごとの描画に使用されるスタイルを取得します。</summary>
      <remarks>
        このスタイルはデフォルトで空です。その場合、固定セルは、
        <see cref="P:C1.Win.C1FlexGrid.CellStyleCollection.Frozen" />スタイルでレンダリングされます。
      </remarks>
    </member>
    <member name="P:C1.Win.C1FlexGrid.C1FlexGridBase.C1SuperErrorProvider">
      <summary>コントロールのエラー状態を示すために使用される C1SuperErrorProvider オブジェクトを取得または設定します。</summary>
    </member>
  </members>
</doc>